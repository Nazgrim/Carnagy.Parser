/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!******************************!*\
  !*** ./wwwroot/app/index.js ***!
  \******************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _sidebar = __webpack_require__(/*! ../app/components/sidebar/sidebar.controller */ 1);
	
	var _sidebar2 = _interopRequireDefault(_sidebar);
	
	var _topmenu = __webpack_require__(/*! ../app/components/topmenu/topmenu.controller */ 2);
	
	var _topmenu2 = _interopRequireDefault(_topmenu);
	
	var _dealer = __webpack_require__(/*! ../app/dealers/dealer.controller */ 3);
	
	var _dealer2 = _interopRequireDefault(_dealer);
	
	var _car = __webpack_require__(/*! ../app/dealers/car.controller */ 4);
	
	var _car2 = _interopRequireDefault(_car);
	
	var _modalSimilarCar = __webpack_require__(/*! ../app/dealers/modalSimilarCar.controller */ 5);
	
	var _modalSimilarCar2 = _interopRequireDefault(_modalSimilarCar);
	
	var _dashboard = __webpack_require__(/*! ../app/dealers/dashboard.controller */ 6);
	
	var _dashboard2 = _interopRequireDefault(_dashboard);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	angular.module('carnagy', ['ui.router', 'ngAnimate', 'ngCookies', 'ngSanitize', 'ngResource', 'ui.bootstrap', 'ui.select', 'highcharts-ng', 'dealerModule', 'similarCarModule', 'carChartModule', 'powerBiModule', 'carWidgetsPanelModule', 'carInformationModule', 'carModule', 'priceTrendModule', 'countTrendModule', 'dealerCompetitorsModule', 'errSrcModule', 'ui.grid', 'ui.grid.edit', 'smart-table', 'accountModule', 'dealerHeaderModule', 'cgBusy']).controller('SidebarCtrl', _sidebar2.default).controller('DealerCtrl', _dealer2.default).controller('CarCtrl', _car2.default).controller('TopMenuCtrl', _topmenu2.default).controller('ModalSimilarCarCtrl', _modalSimilarCar2.default).controller('DashBoardCtrlfrom', _dashboard2.default).filter('myStrictFilter', function ($filter) {
	    return function (input, predicate) {
	        return $filter('filter')(input, predicate, true);
	    };
	}).filter('unique1', function () {
	    return function (arr, field) {
	        var o = {},
	            i,
	            l = arr.length,
	            r = [];
	        for (i = 0; i < l; i += 1) {
	            o[arr[i][field]] = arr[i];
	        }
	        for (i in o) {
	            r.push(o[i]);
	        }
	        return r;
	    };
	}).directive('iframeOnload', [function () {
	    return {
	        scope: {
	            callBack: '&iframeOnload'
	        },
	        link: function link(scope, element, attrs) {
	            element.on('load', function () {
	                return scope.callBack();
	            });
	        }
	    };
	}]).config(function ($stateProvider, $urlRouterProvider) {
	
	    $stateProvider.state('car', {
	        url: '/car/:carId/:stockCarId',
	        resolve: {
	            carId: function carId($stateParams) {
	                return $stateParams.carId;
	            },
	            stockCarId: function stockCarId($stateParams) {
	                return $stateParams.stockCarId;
	            }
	        },
	        templateUrl: 'app/dealers/car.html',
	        controller: 'CarCtrl'
	    }).state('dashboard', {
	        url: '/dashboard',
	        templateUrl: 'app/dealers/dashboard.html',
	        controller: 'DashBoardCtrlfrom'
	    }).state('dealer', {
	        url: '/dealer',
	        // resolve: {
	        //     dealer: function ($stateParams, dealerService) {
	        //         return dealerService.getDealerById();
	        //     },
	        // },
	        templateUrl: 'app/dealers/dealer.html',
	        controller: 'DealerCtrl'
	    });
	    $urlRouterProvider.otherwise('/dealer');
	});

/***/ },
/* 1 */
/*!**************************************************************!*\
  !*** ./wwwroot/app/components/sidebar/sidebar.controller.js ***!
  \**************************************************************/
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var SidebarCtrl = function SidebarCtrl($scope, accountService) {
	    _classCallCheck(this, SidebarCtrl);
	
	    $scope.user = accountService.getCurrentUser();
	    $(function () {
	        $('#sidebar-menu li ul').slideUp();
	
	        $('#sidebar-menu li').on('click', function (e) {
	            e.stopPropagation();
	            $('#sidebar-menu li.current-page').removeClass('current-page');
	            var link = $('a', this).attr('href');
	            if (!link) {
	                if ($(this).is('.active')) {
	                    $(this).removeClass('active');
	                    $('ul', this).slideUp();
	                } else {
	                    $('#sidebar-menu li').removeClass('active');
	                    $('#sidebar-menu li ul').slideUp();
	
	                    $(this).addClass('active');
	                    $('ul', this).slideDown();
	                }
	            } else {
	                if (!$(this).is('.buick')) {
	                    if ($(this).is('.active')) {
	                        $(this).removeClass('active');
	                        $('ul', this).slideUp();
	                    } else {
	                        $('#sidebar-menu li').removeClass('active');
	                        $('#sidebar-menu li ul').slideUp();
	
	                        $(this).addClass('active');
	                        $('ul', this).slideDown();
	                    }
	                }
	                $(this).addClass('current-page');
	            }
	        });
	    });
	};
	
	SidebarCtrl.$inject = ['$scope', 'accountService'];
	
	exports.default = SidebarCtrl;

/***/ },
/* 2 */
/*!**************************************************************!*\
  !*** ./wwwroot/app/components/topmenu/topmenu.controller.js ***!
  \**************************************************************/
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var TopMenuCtrl = function TopMenuCtrl($scope, accountService) {
	    _classCallCheck(this, TopMenuCtrl);
	
	    $scope.user = accountService.getCurrentUser();
	    $(function () {
	        $('#menu_toggle').click(function () {
	            if ($('body').hasClass('nav-md')) {
	                $('body').removeClass('nav-md').addClass('nav-sm');
	                $('.left_col').removeClass('scroll-view').removeAttr('style');
	                $('.sidebar-footer').hide();
	
	                if ($('#sidebar-menu li').hasClass('active')) {
	                    $('#sidebar-menu li.active').addClass('active-sm').removeClass('active');
	                }
	            } else {
	                $('body').removeClass('nav-sm').addClass('nav-md');
	                $('.sidebar-footer').show();
	
	                if ($('#sidebar-menu li').hasClass('active-sm')) {
	                    $('#sidebar-menu li.active-sm').addClass('active').removeClass('active-sm');
	                }
	            }
	        });
	    });
	};
	
	TopMenuCtrl.$inject = ['$scope', 'accountService'];
	
	exports.default = TopMenuCtrl;

/***/ },
/* 3 */
/*!**************************************************!*\
  !*** ./wwwroot/app/dealers/dealer.controller.js ***!
  \**************************************************/
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function unique(value, index, self) {
	  return self.indexOf(value) === index;
	}
	function initFilter(scope, cars, filter) {
	  filter.forEach(function (i) {
	    scope[i + 's'] = cars.map(function (c) {
	      return c[i];
	    }).filter(unique);
	  });
	}
	
	var DealerCtrl = function DealerCtrl($scope, highchartsNG, dealerService, uiGridConstants, $filter, accountService) {
	  _classCallCheck(this, DealerCtrl);
	
	  $scope.user = accountService.getCurrentUser();
	  $scope.showDetailed = function (car) {
	    if (car.isDetailed) car.isDetailed = false;else car.isDetailed = true;
	  };
	  $scope.isLoading = true;
	  $scope.itemsByPage = 10;
	  $scope.callServer = function (tableState) {
	    if ($scope.isLoading) {
	      dealerService.getDealerCars($scope.user.dealerId).then(function (dealerCars) {
	        initFilter($scope, dealerCars, ['year', 'make', 'model', 'bodyType', 'styleTrim', 'drivetrain']);
	        console.log(dealerCars.length);
	        tableState.pagination.numberOfPages = Math.ceil(dealerCars.length / $scope.itemsByPage);
	        $scope.dealerCars = dealerCars;
	        $scope.displayCollection = dealerCars.slice(0, $scope.itemsByPage);
	        $scope.isLoading = false;
	      });
	    } else {
	      var start = tableState.pagination.start || 0;
	      var filtered = $scope.dealerCars;
	      if (tableState.search.predicateObject) {
	        filtered = $filter('filter')($scope.dealerCars, tableState.search.predicateObject);
	      }
	
	      if (tableState.sort.predicate) {
	        filtered = $filter('orderBy')(filtered, tableState.sort.predicate, tableState.sort.reverse);
	      }
	
	      var result = filtered.slice(start, start + $scope.itemsByPage);
	      tableState.pagination.numberOfPages = Math.ceil(filtered.length / $scope.itemsByPage);
	      $scope.displayCollection = result;
	    }
	  };
	};
	
	DealerCtrl.$inject = ['$scope', 'highchartsNG', 'dealerService', 'uiGridConstants', '$filter', 'accountService'];
	
	exports.default = DealerCtrl;

/***/ },
/* 4 */
/*!***********************************************!*\
  !*** ./wwwroot/app/dealers/car.controller.js ***!
  \***********************************************/
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var CarCtrl = function CarCtrl($scope, carService, carId, stockCarId, highchartsNG) {
	    _classCallCheck(this, CarCtrl);
	
	    $scope.carId = carId;
	    $scope.stockCarId = stockCarId;
	    $scope.carInformationPromise = carService.getInformationById($scope.carId).$promise.then(function (carInformation) {
	        $scope.carInformation = carInformation;
	    });
	
	    $scope.$on('selectSeriesUp', function (event, data) {
	        $scope.$broadcast('selectSeriesDown', data);
	    });
	};
	
	CarCtrl.$inject = ['$scope', 'carService', 'carId', 'stockCarId', 'highchartsNG'];
	
	exports.default = CarCtrl;

/***/ },
/* 5 */
/*!***********************************************************!*\
  !*** ./wwwroot/app/dealers/modalSimilarCar.controller.js ***!
  \***********************************************************/
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ModalSimilarCarCtrl = function ModalSimilarCarCtrl($scope, $uibModalInstance, filterFilter, items, carService) {
	    _classCallCheck(this, ModalSimilarCarCtrl);
	
	    $scope.items = items;
	    $scope.ok = function () {
	        $uibModalInstance.close(filterFilter($scope.items, { checked: true }));
	    };
	
	    $scope.cancel = function () {
	        $uibModalInstance.dismiss('cancel');
	    };
	};
	
	ModalSimilarCarCtrl.$inject = ['$scope', '$uibModalInstance', 'filterFilter', 'items', 'carService'];
	
	exports.default = ModalSimilarCarCtrl;

/***/ },
/* 6 */
/*!*****************************************************!*\
  !*** ./wwwroot/app/dealers/dashboard.controller.js ***!
  \*****************************************************/
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var DashBoardCtrl = function DashBoardCtrl($scope, $sce, powerBiService) {
	    //var iframe = $("#iFrameEmbedDashboard");
	    //if (iframe) {
	    //    iframe.css("min-height", $(window).height()-88);
	    //}
	    //var token;
	    //$scope.iframeLoadedCallBack = function(){
	    //    var m = { action: "loadDashboard", accessToken: token.access_token
	    //    };
	    //    var message = JSON.stringify(m);
	
	    //    // push the message.
	    //    var iframe = document.getElementById('iFrameEmbedDashboard');
	    //    iframe.contentWindow.postMessage(message, "*");
	    //}
	    //powerBiService.getToken().then(function(token1) {
	    //    token = token1;
	    //    powerBiService.getDashboard(token.access_token).then(function(dasboard) {
	    //        $scope.url = $sce.trustAsResourceUrl(dasboard.embedUrl);
	    //    });            
	    //});
	
	    _classCallCheck(this, DashBoardCtrl);
	};
	
	DashBoardCtrl.$inject = ['$scope', '$sce', 'powerBiService'];
	
	exports.default = DashBoardCtrl;

/***/ }
/******/ ]);
//# sourceMappingURL=index.min.js.map
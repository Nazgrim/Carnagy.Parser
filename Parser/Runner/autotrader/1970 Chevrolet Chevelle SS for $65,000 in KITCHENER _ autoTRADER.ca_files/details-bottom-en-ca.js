/* Minification failed. Returning unminified contents.
(19222,21): run-time error JS1004: Expected ';'
(19222,31-33): run-time error JS1195: Expected expression: ||
(19222,57): run-time error JS1004: Expected ';'
 */
/*! jQuery UI - v1.9.2 - 2012-11-23
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.ui.effect.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js, jquery.ui.menu.js, jquery.ui.position.js, jquery.ui.progressbar.js, jquery.ui.slider.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.tooltip.js
* Copyright 2012 jQuery Foundation and other contributors; Licensed MIT */
(function(e,t){function i(t,n){var r,i,o,u=t.nodeName.toLowerCase();return"area"===u?(r=t.parentNode,i=r.name,!t.href||!i||r.nodeName.toLowerCase()!=="map"?!1:(o=e("img[usemap=#"+i+"]")[0],!!o&&s(o))):(/input|select|textarea|button|object/.test(u)?!t.disabled:"a"===u?t.href||n:n)&&s(t)}function s(t){return e.expr.filters.visible(t)&&!e(t).parents().andSelf().filter(function(){return e.css(this,"visibility")==="hidden"}).length}var n=0,r=/^ui-id-\d+$/;e.ui=e.ui||{};if(e.ui.version)return;e.extend(e.ui,{version:"1.9.2",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({_focus:e.fn.focus,focus:function(t,n){return typeof t=="number"?this.each(function(){var r=this;setTimeout(function(){e(r).focus(),n&&n.call(r)},t)}):this._focus.apply(this,arguments)},scrollParent:function(){var t;return e.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?t=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,"position"))&&/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0):t=this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!t.length?e(document):t},zIndex:function(n){if(n!==t)return this.css("zIndex",n);if(this.length){var r=e(this[0]),i,s;while(r.length&&r[0]!==document){i=r.css("position");if(i==="absolute"||i==="relative"||i==="fixed"){s=parseInt(r.css("zIndex"),10);if(!isNaN(s)&&s!==0)return s}r=r.parent()}}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++n)})},removeUniqueId:function(){return this.each(function(){r.test(this.id)&&e(this).removeAttr("id")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(n){return!!e.data(n,t)}}):function(t,n,r){return!!e.data(t,r[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,"tabindex")))},tabbable:function(t){var n=e.attr(t,"tabindex"),r=isNaN(n);return(r||n>=0)&&i(t,!r)}}),e(function(){var t=document.body,n=t.appendChild(n=document.createElement("div"));n.offsetHeight,e.extend(n.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),e.support.minHeight=n.offsetHeight===100,e.support.selectstart="onselectstart"in n,t.removeChild(n).style.display="none"}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(n,r){function u(t,n,r,s){return e.each(i,function(){n-=parseFloat(e.css(t,"padding"+this))||0,r&&(n-=parseFloat(e.css(t,"border"+this+"Width"))||0),s&&(n-=parseFloat(e.css(t,"margin"+this))||0)}),n}var i=r==="Width"?["Left","Right"]:["Top","Bottom"],s=r.toLowerCase(),o={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+r]=function(n){return n===t?o["inner"+r].call(this):this.each(function(){e(this).css(s,u(this,n)+"px")})},e.fn["outer"+r]=function(t,n){return typeof t!="number"?o["outer"+r].call(this,t):this.each(function(){e(this).css(s,u(this,t,!0,n)+"px")})}}),e("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(e.fn.removeData=function(t){return function(n){return arguments.length?t.call(this,e.camelCase(n)):t.call(this)}}(e.fn.removeData)),function(){var t=/msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase())||[];e.ui.ie=t.length?!0:!1,e.ui.ie6=parseFloat(t[1],10)===6}(),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),e.extend(e.ui,{plugin:{add:function(t,n,r){var i,s=e.ui[t].prototype;for(i in r)s.plugins[i]=s.plugins[i]||[],s.plugins[i].push([n,r[i]])},call:function(e,t,n){var r,i=e.plugins[t];if(!i||!e.element[0].parentNode||e.element[0].parentNode.nodeType===11)return;for(r=0;r<i.length;r++)e.options[i[r][0]]&&i[r][1].apply(e.element,n)}},contains:e.contains,hasScroll:function(t,n){if(e(t).css("overflow")==="hidden")return!1;var r=n&&n==="left"?"scrollLeft":"scrollTop",i=!1;return t[r]>0?!0:(t[r]=1,i=t[r]>0,t[r]=0,i)},isOverAxis:function(e,t,n){return e>t&&e<t+n},isOver:function(t,n,r,i,s,o){return e.ui.isOverAxis(t,r,s)&&e.ui.isOverAxis(n,i,o)}})})(jQuery),function(e,t){var n=0,r=Array.prototype.slice,i=e.cleanData;e.cleanData=function(t){for(var n=0,r;(r=t[n])!=null;n++)try{e(r).triggerHandler("remove")}catch(s){}i(t)},e.widget=function(t,n,r){var i,s,o,u,a=t.split(".")[0];t=t.split(".")[1],i=a+"-"+t,r||(r=n,n=e.Widget),e.expr[":"][i.toLowerCase()]=function(t){return!!e.data(t,i)},e[a]=e[a]||{},s=e[a][t],o=e[a][t]=function(e,t){if(!this._createWidget)return new o(e,t);arguments.length&&this._createWidget(e,t)},e.extend(o,s,{version:r.version,_proto:e.extend({},r),_childConstructors:[]}),u=new n,u.options=e.widget.extend({},u.options),e.each(r,function(t,i){e.isFunction(i)&&(r[t]=function(){var e=function(){return n.prototype[t].apply(this,arguments)},r=function(e){return n.prototype[t].apply(this,e)};return function(){var t=this._super,n=this._superApply,s;return this._super=e,this._superApply=r,s=i.apply(this,arguments),this._super=t,this._superApply=n,s}}())}),o.prototype=e.widget.extend(u,{widgetEventPrefix:s?u.widgetEventPrefix:t},r,{constructor:o,namespace:a,widgetName:t,widgetBaseClass:i,widgetFullName:i}),s?(e.each(s._childConstructors,function(t,n){var r=n.prototype;e.widget(r.namespace+"."+r.widgetName,o,n._proto)}),delete s._childConstructors):n._childConstructors.push(o),e.widget.bridge(t,o)},e.widget.extend=function(n){var i=r.call(arguments,1),s=0,o=i.length,u,a;for(;s<o;s++)for(u in i[s])a=i[s][u],i[s].hasOwnProperty(u)&&a!==t&&(e.isPlainObject(a)?n[u]=e.isPlainObject(n[u])?e.widget.extend({},n[u],a):e.widget.extend({},a):n[u]=a);return n},e.widget.bridge=function(n,i){var s=i.prototype.widgetFullName||n;e.fn[n]=function(o){var u=typeof o=="string",a=r.call(arguments,1),f=this;return o=!u&&a.length?e.widget.extend.apply(null,[o].concat(a)):o,u?this.each(function(){var r,i=e.data(this,s);if(!i)return e.error("cannot call methods on "+n+" prior to initialization; "+"attempted to call method '"+o+"'");if(!e.isFunction(i[o])||o.charAt(0)==="_")return e.error("no such method '"+o+"' for "+n+" widget instance");r=i[o].apply(i,a);if(r!==i&&r!==t)return f=r&&r.jquery?f.pushStack(r.get()):r,!1}):this.each(function(){var t=e.data(this,s);t?t.option(o||{})._init():e.data(this,s,new i(o,this))}),f}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(t,r){r=e(r||this.defaultElement||this)[0],this.element=e(r),this.uuid=n++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this.bindings=e(),this.hoverable=e(),this.focusable=e(),r!==this&&(e.data(r,this.widgetName,this),e.data(r,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===r&&this.destroy()}}),this.document=e(r.style?r.ownerDocument:r.document||r),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:e.noop,widget:function(){return this.element},option:function(n,r){var i=n,s,o,u;if(arguments.length===0)return e.widget.extend({},this.options);if(typeof n=="string"){i={},s=n.split("."),n=s.shift();if(s.length){o=i[n]=e.widget.extend({},this.options[n]);for(u=0;u<s.length-1;u++)o[s[u]]=o[s[u]]||{},o=o[s[u]];n=s.pop();if(r===t)return o[n]===t?null:o[n];o[n]=r}else{if(r===t)return this.options[n]===t?null:this.options[n];i[n]=r}}return this._setOptions(i),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,e==="disabled"&&(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!t).attr("aria-disabled",t),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(t,n,r){var i,s=this;typeof t!="boolean"&&(r=n,n=t,t=!1),r?(n=i=e(n),this.bindings=this.bindings.add(n)):(r=n,n=this.element,i=this.widget()),e.each(r,function(r,o){function u(){if(!t&&(s.options.disabled===!0||e(this).hasClass("ui-state-disabled")))return;return(typeof o=="string"?s[o]:o).apply(s,arguments)}typeof o!="string"&&(u.guid=o.guid=o.guid||u.guid||e.guid++);var a=r.match(/^(\w+)\s*(.*)$/),f=a[1]+s.eventNamespace,l=a[2];l?i.delegate(l,f,u):n.bind(f,u)})},_off:function(e,t){t=(t||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.unbind(t).undelegate(t)},_delay:function(e,t){function n(){return(typeof e=="string"?r[e]:e).apply(r,arguments)}var r=this;return setTimeout(n,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass("ui-state-hover")},mouseleave:function(t){e(t.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass("ui-state-focus")},focusout:function(t){e(t.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(t,n,r){var i,s,o=this.options[t];r=r||{},n=e.Event(n),n.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),n.target=this.element[0],s=n.originalEvent;if(s)for(i in s)i in n||(n[i]=s[i]);return this.element.trigger(n,r),!(e.isFunction(o)&&o.apply(this.element[0],[n].concat(r))===!1||n.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,n){e.Widget.prototype["_"+t]=function(r,i,s){typeof i=="string"&&(i={effect:i});var o,u=i?i===!0||typeof i=="number"?n:i.effect||n:t;i=i||{},typeof i=="number"&&(i={duration:i}),o=!e.isEmptyObject(i),i.complete=s,i.delay&&r.delay(i.delay),o&&e.effects&&(e.effects.effect[u]||e.uiBackCompat!==!1&&e.effects[u])?r[t](i):u!==t&&r[u]?r[u](i.duration,i.easing,s):r.queue(function(n){e(this)[t](),s&&s.call(r[0]),n()})}}),e.uiBackCompat!==!1&&(e.Widget.prototype._getCreateOptions=function(){return e.metadata&&e.metadata.get(this.element[0])[this.widgetName]})}(jQuery),function(e,t){var n=!1;e(document).mouseup(function(e){n=!1}),e.widget("ui.mouse",{version:"1.9.2",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).bind("click."+this.widgetName,function(n){if(!0===e.data(n.target,t.widgetName+".preventClickEvent"))return e.removeData(n.target,t.widgetName+".preventClickEvent"),n.stopImmediatePropagation(),!1}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(n)return;this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var r=this,i=t.which===1,s=typeof this.options.cancel=="string"&&t.target.nodeName?e(t.target).closest(this.options.cancel).length:!1;if(!i||s||!this._mouseCapture(t))return!0;this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){r.mouseDelayMet=!0},this.options.delay));if(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)){this._mouseStarted=this._mouseStart(t)!==!1;if(!this._mouseStarted)return t.preventDefault(),!0}return!0===e.data(t.target,this.widgetName+".preventClickEvent")&&e.removeData(t.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return r._mouseMove(e)},this._mouseUpDelegate=function(e){return r._mouseUp(e)},e(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),t.preventDefault(),n=!0,!0},_mouseMove:function(t){return!e.ui.ie||document.documentMode>=9||!!t.button?this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted):this._mouseUp(t)},_mouseUp:function(t){return e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(e){return this.mouseDelayMet},_mouseStart:function(e){},_mouseDrag:function(e){},_mouseStop:function(e){},_mouseCapture:function(e){return!0}})}(jQuery),function(e,t){e.widget("ui.draggable",e.ui.mouse,{version:"1.9.2",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1},_create:function(){this.options.helper=="original"&&!/^(?:r|a|f)/.test(this.element.css("position"))&&(this.element[0].style.position="relative"),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._mouseInit()},_destroy:function(){this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._mouseDestroy()},_mouseCapture:function(t){var n=this.options;return this.helper||n.disabled||e(t.target).is(".ui-resizable-handle")?!1:(this.handle=this._getHandle(t),this.handle?(e(n.iframeFix===!0?"iframe":n.iframeFix).each(function(){e('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1e3}).css(e(this).offset()).appendTo("body")}),!0):!1)},_mouseStart:function(t){var n=this.options;return this.helper=this._createHelper(t),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),e.ui.ddmanager&&(e.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,n.cursorAt&&this._adjustOffsetFromHelper(n.cursorAt),n.containment&&this._setContainment(),this._trigger("start",t)===!1?(this._clear(),!1):(this._cacheHelperProportions(),e.ui.ddmanager&&!n.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this._mouseDrag(t,!0),e.ui.ddmanager&&e.ui.ddmanager.dragStart(this,t),!0)},_mouseDrag:function(t,n){this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute");if(!n){var r=this._uiHash();if(this._trigger("drag",t,r)===!1)return this._mouseUp({}),!1;this.position=r.position}if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";return e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),!1},_mouseStop:function(t){var n=!1;e.ui.ddmanager&&!this.options.dropBehaviour&&(n=e.ui.ddmanager.drop(this,t)),this.dropped&&(n=this.dropped,this.dropped=!1);var r=this.element[0],i=!1;while(r&&(r=r.parentNode))r==document&&(i=!0);if(!i&&this.options.helper==="original")return!1;if(this.options.revert=="invalid"&&!n||this.options.revert=="valid"&&n||this.options.revert===!0||e.isFunction(this.options.revert)&&this.options.revert.call(this.element,n)){var s=this;e(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){s._trigger("stop",t)!==!1&&s._clear()})}else this._trigger("stop",t)!==!1&&this._clear();return!1},_mouseUp:function(t){return e("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)}),e.ui.ddmanager&&e.ui.ddmanager.dragStop(this,t),e.ui.mouse.prototype._mouseUp.call(this,t)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(t){var n=!this.options.handle||!e(this.options.handle,this.element).length?!0:!1;return e(this.options.handle,this.element).find("*").andSelf().each(function(){this==t.target&&(n=!0)}),n},_createHelper:function(t){var n=this.options,r=e.isFunction(n.helper)?e(n.helper.apply(this.element[0],[t])):n.helper=="clone"?this.element.clone().removeAttr("id"):this.element;return r.parents("body").length||r.appendTo(n.appendTo=="parent"?this.element[0].parentNode:n.appendTo),r[0]!=this.element[0]&&!/(fixed|absolute)/.test(r.css("position"))&&r.css("position","absolute"),r},_adjustOffsetFromHelper:function(t){typeof t=="string"&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&e.ui.ie)t={top:0,left:0};return{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var e=this.element.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t=this.options;t.containment=="parent"&&(t.containment=this.helper[0].parentNode);if(t.containment=="document"||t.containment=="window")this.containment=[t.containment=="document"?0:e(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t.containment=="document"?0:e(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,(t.containment=="document"?0:e(window).scrollLeft())+e(t.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(t.containment=="document"?0:e(window).scrollTop())+(e(t.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(t.containment)&&t.containment.constructor!=Array){var n=e(t.containment),r=n[0];if(!r)return;var i=n.offset(),s=e(r).css("overflow")!="hidden";this.containment=[(parseInt(e(r).css("borderLeftWidth"),10)||0)+(parseInt(e(r).css("paddingLeft"),10)||0),(parseInt(e(r).css("borderTopWidth"),10)||0)+(parseInt(e(r).css("paddingTop"),10)||0),(s?Math.max(r.scrollWidth,r.offsetWidth):r.offsetWidth)-(parseInt(e(r).css("borderLeftWidth"),10)||0)-(parseInt(e(r).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(s?Math.max(r.scrollHeight,r.offsetHeight):r.offsetHeight)-(parseInt(e(r).css("borderTopWidth"),10)||0)-(parseInt(e(r).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=n}else t.containment.constructor==Array&&(this.containment=t.containment)},_convertPositionTo:function(t,n){n||(n=this.position);var r=t=="absolute"?1:-1,i=this.options,s=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(s[0].tagName);return{top:n.top+this.offset.relative.top*r+this.offset.parent.top*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():o?0:s.scrollTop())*r,left:n.left+this.offset.relative.left*r+this.offset.parent.left*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():o?0:s.scrollLeft())*r}},_generatePosition:function(t){var n=this.options,r=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,i=/(html|body)/i.test(r[0].tagName),s=t.pageX,o=t.pageY;if(this.originalPosition){var u;if(this.containment){if(this.relative_container){var a=this.relative_container.offset();u=[this.containment[0]+a.left,this.containment[1]+a.top,this.containment[2]+a.left,this.containment[3]+a.top]}else u=this.containment;t.pageX-this.offset.click.left<u[0]&&(s=u[0]+this.offset.click.left),t.pageY-this.offset.click.top<u[1]&&(o=u[1]+this.offset.click.top),t.pageX-this.offset.click.left>u[2]&&(s=u[2]+this.offset.click.left),t.pageY-this.offset.click.top>u[3]&&(o=u[3]+this.offset.click.top)}if(n.grid){var f=n.grid[1]?this.originalPageY+Math.round((o-this.originalPageY)/n.grid[1])*n.grid[1]:this.originalPageY;o=u?f-this.offset.click.top<u[1]||f-this.offset.click.top>u[3]?f-this.offset.click.top<u[1]?f+n.grid[1]:f-n.grid[1]:f:f;var l=n.grid[0]?this.originalPageX+Math.round((s-this.originalPageX)/n.grid[0])*n.grid[0]:this.originalPageX;s=u?l-this.offset.click.left<u[0]||l-this.offset.click.left>u[2]?l-this.offset.click.left<u[0]?l+n.grid[0]:l-n.grid[0]:l:l}}return{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():i?0:r.scrollTop()),left:s-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():i?0:r.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]!=this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(t,n,r){return r=r||this._uiHash(),e.ui.plugin.call(this,t,[n,r]),t=="drag"&&(this.positionAbs=this._convertPositionTo("absolute")),e.Widget.prototype._trigger.call(this,t,n,r)},plugins:{},_uiHash:function(e){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),e.ui.plugin.add("draggable","connectToSortable",{start:function(t,n){var r=e(this).data("draggable"),i=r.options,s=e.extend({},n,{item:r.element});r.sortables=[],e(i.connectToSortable).each(function(){var n=e.data(this,"sortable");n&&!n.options.disabled&&(r.sortables.push({instance:n,shouldRevert:n.options.revert}),n.refreshPositions(),n._trigger("activate",t,s))})},stop:function(t,n){var r=e(this).data("draggable"),i=e.extend({},n,{item:r.element});e.each(r.sortables,function(){this.instance.isOver?(this.instance.isOver=0,r.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=!0),this.instance._mouseStop(t),this.instance.options.helper=this.instance.options._helper,r.options.helper=="original"&&this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger("deactivate",t,i))})},drag:function(t,n){var r=e(this).data("draggable"),i=this,s=function(t){var n=this.offset.click.top,r=this.offset.click.left,i=this.positionAbs.top,s=this.positionAbs.left,o=t.height,u=t.width,a=t.top,f=t.left;return e.ui.isOver(i+n,s+r,a,f,o,u)};e.each(r.sortables,function(s){var o=!1,u=this;this.instance.positionAbs=r.positionAbs,this.instance.helperProportions=r.helperProportions,this.instance.offset.click=r.offset.click,this.instance._intersectsWith(this.instance.containerCache)&&(o=!0,e.each(r.sortables,function(){return this.instance.positionAbs=r.positionAbs,this.instance.helperProportions=r.helperProportions,this.instance.offset.click=r.offset.click,this!=u&&this.instance._intersectsWith(this.instance.containerCache)&&e.ui.contains(u.instance.element[0],this.instance.element[0])&&(o=!1),o})),o?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=e(i).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return n.helper[0]},t.target=this.instance.currentItem[0],this.instance._mouseCapture(t,!0),this.instance._mouseStart(t,!0,!0),this.instance.offset.click.top=r.offset.click.top,this.instance.offset.click.left=r.offset.click.left,this.instance.offset.parent.left-=r.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=r.offset.parent.top-this.instance.offset.parent.top,r._trigger("toSortable",t),r.dropped=this.instance.element,r.currentItem=r.element,this.instance.fromOutside=r),this.instance.currentItem&&this.instance._mouseDrag(t)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",t,this.instance._uiHash(this.instance)),this.instance._mouseStop(t,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),r._trigger("fromSortable",t),r.dropped=!1)})}}),e.ui.plugin.add("draggable","cursor",{start:function(t,n){var r=e("body"),i=e(this).data("draggable").options;r.css("cursor")&&(i._cursor=r.css("cursor")),r.css("cursor",i.cursor)},stop:function(t,n){var r=e(this).data("draggable").options;r._cursor&&e("body").css("cursor",r._cursor)}}),e.ui.plugin.add("draggable","opacity",{start:function(t,n){var r=e(n.helper),i=e(this).data("draggable").options;r.css("opacity")&&(i._opacity=r.css("opacity")),r.css("opacity",i.opacity)},stop:function(t,n){var r=e(this).data("draggable").options;r._opacity&&e(n.helper).css("opacity",r._opacity)}}),e.ui.plugin.add("draggable","scroll",{start:function(t,n){var r=e(this).data("draggable");r.scrollParent[0]!=document&&r.scrollParent[0].tagName!="HTML"&&(r.overflowOffset=r.scrollParent.offset())},drag:function(t,n){var r=e(this).data("draggable"),i=r.options,s=!1;if(r.scrollParent[0]!=document&&r.scrollParent[0].tagName!="HTML"){if(!i.axis||i.axis!="x")r.overflowOffset.top+r.scrollParent[0].offsetHeight-t.pageY<i.scrollSensitivity?r.scrollParent[0].scrollTop=s=r.scrollParent[0].scrollTop+i.scrollSpeed:t.pageY-r.overflowOffset.top<i.scrollSensitivity&&(r.scrollParent[0].scrollTop=s=r.scrollParent[0].scrollTop-i.scrollSpeed);if(!i.axis||i.axis!="y")r.overflowOffset.left+r.scrollParent[0].offsetWidth-t.pageX<i.scrollSensitivity?r.scrollParent[0].scrollLeft=s=r.scrollParent[0].scrollLeft+i.scrollSpeed:t.pageX-r.overflowOffset.left<i.scrollSensitivity&&(r.scrollParent[0].scrollLeft=s=r.scrollParent[0].scrollLeft-i.scrollSpeed)}else{if(!i.axis||i.axis!="x")t.pageY-e(document).scrollTop()<i.scrollSensitivity?s=e(document).scrollTop(e(document).scrollTop()-i.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<i.scrollSensitivity&&(s=e(document).scrollTop(e(document).scrollTop()+i.scrollSpeed));if(!i.axis||i.axis!="y")t.pageX-e(document).scrollLeft()<i.scrollSensitivity?s=e(document).scrollLeft(e(document).scrollLeft()-i.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<i.scrollSensitivity&&(s=e(document).scrollLeft(e(document).scrollLeft()+i.scrollSpeed))}s!==!1&&e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(r,t)}}),e.ui.plugin.add("draggable","snap",{start:function(t,n){var r=e(this).data("draggable"),i=r.options;r.snapElements=[],e(i.snap.constructor!=String?i.snap.items||":data(draggable)":i.snap).each(function(){var t=e(this),n=t.offset();this!=r.element[0]&&r.snapElements.push({item:this,width:t.outerWidth(),height:t.outerHeight(),top:n.top,left:n.left})})},drag:function(t,n){var r=e(this).data("draggable"),i=r.options,s=i.snapTolerance,o=n.offset.left,u=o+r.helperProportions.width,a=n.offset.top,f=a+r.helperProportions.height;for(var l=r.snapElements.length-1;l>=0;l--){var c=r.snapElements[l].left,h=c+r.snapElements[l].width,p=r.snapElements[l].top,d=p+r.snapElements[l].height;if(!(c-s<o&&o<h+s&&p-s<a&&a<d+s||c-s<o&&o<h+s&&p-s<f&&f<d+s||c-s<u&&u<h+s&&p-s<a&&a<d+s||c-s<u&&u<h+s&&p-s<f&&f<d+s)){r.snapElements[l].snapping&&r.options.snap.release&&r.options.snap.release.call(r.element,t,e.extend(r._uiHash(),{snapItem:r.snapElements[l].item})),r.snapElements[l].snapping=!1;continue}if(i.snapMode!="inner"){var v=Math.abs(p-f)<=s,m=Math.abs(d-a)<=s,g=Math.abs(c-u)<=s,y=Math.abs(h-o)<=s;v&&(n.position.top=r._convertPositionTo("relative",{top:p-r.helperProportions.height,left:0}).top-r.margins.top),m&&(n.position.top=r._convertPositionTo("relative",{top:d,left:0}).top-r.margins.top),g&&(n.position.left=r._convertPositionTo("relative",{top:0,left:c-r.helperProportions.width}).left-r.margins.left),y&&(n.position.left=r._convertPositionTo("relative",{top:0,left:h}).left-r.margins.left)}var b=v||m||g||y;if(i.snapMode!="outer"){var v=Math.abs(p-a)<=s,m=Math.abs(d-f)<=s,g=Math.abs(c-o)<=s,y=Math.abs(h-u)<=s;v&&(n.position.top=r._convertPositionTo("relative",{top:p,left:0}).top-r.margins.top),m&&(n.position.top=r._convertPositionTo("relative",{top:d-r.helperProportions.height,left:0}).top-r.margins.top),g&&(n.position.left=r._convertPositionTo("relative",{top:0,left:c}).left-r.margins.left),y&&(n.position.left=r._convertPositionTo("relative",{top:0,left:h-r.helperProportions.width}).left-r.margins.left)}!r.snapElements[l].snapping&&(v||m||g||y||b)&&r.options.snap.snap&&r.options.snap.snap.call(r.element,t,e.extend(r._uiHash(),{snapItem:r.snapElements[l].item})),r.snapElements[l].snapping=v||m||g||y||b}}}),e.ui.plugin.add("draggable","stack",{start:function(t,n){var r=e(this).data("draggable").options,i=e.makeArray(e(r.stack)).sort(function(t,n){return(parseInt(e(t).css("zIndex"),10)||0)-(parseInt(e(n).css("zIndex"),10)||0)});if(!i.length)return;var s=parseInt(i[0].style.zIndex)||0;e(i).each(function(e){this.style.zIndex=s+e}),this[0].style.zIndex=s+i.length}}),e.ui.plugin.add("draggable","zIndex",{start:function(t,n){var r=e(n.helper),i=e(this).data("draggable").options;r.css("zIndex")&&(i._zIndex=r.css("zIndex")),r.css("zIndex",i.zIndex)},stop:function(t,n){var r=e(this).data("draggable").options;r._zIndex&&e(n.helper).css("zIndex",r._zIndex)}})}(jQuery),function(e,t){e.widget("ui.droppable",{version:"1.9.2",widgetEventPrefix:"drop",options:{accept:"*",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:"default",tolerance:"intersect"},_create:function(){var t=this.options,n=t.accept;this.isover=0,this.isout=1,this.accept=e.isFunction(n)?n:function(e){return e.is(n)},this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight},e.ui.ddmanager.droppables[t.scope]=e.ui.ddmanager.droppables[t.scope]||[],e.ui.ddmanager.droppables[t.scope].push(this),t.addClasses&&this.element.addClass("ui-droppable")},_destroy:function(){var t=e.ui.ddmanager.droppables[this.options.scope];for(var n=0;n<t.length;n++)t[n]==this&&t.splice(n,1);this.element.removeClass("ui-droppable ui-droppable-disabled")},_setOption:function(t,n){t=="accept"&&(this.accept=e.isFunction(n)?n:function(e){return e.is(n)}),e.Widget.prototype._setOption.apply(this,arguments)},_activate:function(t){var n=e.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),n&&this._trigger("activate",t,this.ui(n))},_deactivate:function(t){var n=e.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),n&&this._trigger("deactivate",t,this.ui(n))},_over:function(t){var n=e.ui.ddmanager.current;if(!n||(n.currentItem||n.element)[0]==this.element[0])return;this.accept.call(this.element[0],n.currentItem||n.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger("over",t,this.ui(n)))},_out:function(t){var n=e.ui.ddmanager.current;if(!n||(n.currentItem||n.element)[0]==this.element[0])return;this.accept.call(this.element[0],n.currentItem||n.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("out",t,this.ui(n)))},_drop:function(t,n){var r=n||e.ui.ddmanager.current;if(!r||(r.currentItem||r.element)[0]==this.element[0])return!1;var i=!1;return this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function(){var t=e.data(this,"droppable");if(t.options.greedy&&!t.options.disabled&&t.options.scope==r.options.scope&&t.accept.call(t.element[0],r.currentItem||r.element)&&e.ui.intersect(r,e.extend(t,{offset:t.element.offset()}),t.options.tolerance))return i=!0,!1}),i?!1:this.accept.call(this.element[0],r.currentItem||r.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("drop",t,this.ui(r)),this.element):!1},ui:function(e){return{draggable:e.currentItem||e.element,helper:e.helper,position:e.position,offset:e.positionAbs}}}),e.ui.intersect=function(t,n,r){if(!n.offset)return!1;var i=(t.positionAbs||t.position.absolute).left,s=i+t.helperProportions.width,o=(t.positionAbs||t.position.absolute).top,u=o+t.helperProportions.height,a=n.offset.left,f=a+n.proportions.width,l=n.offset.top,c=l+n.proportions.height;switch(r){case"fit":return a<=i&&s<=f&&l<=o&&u<=c;case"intersect":return a<i+t.helperProportions.width/2&&s-t.helperProportions.width/2<f&&l<o+t.helperProportions.height/2&&u-t.helperProportions.height/2<c;case"pointer":var h=(t.positionAbs||t.position.absolute).left+(t.clickOffset||t.offset.click).left,p=(t.positionAbs||t.position.absolute).top+(t.clickOffset||t.offset.click).top,d=e.ui.isOver(p,h,l,a,n.proportions.height,n.proportions.width);return d;case"touch":return(o>=l&&o<=c||u>=l&&u<=c||o<l&&u>c)&&(i>=a&&i<=f||s>=a&&s<=f||i<a&&s>f);default:return!1}},e.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(t,n){var r=e.ui.ddmanager.droppables[t.options.scope]||[],i=n?n.type:null,s=(t.currentItem||t.element).find(":data(droppable)").andSelf();e:for(var o=0;o<r.length;o++){if(r[o].options.disabled||t&&!r[o].accept.call(r[o].element[0],t.currentItem||t.element))continue;for(var u=0;u<s.length;u++)if(s[u]==r[o].element[0]){r[o].proportions.height=0;continue e}r[o].visible=r[o].element.css("display")!="none";if(!r[o].visible)continue;i=="mousedown"&&r[o]._activate.call(r[o],n),r[o].offset=r[o].element.offset(),r[o].proportions={width:r[o].element[0].offsetWidth,height:r[o].element[0].offsetHeight}}},drop:function(t,n){var r=!1;return e.each(e.ui.ddmanager.droppables[t.options.scope]||[],function(){if(!this.options)return;!this.options.disabled&&this.visible&&e.ui.intersect(t,this,this.options.tolerance)&&(r=this._drop.call(this,n)||r),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],t.currentItem||t.element)&&(this.isout=1,this.isover=0,this._deactivate.call(this,n))}),r},dragStart:function(t,n){t.element.parentsUntil("body").bind("scroll.droppable",function(){t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,n)})},drag:function(t,n){t.options.refreshPositions&&e.ui.ddmanager.prepareOffsets(t,n),e.each(e.ui.ddmanager.droppables[t.options.scope]||[],function(){if(this.options.disabled||this.greedyChild||!this.visible)return;var r=e.ui.intersect(t,this,this.options.tolerance),i=!r&&this.isover==1?"isout":r&&this.isover==0?"isover":null;if(!i)return;var s;if(this.options.greedy){var o=this.options.scope,u=this.element.parents(":data(droppable)").filter(function(){return e.data(this,"droppable").options.scope===o});u.length&&(s=e.data(u[0],"droppable"),s.greedyChild=i=="isover"?1:0)}s&&i=="isover"&&(s.isover=0,s.isout=1,s._out.call(s,n)),this[i]=1,this[i=="isout"?"isover":"isout"]=0,this[i=="isover"?"_over":"_out"].call(this,n),s&&i=="isout"&&(s.isout=0,s.isover=1,s._over.call(s,n))})},dragStop:function(t,n){t.element.parentsUntil("body").unbind("scroll.droppable"),t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,n)}}}(jQuery),function(e,t){e.widget("ui.resizable",e.ui.mouse,{version:"1.9.2",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1e3},_create:function(){var t=this,n=this.options;this.element.addClass("ui-resizable"),e.extend(this,{_aspectRatio:!!n.aspectRatio,aspectRatio:n.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:n.helper||n.ghost||n.animate?n.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(e('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("resizable",this.element.data("resizable")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=n.handles||(e(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se");if(this.handles.constructor==String){this.handles=="all"&&(this.handles="n,e,s,w,se,sw,ne,nw");var r=this.handles.split(",");this.handles={};for(var i=0;i<r.length;i++){var s=e.trim(r[i]),o="ui-resizable-"+s,u=e('<div class="ui-resizable-handle '+o+'"></div>');u.css({zIndex:n.zIndex}),"se"==s&&u.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[s]=".ui-resizable-"+s,this.element.append(u)}}this._renderAxis=function(t){t=t||this.element;for(var n in this.handles){this.handles[n].constructor==String&&(this.handles[n]=e(this.handles[n],this.element).show());if(this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var r=e(this.handles[n],this.element),i=0;i=/sw|ne|nw|se|n|s/.test(n)?r.outerHeight():r.outerWidth();var s=["padding",/ne|nw|n/.test(n)?"Top":/se|sw|s/.test(n)?"Bottom":/^e$/.test(n)?"Right":"Left"].join("");t.css(s,i),this._proportionallyResize()}if(!e(this.handles[n]).length)continue}},this._renderAxis(this.element),this._handles=e(".ui-resizable-handle",this.element).disableSelection(),this._handles.mouseover(function(){if(!t.resizing){if(this.className)var e=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);t.axis=e&&e[1]?e[1]:"se"}}),n.autoHide&&(this._handles.hide(),e(this.element).addClass("ui-resizable-autohide").mouseenter(function(){if(n.disabled)return;e(this).removeClass("ui-resizable-autohide"),t._handles.show()}).mouseleave(function(){if(n.disabled)return;t.resizing||(e(this).addClass("ui-resizable-autohide"),t._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var t=function(t){e(t).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};if(this.elementIsWrapper){t(this.element);var n=this.element;this.originalElement.css({position:n.css("position"),width:n.outerWidth(),height:n.outerHeight(),top:n.css("top"),left:n.css("left")}).insertAfter(n),n.remove()}return this.originalElement.css("resize",this.originalResizeStyle),t(this.originalElement),this},_mouseCapture:function(t){var n=!1;for(var r in this.handles)e(this.handles[r])[0]==t.target&&(n=!0);return!this.options.disabled&&n},_mouseStart:function(t){var r=this.options,i=this.element.position(),s=this.element;this.resizing=!0,this.documentScroll={top:e(document).scrollTop(),left:e(document).scrollLeft()},(s.is(".ui-draggable")||/absolute/.test(s.css("position")))&&s.css({position:"absolute",top:i.top,left:i.left}),this._renderProxy();var o=n(this.helper.css("left")),u=n(this.helper.css("top"));r.containment&&(o+=e(r.containment).scrollLeft()||0,u+=e(r.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:o,top:u},this.size=this._helper?{width:s.outerWidth(),height:s.outerHeight()}:{width:s.width(),height:s.height()},this.originalSize=this._helper?{width:s.outerWidth(),height:s.outerHeight()}:{width:s.width(),height:s.height()},this.originalPosition={left:o,top:u},this.sizeDiff={width:s.outerWidth()-s.width(),height:s.outerHeight()-s.height()},this.originalMousePosition={left:t.pageX,top:t.pageY},this.aspectRatio=typeof r.aspectRatio=="number"?r.aspectRatio:this.originalSize.width/this.originalSize.height||1;var a=e(".ui-resizable-"+this.axis).css("cursor");return e("body").css("cursor",a=="auto"?this.axis+"-resize":a),s.addClass("ui-resizable-resizing"),this._propagate("start",t),!0},_mouseDrag:function(e){var t=this.helper,n=this.options,r={},i=this,s=this.originalMousePosition,o=this.axis,u=e.pageX-s.left||0,a=e.pageY-s.top||0,f=this._change[o];if(!f)return!1;var l=f.apply(this,[e,u,a]);this._updateVirtualBoundaries(e.shiftKey);if(this._aspectRatio||e.shiftKey)l=this._updateRatio(l,e);return l=this._respectSize(l,e),this._propagate("resize",e),t.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"}),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),this._updateCache(l),this._trigger("resize",e,this.ui()),!1},_mouseStop:function(t){this.resizing=!1;var n=this.options,r=this;if(this._helper){var i=this._proportionallyResizeElements,s=i.length&&/textarea/i.test(i[0].nodeName),o=s&&e.ui.hasScroll(i[0],"left")?0:r.sizeDiff.height,u=s?0:r.sizeDiff.width,a={width:r.helper.width()-u,height:r.helper.height()-o},f=parseInt(r.element.css("left"),10)+(r.position.left-r.originalPosition.left)||null,l=parseInt(r.element.css("top"),10)+(r.position.top-r.originalPosition.top)||null;n.animate||this.element.css(e.extend(a,{top:l,left:f})),r.helper.height(r.size.height),r.helper.width(r.size.width),this._helper&&!n.animate&&this._proportionallyResize()}return e("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",t),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(e){var t=this.options,n,i,s,o,u;u={minWidth:r(t.minWidth)?t.minWidth:0,maxWidth:r(t.maxWidth)?t.maxWidth:Infinity,minHeight:r(t.minHeight)?t.minHeight:0,maxHeight:r(t.maxHeight)?t.maxHeight:Infinity};if(this._aspectRatio||e)n=u.minHeight*this.aspectRatio,s=u.minWidth/this.aspectRatio,i=u.maxHeight*this.aspectRatio,o=u.maxWidth/this.aspectRatio,n>u.minWidth&&(u.minWidth=n),s>u.minHeight&&(u.minHeight=s),i<u.maxWidth&&(u.maxWidth=i),o<u.maxHeight&&(u.maxHeight=o);this._vBoundaries=u},_updateCache:function(e){var t=this.options;this.offset=this.helper.offset(),r(e.left)&&(this.position.left=e.left),r(e.top)&&(this.position.top=e.top),r(e.height)&&(this.size.height=e.height),r(e.width)&&(this.size.width=e.width)},_updateRatio:function(e,t){var n=this.options,i=this.position,s=this.size,o=this.axis;return r(e.height)?e.width=e.height*this.aspectRatio:r(e.width)&&(e.height=e.width/this.aspectRatio),o=="sw"&&(e.left=i.left+(s.width-e.width),e.top=null),o=="nw"&&(e.top=i.top+(s.height-e.height),e.left=i.left+(s.width-e.width)),e},_respectSize:function(e,t){var n=this.helper,i=this._vBoundaries,s=this._aspectRatio||t.shiftKey,o=this.axis,u=r(e.width)&&i.maxWidth&&i.maxWidth<e.width,a=r(e.height)&&i.maxHeight&&i.maxHeight<e.height,f=r(e.width)&&i.minWidth&&i.minWidth>e.width,l=r(e.height)&&i.minHeight&&i.minHeight>e.height;f&&(e.width=i.minWidth),l&&(e.height=i.minHeight),u&&(e.width=i.maxWidth),a&&(e.height=i.maxHeight);var c=this.originalPosition.left+this.originalSize.width,h=this.position.top+this.size.height,p=/sw|nw|w/.test(o),d=/nw|ne|n/.test(o);f&&p&&(e.left=c-i.minWidth),u&&p&&(e.left=c-i.maxWidth),l&&d&&(e.top=h-i.minHeight),a&&d&&(e.top=h-i.maxHeight);var v=!e.width&&!e.height;return v&&!e.left&&e.top?e.top=null:v&&!e.top&&e.left&&(e.left=null),e},_proportionallyResize:function(){var t=this.options;if(!this._proportionallyResizeElements.length)return;var n=this.helper||this.element;for(var r=0;r<this._proportionallyResizeElements.length;r++){var i=this._proportionallyResizeElements[r];if(!this.borderDif){var s=[i.css("borderTopWidth"),i.css("borderRightWidth"),i.css("borderBottomWidth"),i.css("borderLeftWidth")],o=[i.css("paddingTop"),i.css("paddingRight"),i.css("paddingBottom"),i.css("paddingLeft")];this.borderDif=e.map(s,function(e,t){var n=parseInt(e,10)||0,r=parseInt(o[t],10)||0;return n+r})}i.css({height:n.height()-this.borderDif[0]-this.borderDif[2]||0,width:n.width()-this.borderDif[1]-this.borderDif[3]||0})}},_renderProxy:function(){var t=this.element,n=this.options;this.elementOffset=t.offset();if(this._helper){this.helper=this.helper||e('<div style="overflow:hidden;"></div>');var r=e.ui.ie6?1:0,i=e.ui.ie6?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+i,height:this.element.outerHeight()+i,position:"absolute",left:this.elementOffset.left-r+"px",top:this.elementOffset.top-r+"px",zIndex:++n.zIndex}),this.helper.appendTo("body").disableSelection()}else this.helper=this.element},_change:{e:function(e,t,n){return{width:this.originalSize.width+t}},w:function(e,t,n){var r=this.options,i=this.originalSize,s=this.originalPosition;return{left:s.left+t,width:i.width-t}},n:function(e,t,n){var r=this.options,i=this.originalSize,s=this.originalPosition;return{top:s.top+n,height:i.height-n}},s:function(e,t,n){return{height:this.originalSize.height+n}},se:function(t,n,r){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[t,n,r]))},sw:function(t,n,r){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[t,n,r]))},ne:function(t,n,r){return e.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[t,n,r]))},nw:function(t,n,r){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[t,n,r]))}},_propagate:function(t,n){e.ui.plugin.call(this,t,[n,this.ui()]),t!="resize"&&this._trigger(t,n,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),e.ui.plugin.add("resizable","alsoResize",{start:function(t,n){var r=e(this).data("resizable"),i=r.options,s=function(t){e(t).each(function(){var t=e(this);t.data("resizable-alsoresize",{width:parseInt(t.width(),10),height:parseInt(t.height(),10),left:parseInt(t.css("left"),10),top:parseInt(t.css("top"),10)})})};typeof i.alsoResize=="object"&&!i.alsoResize.parentNode?i.alsoResize.length?(i.alsoResize=i.alsoResize[0],s(i.alsoResize)):e.each(i.alsoResize,function(e){s(e)}):s(i.alsoResize)},resize:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.originalSize,o=r.originalPosition,u={height:r.size.height-s.height||0,width:r.size.width-s.width||0,top:r.position.top-o.top||0,left:r.position.left-o.left||0},a=function(t,r){e(t).each(function(){var t=e(this),i=e(this).data("resizable-alsoresize"),s={},o=r&&r.length?r:t.parents(n.originalElement[0]).length?["width","height"]:["width","height","top","left"];e.each(o,function(e,t){var n=(i[t]||0)+(u[t]||0);n&&n>=0&&(s[t]=n||null)}),t.css(s)})};typeof i.alsoResize=="object"&&!i.alsoResize.nodeType?e.each(i.alsoResize,function(e,t){a(e,t)}):a(i.alsoResize)},stop:function(t,n){e(this).removeData("resizable-alsoresize")}}),e.ui.plugin.add("resizable","animate",{stop:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r._proportionallyResizeElements,o=s.length&&/textarea/i.test(s[0].nodeName),u=o&&e.ui.hasScroll(s[0],"left")?0:r.sizeDiff.height,a=o?0:r.sizeDiff.width,f={width:r.size.width-a,height:r.size.height-u},l=parseInt(r.element.css("left"),10)+(r.position.left-r.originalPosition.left)||null,c=parseInt(r.element.css("top"),10)+(r.position.top-r.originalPosition.top)||null;r.element.animate(e.extend(f,c&&l?{top:c,left:l}:{}),{duration:i.animateDuration,easing:i.animateEasing,step:function(){var n={width:parseInt(r.element.css("width"),10),height:parseInt(r.element.css("height"),10),top:parseInt(r.element.css("top"),10),left:parseInt(r.element.css("left"),10)};s&&s.length&&e(s[0]).css({width:n.width,height:n.height}),r._updateCache(n),r._propagate("resize",t)}})}}),e.ui.plugin.add("resizable","containment",{start:function(t,r){var i=e(this).data("resizable"),s=i.options,o=i.element,u=s.containment,a=u instanceof e?u.get(0):/parent/.test(u)?o.parent().get(0):u;if(!a)return;i.containerElement=e(a);if(/document/.test(u)||u==document)i.containerOffset={left:0,top:0},i.containerPosition={left:0,top:0},i.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight};else{var f=e(a),l=[];e(["Top","Right","Left","Bottom"]).each(function(e,t){l[e]=n(f.css("padding"+t))}),i.containerOffset=f.offset(),i.containerPosition=f.position(),i.containerSize={height:f.innerHeight()-l[3],width:f.innerWidth()-l[1]};var c=i.containerOffset,h=i.containerSize.height,p=i.containerSize.width,d=e.ui.hasScroll(a,"left")?a.scrollWidth:p,v=e.ui.hasScroll(a)?a.scrollHeight:h;i.parentData={element:a,left:c.left,top:c.top,width:d,height:v}}},resize:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.containerSize,o=r.containerOffset,u=r.size,a=r.position,f=r._aspectRatio||t.shiftKey,l={top:0,left:0},c=r.containerElement;c[0]!=document&&/static/.test(c.css("position"))&&(l=o),a.left<(r._helper?o.left:0)&&(r.size.width=r.size.width+(r._helper?r.position.left-o.left:r.position.left-l.left),f&&(r.size.height=r.size.width/r.aspectRatio),r.position.left=i.helper?o.left:0),a.top<(r._helper?o.top:0)&&(r.size.height=r.size.height+(r._helper?r.position.top-o.top:r.position.top),f&&(r.size.width=r.size.height*r.aspectRatio),r.position.top=r._helper?o.top:0),r.offset.left=r.parentData.left+r.position.left,r.offset.top=r.parentData.top+r.position.top;var h=Math.abs((r._helper?r.offset.left-l.left:r.offset.left-l.left)+r.sizeDiff.width),p=Math.abs((r._helper?r.offset.top-l.top:r.offset.top-o.top)+r.sizeDiff.height),d=r.containerElement.get(0)==r.element.parent().get(0),v=/relative|absolute/.test(r.containerElement.css("position"));d&&v&&(h-=r.parentData.left),h+r.size.width>=r.parentData.width&&(r.size.width=r.parentData.width-h,f&&(r.size.height=r.size.width/r.aspectRatio)),p+r.size.height>=r.parentData.height&&(r.size.height=r.parentData.height-p,f&&(r.size.width=r.size.height*r.aspectRatio))},stop:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.position,o=r.containerOffset,u=r.containerPosition,a=r.containerElement,f=e(r.helper),l=f.offset(),c=f.outerWidth()-r.sizeDiff.width,h=f.outerHeight()-r.sizeDiff.height;r._helper&&!i.animate&&/relative/.test(a.css("position"))&&e(this).css({left:l.left-u.left-o.left,width:c,height:h}),r._helper&&!i.animate&&/static/.test(a.css("position"))&&e(this).css({left:l.left-u.left-o.left,width:c,height:h})}}),e.ui.plugin.add("resizable","ghost",{start:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.size;r.ghost=r.originalElement.clone(),r.ghost.css({opacity:.25,display:"block",position:"relative",height:s.height,width:s.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass(typeof i.ghost=="string"?i.ghost:""),r.ghost.appendTo(r.helper)},resize:function(t,n){var r=e(this).data("resizable"),i=r.options;r.ghost&&r.ghost.css({position:"relative",height:r.size.height,width:r.size.width})},stop:function(t,n){var r=e(this).data("resizable"),i=r.options;r.ghost&&r.helper&&r.helper.get(0).removeChild(r.ghost.get(0))}}),e.ui.plugin.add("resizable","grid",{resize:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.size,o=r.originalSize,u=r.originalPosition,a=r.axis,f=i._aspectRatio||t.shiftKey;i.grid=typeof i.grid=="number"?[i.grid,i.grid]:i.grid;var l=Math.round((s.width-o.width)/(i.grid[0]||1))*(i.grid[0]||1),c=Math.round((s.height-o.height)/(i.grid[1]||1))*(i.grid[1]||1);/^(se|s|e)$/.test(a)?(r.size.width=o.width+l,r.size.height=o.height+c):/^(ne)$/.test(a)?(r.size.width=o.width+l,r.size.height=o.height+c,r.position.top=u.top-c):/^(sw)$/.test(a)?(r.size.width=o.width+l,r.size.height=o.height+c,r.position.left=u.left-l):(r.size.width=o.width+l,r.size.height=o.height+c,r.position.top=u.top-c,r.position.left=u.left-l)}});var n=function(e){return parseInt(e,10)||0},r=function(e){return!isNaN(parseInt(e,10))}}(jQuery),function(e,t){e.widget("ui.selectable",e.ui.mouse,{version:"1.9.2",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch"},_create:function(){var t=this;this.element.addClass("ui-selectable"),this.dragged=!1;var n;this.refresh=function(){n=e(t.options.filter,t.element[0]),n.addClass("ui-selectee"),n.each(function(){var t=e(this),n=t.offset();e.data(this,"selectable-item",{element:this,$element:t,left:n.left,top:n.top,right:n.left+t.outerWidth(),bottom:n.top+t.outerHeight(),startselected:!1,selected:t.hasClass("ui-selected"),selecting:t.hasClass("ui-selecting"),unselecting:t.hasClass("ui-unselecting")})})},this.refresh(),this.selectees=n.addClass("ui-selectee"),this._mouseInit(),this.helper=e("<div class='ui-selectable-helper'></div>")},_destroy:function(){this.selectees.removeClass("ui-selectee").removeData("selectable-item"),this.element.removeClass("ui-selectable ui-selectable-disabled"),this._mouseDestroy()},_mouseStart:function(t){var n=this;this.opos=[t.pageX,t.pageY];if(this.options.disabled)return;var r=this.options;this.selectees=e(r.filter,this.element[0]),this._trigger("start",t),e(r.appendTo).append(this.helper),this.helper.css({left:t.clientX,top:t.clientY,width:0,height:0}),r.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var r=e.data(this,"selectable-item");r.startselected=!0,!t.metaKey&&!t.ctrlKey&&(r.$element.removeClass("ui-selected"),r.selected=!1,r.$element.addClass("ui-unselecting"),r.unselecting=!0,n._trigger("unselecting",t,{unselecting:r.element}))}),e(t.target).parents().andSelf().each(function(){var r=e.data(this,"selectable-item");if(r){var i=!t.metaKey&&!t.ctrlKey||!r.$element.hasClass("ui-selected");return r.$element.removeClass(i?"ui-unselecting":"ui-selected").addClass(i?"ui-selecting":"ui-unselecting"),r.unselecting=!i,r.selecting=i,r.selected=i,i?n._trigger("selecting",t,{selecting:r.element}):n._trigger("unselecting",t,{unselecting:r.element}),!1}})},_mouseDrag:function(t){var n=this;this.dragged=!0;if(this.options.disabled)return;var r=this.options,i=this.opos[0],s=this.opos[1],o=t.pageX,u=t.pageY;if(i>o){var a=o;o=i,i=a}if(s>u){var a=u;u=s,s=a}return this.helper.css({left:i,top:s,width:o-i,height:u-s}),this.selectees.each(function(){var a=e.data(this,"selectable-item");if(!a||a.element==n.element[0])return;var f=!1;r.tolerance=="touch"?f=!(a.left>o||a.right<i||a.top>u||a.bottom<s):r.tolerance=="fit"&&(f=a.left>i&&a.right<o&&a.top>s&&a.bottom<u),f?(a.selected&&(a.$element.removeClass("ui-selected"),a.selected=!1),a.unselecting&&(a.$element.removeClass("ui-unselecting"),a.unselecting=!1),a.selecting||(a.$element.addClass("ui-selecting"),a.selecting=!0,n._trigger("selecting",t,{selecting:a.element}))):(a.selecting&&((t.metaKey||t.ctrlKey)&&a.startselected?(a.$element.removeClass("ui-selecting"),a.selecting=!1,a.$element.addClass("ui-selected"),a.selected=!0):(a.$element.removeClass("ui-selecting"),a.selecting=!1,a.startselected&&(a.$element.addClass("ui-unselecting"),a.unselecting=!0),n._trigger("unselecting",t,{unselecting:a.element}))),a.selected&&!t.metaKey&&!t.ctrlKey&&!a.startselected&&(a.$element.removeClass("ui-selected"),a.selected=!1,a.$element.addClass("ui-unselecting"),a.unselecting=!0,n._trigger("unselecting",t,{unselecting:a.element})))}),!1},_mouseStop:function(t){var n=this;this.dragged=!1;var r=this.options;return e(".ui-unselecting",this.element[0]).each(function(){var r=e.data(this,"selectable-item");r.$element.removeClass("ui-unselecting"),r.unselecting=!1,r.startselected=!1,n._trigger("unselected",t,{unselected:r.element})}),e(".ui-selecting",this.element[0]).each(function(){var r=e.data(this,"selectable-item");r.$element.removeClass("ui-selecting").addClass("ui-selected"),r.selecting=!1,r.selected=!0,r.startselected=!0,n._trigger("selected",t,{selected:r.element})}),this._trigger("stop",t),this.helper.remove(),!1}})}(jQuery),function(e,t){e.widget("ui.sortable",e.ui.mouse,{version:"1.9.2",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3},_create:function(){var e=this.options;this.containerCache={},this.element.addClass("ui-sortable"),this.refresh(),this.floating=this.items.length?e.axis==="x"||/left|right/.test(this.items[0].item.css("float"))||/inline|table-cell/.test(this.items[0].item.css("display")):!1,this.offset=this.element.offset(),this._mouseInit(),this.ready=!0},_destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled"),this._mouseDestroy();for(var e=this.items.length-1;e>=0;e--)this.items[e].item.removeData(this.widgetName+"-item");return this},_setOption:function(t,n){t==="disabled"?(this.options[t]=n,this.widget().toggleClass("ui-sortable-disabled",!!n)):e.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(t,n){var r=this;if(this.reverting)return!1;if(this.options.disabled||this.options.type=="static")return!1;this._refreshItems(t);var i=null,s=e(t.target).parents().each(function(){if(e.data(this,r.widgetName+"-item")==r)return i=e(this),!1});e.data(t.target,r.widgetName+"-item")==r&&(i=e(t.target));if(!i)return!1;if(this.options.handle&&!n){var o=!1;e(this.options.handle,i).find("*").andSelf().each(function(){this==t.target&&(o=!0)});if(!o)return!1}return this.currentItem=i,this._removeCurrentsFromItems(),!0},_mouseStart:function(t,n,r){var i=this.options;this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(t),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!=this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),i.containment&&this._setContainment(),i.cursor&&(e("body").css("cursor")&&(this._storedCursor=e("body").css("cursor")),e("body").css("cursor",i.cursor)),i.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",i.opacity)),i.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",i.zIndex)),this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",t,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions();if(!r)for(var s=this.containers.length-1;s>=0;s--)this.containers[s]._trigger("activate",t,this._uiHash(this));return e.ui.ddmanager&&(e.ui.ddmanager.current=this),e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this.dragging=!0,this.helper.addClass("ui-sortable-helper"),this._mouseDrag(t),!0},_mouseDrag:function(t){this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs);if(this.options.scroll){var n=this.options,r=!1;this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-t.pageY<n.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+n.scrollSpeed:t.pageY-this.overflowOffset.top<n.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-n.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-t.pageX<n.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+n.scrollSpeed:t.pageX-this.overflowOffset.left<n.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-n.scrollSpeed)):(t.pageY-e(document).scrollTop()<n.scrollSensitivity?r=e(document).scrollTop(e(document).scrollTop()-n.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<n.scrollSensitivity&&(r=e(document).scrollTop(e(document).scrollTop()+n.scrollSpeed)),t.pageX-e(document).scrollLeft()<n.scrollSensitivity?r=e(document).scrollLeft(e(document).scrollLeft()-n.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<n.scrollSensitivity&&(r=e(document).scrollLeft(e(document).scrollLeft()+n.scrollSpeed))),r!==!1&&e.ui.ddmanager&&!n.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t)}this.positionAbs=this._convertPositionTo("absolute");if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";for(var i=this.items.length-1;i>=0;i--){var s=this.items[i],o=s.item[0],u=this._intersectsWithPointer(s);if(!u)continue;if(s.instance!==this.currentContainer)continue;if(o!=this.currentItem[0]&&this.placeholder[u==1?"next":"prev"]()[0]!=o&&!e.contains(this.placeholder[0],o)&&(this.options.type=="semi-dynamic"?!e.contains(this.element[0],o):!0)){this.direction=u==1?"down":"up";if(this.options.tolerance!="pointer"&&!this._intersectsWithSides(s))break;this._rearrange(t,s),this._trigger("change",t,this._uiHash());break}}return this._contactContainers(t),e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),this._trigger("sort",t,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(t,n){if(!t)return;e.ui.ddmanager&&!this.options.dropBehaviour&&e.ui.ddmanager.drop(this,t);if(this.options.revert){var r=this,i=this.placeholder.offset();this.reverting=!0,e(this.helper).animate({left:i.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollLeft),top:i.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){r._clear(t)})}else this._clear(t,n);return!1},cancel:function(){if(this.dragging){this._mouseUp({target:null}),this.options.helper=="original"?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var t=this.containers.length-1;t>=0;t--)this.containers[t]._trigger("deactivate",null,this._uiHash(this)),this.containers[t].containerCache.over&&(this.containers[t]._trigger("out",null,this._uiHash(this)),this.containers[t].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.options.helper!="original"&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),e.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?e(this.domPosition.prev).after(this.currentItem):e(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(t){var n=this._getItemsAsjQuery(t&&t.connected),r=[];return t=t||{},e(n).each(function(){var n=(e(t.item||this).attr(t.attribute||"id")||"").match(t.expression||/(.+)[-=_](.+)/);n&&r.push((t.key||n[1]+"[]")+"="+(t.key&&t.expression?n[1]:n[2]))}),!r.length&&t.key&&r.push(t.key+"="),r.join("&")},toArray:function(t){var n=this._getItemsAsjQuery(t&&t.connected),r=[];return t=t||{},n.each(function(){r.push(e(t.item||this).attr(t.attribute||"id")||"")}),r},_intersectsWith:function(e){var t=this.positionAbs.left,n=t+this.helperProportions.width,r=this.positionAbs.top,i=r+this.helperProportions.height,s=e.left,o=s+e.width,u=e.top,a=u+e.height,f=this.offset.click.top,l=this.offset.click.left,c=r+f>u&&r+f<a&&t+l>s&&t+l<o;return this.options.tolerance=="pointer"||this.options.forcePointerForContainers||this.options.tolerance!="pointer"&&this.helperProportions[this.floating?"width":"height"]>e[this.floating?"width":"height"]?c:s<t+this.helperProportions.width/2&&n-this.helperProportions.width/2<o&&u<r+this.helperProportions.height/2&&i-this.helperProportions.height/2<a},_intersectsWithPointer:function(t){var n=this.options.axis==="x"||e.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),r=this.options.axis==="y"||e.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width),i=n&&r,s=this._getDragVerticalDirection(),o=this._getDragHorizontalDirection();return i?this.floating?o&&o=="right"||s=="down"?2:1:s&&(s=="down"?2:1):!1},_intersectsWithSides:function(t){var n=e.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),r=e.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),i=this._getDragVerticalDirection(),s=this._getDragHorizontalDirection();return this.floating&&s?s=="right"&&r||s=="left"&&!r:i&&(i=="down"&&n||i=="up"&&!n)},_getDragVerticalDirection:function(){var e=this.positionAbs.top-this.lastPositionAbs.top;return e!=0&&(e>0?"down":"up")},_getDragHorizontalDirection:function(){var e=this.positionAbs.left-this.lastPositionAbs.left;return e!=0&&(e>0?"right":"left")},refresh:function(e){return this._refreshItems(e),this.refreshPositions(),this},_connectWith:function(){var e=this.options;return e.connectWith.constructor==String?[e.connectWith]:e.connectWith},_getItemsAsjQuery:function(t){var n=[],r=[],i=this._connectWith();if(i&&t)for(var s=i.length-1;s>=0;s--){var o=e(i[s]);for(var u=o.length-1;u>=0;u--){var a=e.data(o[u],this.widgetName);a&&a!=this&&!a.options.disabled&&r.push([e.isFunction(a.options.items)?a.options.items.call(a.element):e(a.options.items,a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),a])}}r.push([e.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):e(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]);for(var s=r.length-1;s>=0;s--)r[s][0].each(function(){n.push(this)});return e(n)},_removeCurrentsFromItems:function(){var t=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=e.grep(this.items,function(e){for(var n=0;n<t.length;n++)if(t[n]==e.item[0])return!1;return!0})},_refreshItems:function(t){this.items=[],this.containers=[this];var n=this.items,r=[[e.isFunction(this.options.items)?this.options.items.call(this.element[0],t,{item:this.currentItem}):e(this.options.items,this.element),this]],i=this._connectWith();if(i&&this.ready)for(var s=i.length-1;s>=0;s--){var o=e(i[s]);for(var u=o.length-1;u>=0;u--){var a=e.data(o[u],this.widgetName);a&&a!=this&&!a.options.disabled&&(r.push([e.isFunction(a.options.items)?a.options.items.call(a.element[0],t,{item:this.currentItem}):e(a.options.items,a.element),a]),this.containers.push(a))}}for(var s=r.length-1;s>=0;s--){var f=r[s][1],l=r[s][0];for(var u=0,c=l.length;u<c;u++){var h=e(l[u]);h.data(this.widgetName+"-item",f),n.push({item:h,instance:f,width:0,height:0,left:0,top:0})}}},refreshPositions:function(t){this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());for(var n=this.items.length-1;n>=0;n--){var r=this.items[n];if(r.instance!=this.currentContainer&&this.currentContainer&&r.item[0]!=this.currentItem[0])continue;var i=this.options.toleranceElement?e(this.options.toleranceElement,r.item):r.item;t||(r.width=i.outerWidth(),r.height=i.outerHeight());var s=i.offset();r.left=s.left,r.top=s.top}if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(var n=this.containers.length-1;n>=0;n--){var s=this.containers[n].element.offset();this.containers[n].containerCache.left=s.left,this.containers[n].containerCache.top=s.top,this.containers[n].containerCache.width=this.containers[n].element.outerWidth(),this.containers[n].containerCache.height=this.containers[n].element.outerHeight()}return this},_createPlaceholder:function(t){t=t||this;var n=t.options;if(!n.placeholder||n.placeholder.constructor==String){var r=n.placeholder;n.placeholder={element:function(){var n=e(document.createElement(t.currentItem[0].nodeName)).addClass(r||t.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];return r||(n.style.visibility="hidden"),n},update:function(e,i){if(r&&!n.forcePlaceholderSize)return;i.height()||i.height(t.currentItem.innerHeight()-parseInt(t.currentItem.css("paddingTop")||0,10)-parseInt(t.currentItem.css("paddingBottom")||0,10)),i.width()||i.width(t.currentItem.innerWidth()-parseInt(t.currentItem.css("paddingLeft")||0,10)-parseInt(t.currentItem.css("paddingRight")||0,10))}}}t.placeholder=e(n.placeholder.element.call(t.element,t.currentItem)),t.currentItem.after(t.placeholder),n.placeholder.update(t,t.placeholder)},_contactContainers:function(t){var n=null,r=null;for(var i=this.containers.length-1;i>=0;i--){if(e.contains(this.currentItem[0],this.containers[i].element[0]))continue;if(this._intersectsWith(this.containers[i].containerCache)){if(n&&e.contains(this.containers[i].element[0],n.element[0]))continue;n=this.containers[i],r=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger("out",t,this._uiHash(this)),this.containers[i].containerCache.over=0)}if(!n)return;if(this.containers.length===1)this.containers[r]._trigger("over",t,this._uiHash(this)),this.containers[r].containerCache.over=1;else{var s=1e4,o=null,u=this.containers[r].floating?"left":"top",a=this.containers[r].floating?"width":"height",f=this.positionAbs[u]+this.offset.click[u];for(var l=this.items.length-1;l>=0;l--){if(!e.contains(this.containers[r].element[0],this.items[l].item[0]))continue;if(this.items[l].item[0]==this.currentItem[0])continue;var c=this.items[l].item.offset()[u],h=!1;Math.abs(c-f)>Math.abs(c+this.items[l][a]-f)&&(h=!0,c+=this.items[l][a]),Math.abs(c-f)<s&&(s=Math.abs(c-f),o=this.items[l],this.direction=h?"up":"down")}if(!o&&!this.options.dropOnEmpty)return;this.currentContainer=this.containers[r],o?this._rearrange(t,o,null,!0):this._rearrange(t,null,this.containers[r].element,!0),this._trigger("change",t,this._uiHash()),this.containers[r]._trigger("change",t,this._uiHash(this)),this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[r]._trigger("over",t,this._uiHash(this)),this.containers[r].containerCache.over=1}},_createHelper:function(t){var n=this.options,r=e.isFunction(n.helper)?e(n.helper.apply(this.element[0],[t,this.currentItem])):n.helper=="clone"?this.currentItem.clone():this.currentItem;return r.parents("body").length||e(n.appendTo!="parent"?n.appendTo:this.currentItem[0].parentNode)[0].appendChild(r[0]),r[0]==this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(r[0].style.width==""||n.forceHelperSize)&&r.width(this.currentItem.width()),(r[0].style.height==""||n.forceHelperSize)&&r.height(this.currentItem.height()),r},_adjustOffsetFromHelper:function(t){typeof t=="string"&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&e.ui.ie)t={top:0,left:0};return{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var e=this.currentItem.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t=this.options;t.containment=="parent"&&(t.containment=this.helper[0].parentNode);if(t.containment=="document"||t.containment=="window")this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,e(t.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(e(t.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(t.containment)){var n=e(t.containment)[0],r=e(t.containment).offset(),i=e(n).css("overflow")!="hidden";this.containment=[r.left+(parseInt(e(n).css("borderLeftWidth"),10)||0)+(parseInt(e(n).css("paddingLeft"),10)||0)-this.margins.left,r.top+(parseInt(e(n).css("borderTopWidth"),10)||0)+(parseInt(e(n).css("paddingTop"),10)||0)-this.margins.top,r.left+(i?Math.max(n.scrollWidth,n.offsetWidth):n.offsetWidth)-(parseInt(e(n).css("borderLeftWidth"),10)||0)-(parseInt(e(n).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,r.top+(i?Math.max(n.scrollHeight,n.offsetHeight):n.offsetHeight)-(parseInt(e(n).css("borderTopWidth"),10)||0)-(parseInt(e(n).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top]}},_convertPositionTo:function(t,n){n||(n=this.position);var r=t=="absolute"?1:-1,i=this.options,s=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(s[0].tagName);return{top:n.top+this.offset.relative.top*r+this.offset.parent.top*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():o?0:s.scrollTop())*r,left:n.left+this.offset.relative.left*r+this.offset.parent.left*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():o?0:s.scrollLeft())*r}},_generatePosition:function(t){var n=this.options,r=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,i=/(html|body)/i.test(r[0].tagName);this.cssPosition=="relative"&&(this.scrollParent[0]==document||this.scrollParent[0]==this.offsetParent[0])&&(this.offset.relative=this._getRelativeOffset());var s=t.pageX,o=t.pageY;if(this.originalPosition){this.containment&&(t.pageX-this.offset.click.left<this.containment[0]&&(s=this.containment[0]+this.offset.click.left),t.pageY-this.offset.click.top<this.containment[1]&&(o=this.containment[1]+this.offset.click.top),t.pageX-this.offset.click.left>this.containment[2]&&(s=this.containment[2]+this.offset.click.left),t.pageY-this.offset.click.top>this.containment[3]&&(o=this.containment[3]+this.offset.click.top));if(n.grid){var u=this.originalPageY+Math.round((o-this.originalPageY)/n.grid[1])*n.grid[1];o=this.containment?u-this.offset.click.top<this.containment[1]||u-this.offset.click.top>this.containment[3]?u-this.offset.click.top<this.containment[1]?u+n.grid[1]:u-n.grid[1]:u:u;var a=this.originalPageX+Math.round((s-this.originalPageX)/n.grid[0])*n.grid[0];s=this.containment?a-this.offset.click.left<this.containment[0]||a-this.offset.click.left>this.containment[2]?a-this.offset.click.left<this.containment[0]?a+n.grid[0]:a-n.grid[0]:a:a}}return{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():i?0:r.scrollTop()),left:s-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():i?0:r.scrollLeft())}},_rearrange:function(e,t,n,r){n?n[0].appendChild(this.placeholder[0]):t.item[0].parentNode.insertBefore(this.placeholder[0],this.direction=="down"?t.item[0]:t.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var i=this.counter;this._delay(function(){i==this.counter&&this.refreshPositions(!r)})},_clear:function(t,n){this.reverting=!1;var r=[];!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null;if(this.helper[0]==this.currentItem[0]){for(var i in this._storedCSS)if(this._storedCSS[i]=="auto"||this._storedCSS[i]=="static")this._storedCSS[i]="";this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();this.fromOutside&&!n&&r.push(function(e){this._trigger("receive",e,this._uiHash(this.fromOutside))}),(this.fromOutside||this.domPosition.prev!=this.currentItem.prev().not(".ui-sortable-helper")[0]||this.domPosition.parent!=this.currentItem.parent()[0])&&!n&&r.push(function(e){this._trigger("update",e,this._uiHash())}),this!==this.currentContainer&&(n||(r.push(function(e){this._trigger("remove",e,this._uiHash())}),r.push(function(e){return function(t){e._trigger("receive",t,this._uiHash(this))}}.call(this,this.currentContainer)),r.push(function(e){return function(t){e._trigger("update",t,this._uiHash(this))}}.call(this,this.currentContainer))));for(var i=this.containers.length-1;i>=0;i--)n||r.push(function(e){return function(t){e._trigger("deactivate",t,this._uiHash(this))}}.call(this,this.containers[i])),this.containers[i].containerCache.over&&(r.push(function(e){return function(t){e._trigger("out",t,this._uiHash(this))}}.call(this,this.containers[i])),this.containers[i].containerCache.over=0);this._storedCursor&&e("body").css("cursor",this._storedCursor),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex",this._storedZIndex=="auto"?"":this._storedZIndex),this.dragging=!1;if(this.cancelHelperRemoval){if(!n){this._trigger("beforeStop",t,this._uiHash());for(var i=0;i<r.length;i++)r[i].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!1}n||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.helper[0]!=this.currentItem[0]&&this.helper.remove(),this.helper=null;if(!n){for(var i=0;i<r.length;i++)r[i].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!0},_trigger:function(){e.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(t){var n=t||this;return{helper:n.helper,placeholder:n.placeholder||e([]),position:n.position,originalPosition:n.originalPosition,offset:n.positionAbs,item:n.currentItem,sender:t?t.element:null}}})}(jQuery),jQuery.effects||function(e,t){var n=e.uiBackCompat!==!1,r="ui-effects-";e.effects={effect:{}},function(t,n){function p(e,t,n){var r=a[t.type]||{};return e==null?n||!t.def?null:t.def:(e=r.floor?~~e:parseFloat(e),isNaN(e)?t.def:r.mod?(e+r.mod)%r.mod:0>e?0:r.max<e?r.max:e)}function d(e){var n=o(),r=n._rgba=[];return e=e.toLowerCase(),h(s,function(t,i){var s,o=i.re.exec(e),a=o&&i.parse(o),f=i.space||"rgba";if(a)return s=n[f](a),n[u[f].cache]=s[u[f].cache],r=n._rgba=s._rgba,!1}),r.length?(r.join()==="0,0,0,0"&&t.extend(r,c.transparent),n):c[e]}function v(e,t,n){return n=(n+1)%1,n*6<1?e+(t-e)*n*6:n*2<1?t:n*3<2?e+(t-e)*(2/3-n)*6:e}var r="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor".split(" "),i=/^([\-+])=\s*(\d+\.?\d*)/,s=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(e){return[e[1],e[2],e[3],e[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(e){return[e[1]*2.55,e[2]*2.55,e[3]*2.55,e[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(e){return[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(e){return[parseInt(e[1]+e[1],16),parseInt(e[2]+e[2],16),parseInt(e[3]+e[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(e){return[e[1],e[2]/100,e[3]/100,e[4]]}}],o=t.Color=function(e,n,r,i){return new t.Color.fn.parse(e,n,r,i)},u={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},a={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},f=o.support={},l=t("<p>")[0],c,h=t.each;l.style.cssText="background-color:rgba(1,1,1,.5)",f.rgba=l.style.backgroundColor.indexOf("rgba")>-1,h(u,function(e,t){t.cache="_"+e,t.props.alpha={idx:3,type:"percent",def:1}}),o.fn=t.extend(o.prototype,{parse:function(r,i,s,a){if(r===n)return this._rgba=[null,null,null,null],this;if(r.jquery||r.nodeType)r=t(r).css(i),i=n;var f=this,l=t.type(r),v=this._rgba=[];i!==n&&(r=[r,i,s,a],l="array");if(l==="string")return this.parse(d(r)||c._default);if(l==="array")return h(u.rgba.props,function(e,t){v[t.idx]=p(r[t.idx],t)}),this;if(l==="object")return r instanceof o?h(u,function(e,t){r[t.cache]&&(f[t.cache]=r[t.cache].slice())}):h(u,function(t,n){var i=n.cache;h(n.props,function(e,t){if(!f[i]&&n.to){if(e==="alpha"||r[e]==null)return;f[i]=n.to(f._rgba)}f[i][t.idx]=p(r[e],t,!0)}),f[i]&&e.inArray(null,f[i].slice(0,3))<0&&(f[i][3]=1,n.from&&(f._rgba=n.from(f[i])))}),this},is:function(e){var t=o(e),n=!0,r=this;return h(u,function(e,i){var s,o=t[i.cache];return o&&(s=r[i.cache]||i.to&&i.to(r._rgba)||[],h(i.props,function(e,t){if(o[t.idx]!=null)return n=o[t.idx]===s[t.idx],n})),n}),n},_space:function(){var e=[],t=this;return h(u,function(n,r){t[r.cache]&&e.push(n)}),e.pop()},transition:function(e,t){var n=o(e),r=n._space(),i=u[r],s=this.alpha()===0?o("transparent"):this,f=s[i.cache]||i.to(s._rgba),l=f.slice();return n=n[i.cache],h(i.props,function(e,r){var i=r.idx,s=f[i],o=n[i],u=a[r.type]||{};if(o===null)return;s===null?l[i]=o:(u.mod&&(o-s>u.mod/2?s+=u.mod:s-o>u.mod/2&&(s-=u.mod)),l[i]=p((o-s)*t+s,r))}),this[r](l)},blend:function(e){if(this._rgba[3]===1)return this;var n=this._rgba.slice(),r=n.pop(),i=o(e)._rgba;return o(t.map(n,function(e,t){return(1-r)*i[t]+r*e}))},toRgbaString:function(){var e="rgba(",n=t.map(this._rgba,function(e,t){return e==null?t>2?1:0:e});return n[3]===1&&(n.pop(),e="rgb("),e+n.join()+")"},toHslaString:function(){var e="hsla(",n=t.map(this.hsla(),function(e,t){return e==null&&(e=t>2?1:0),t&&t<3&&(e=Math.round(e*100)+"%"),e});return n[3]===1&&(n.pop(),e="hsl("),e+n.join()+")"},toHexString:function(e){var n=this._rgba.slice(),r=n.pop();return e&&n.push(~~(r*255)),"#"+t.map(n,function(e){return e=(e||0).toString(16),e.length===1?"0"+e:e}).join("")},toString:function(){return this._rgba[3]===0?"transparent":this.toRgbaString()}}),o.fn.parse.prototype=o.fn,u.hsla.to=function(e){if(e[0]==null||e[1]==null||e[2]==null)return[null,null,null,e[3]];var t=e[0]/255,n=e[1]/255,r=e[2]/255,i=e[3],s=Math.max(t,n,r),o=Math.min(t,n,r),u=s-o,a=s+o,f=a*.5,l,c;return o===s?l=0:t===s?l=60*(n-r)/u+360:n===s?l=60*(r-t)/u+120:l=60*(t-n)/u+240,f===0||f===1?c=f:f<=.5?c=u/a:c=u/(2-a),[Math.round(l)%360,c,f,i==null?1:i]},u.hsla.from=function(e){if(e[0]==null||e[1]==null||e[2]==null)return[null,null,null,e[3]];var t=e[0]/360,n=e[1],r=e[2],i=e[3],s=r<=.5?r*(1+n):r+n-r*n,o=2*r-s;return[Math.round(v(o,s,t+1/3)*255),Math.round(v(o,s,t)*255),Math.round(v(o,s,t-1/3)*255),i]},h(u,function(e,r){var s=r.props,u=r.cache,a=r.to,f=r.from;o.fn[e]=function(e){a&&!this[u]&&(this[u]=a(this._rgba));if(e===n)return this[u].slice();var r,i=t.type(e),l=i==="array"||i==="object"?e:arguments,c=this[u].slice();return h(s,function(e,t){var n=l[i==="object"?e:t.idx];n==null&&(n=c[t.idx]),c[t.idx]=p(n,t)}),f?(r=o(f(c)),r[u]=c,r):o(c)},h(s,function(n,r){if(o.fn[n])return;o.fn[n]=function(s){var o=t.type(s),u=n==="alpha"?this._hsla?"hsla":"rgba":e,a=this[u](),f=a[r.idx],l;return o==="undefined"?f:(o==="function"&&(s=s.call(this,f),o=t.type(s)),s==null&&r.empty?this:(o==="string"&&(l=i.exec(s),l&&(s=f+parseFloat(l[2])*(l[1]==="+"?1:-1))),a[r.idx]=s,this[u](a)))}})}),h(r,function(e,n){t.cssHooks[n]={set:function(e,r){var i,s,u="";if(t.type(r)!=="string"||(i=d(r))){r=o(i||r);if(!f.rgba&&r._rgba[3]!==1){s=n==="backgroundColor"?e.parentNode:e;while((u===""||u==="transparent")&&s&&s.style)try{u=t.css(s,"backgroundColor"),s=s.parentNode}catch(a){}r=r.blend(u&&u!=="transparent"?u:"_default")}r=r.toRgbaString()}try{e.style[n]=r}catch(l){}}},t.fx.step[n]=function(e){e.colorInit||(e.start=o(e.elem,n),e.end=o(e.end),e.colorInit=!0),t.cssHooks[n].set(e.elem,e.start.transition(e.end,e.pos))}}),t.cssHooks.borderColor={expand:function(e){var t={};return h(["Top","Right","Bottom","Left"],function(n,r){t["border"+r+"Color"]=e}),t}},c=t.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(jQuery),function(){function i(){var t=this.ownerDocument.defaultView?this.ownerDocument.defaultView.getComputedStyle(this,null):this.currentStyle,n={},r,i;if(t&&t.length&&t[0]&&t[t[0]]){i=t.length;while(i--)r=t[i],typeof t[r]=="string"&&(n[e.camelCase(r)]=t[r])}else for(r in t)typeof t[r]=="string"&&(n[r]=t[r]);return n}function s(t,n){var i={},s,o;for(s in n)o=n[s],t[s]!==o&&!r[s]&&(e.fx.step[s]||!isNaN(parseFloat(o)))&&(i[s]=o);return i}var n=["add","remove","toggle"],r={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};e.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(t,n){e.fx.step[n]=function(e){if(e.end!=="none"&&!e.setAttr||e.pos===1&&!e.setAttr)jQuery.style(e.elem,n,e.end),e.setAttr=!0}}),e.effects.animateClass=function(t,r,o,u){var a=e.speed(r,o,u);return this.queue(function(){var r=e(this),o=r.attr("class")||"",u,f=a.children?r.find("*").andSelf():r;f=f.map(function(){var t=e(this);return{el:t,start:i.call(this)}}),u=function(){e.each(n,function(e,n){t[n]&&r[n+"Class"](t[n])})},u(),f=f.map(function(){return this.end=i.call(this.el[0]),this.diff=s(this.start,this.end),this}),r.attr("class",o),f=f.map(function(){var t=this,n=e.Deferred(),r=jQuery.extend({},a,{queue:!1,complete:function(){n.resolve(t)}});return this.el.animate(this.diff,r),n.promise()}),e.when.apply(e,f.get()).done(function(){u(),e.each(arguments,function(){var t=this.el;e.each(this.diff,function(e){t.css(e,"")})}),a.complete.call(r[0])})})},e.fn.extend({_addClass:e.fn.addClass,addClass:function(t,n,r,i){return n?e.effects.animateClass.call(this,{add:t},n,r,i):this._addClass(t)},_removeClass:e.fn.removeClass,removeClass:function(t,n,r,i){return n?e.effects.animateClass.call(this,{remove:t},n,r,i):this._removeClass(t)},_toggleClass:e.fn.toggleClass,toggleClass:function(n,r,i,s,o){return typeof r=="boolean"||r===t?i?e.effects.animateClass.call(this,r?{add:n}:{remove:n},i,s,o):this._toggleClass(n,r):e.effects.animateClass.call(this,{toggle:n},r,i,s)},switchClass:function(t,n,r,i,s){return e.effects.animateClass.call(this,{add:n,remove:t},r,i,s)}})}(),function(){function i(t,n,r,i){e.isPlainObject(t)&&(n=t,t=t.effect),t={effect:t},n==null&&(n={}),e.isFunction(n)&&(i=n,r=null,n={});if(typeof n=="number"||e.fx.speeds[n])i=r,r=n,n={};return e.isFunction(r)&&(i=r,r=null),n&&e.extend(t,n),r=r||n.duration,t.duration=e.fx.off?0:typeof r=="number"?r:r in e.fx.speeds?e.fx.speeds[r]:e.fx.speeds._default,t.complete=i||n.complete,t}function s(t){return!t||typeof t=="number"||e.fx.speeds[t]?!0:typeof t=="string"&&!e.effects.effect[t]?n&&e.effects[t]?!1:!0:!1}e.extend(e.effects,{version:"1.9.2",save:function(e,t){for(var n=0;n<t.length;n++)t[n]!==null&&e.data(r+t[n],e[0].style[t[n]])},restore:function(e,n){var i,s;for(s=0;s<n.length;s++)n[s]!==null&&(i=e.data(r+n[s]),i===t&&(i=""),e.css(n[s],i))},setMode:function(e,t){return t==="toggle"&&(t=e.is(":hidden")?"show":"hide"),t},getBaseline:function(e,t){var n,r;switch(e[0]){case"top":n=0;break;case"middle":n=.5;break;case"bottom":n=1;break;default:n=e[0]/t.height}switch(e[1]){case"left":r=0;break;case"center":r=.5;break;case"right":r=1;break;default:r=e[1]/t.width}return{x:r,y:n}},createWrapper:function(t){if(t.parent().is(".ui-effects-wrapper"))return t.parent();var n={width:t.outerWidth(!0),height:t.outerHeight(!0),"float":t.css("float")},r=e("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),i={width:t.width(),height:t.height()},s=document.activeElement;try{s.id}catch(o){s=document.body}return t.wrap(r),(t[0]===s||e.contains(t[0],s))&&e(s).focus(),r=t.parent(),t.css("position")==="static"?(r.css({position:"relative"}),t.css({position:"relative"})):(e.extend(n,{position:t.css("position"),zIndex:t.css("z-index")}),e.each(["top","left","bottom","right"],function(e,r){n[r]=t.css(r),isNaN(parseInt(n[r],10))&&(n[r]="auto")}),t.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),t.css(i),r.css(n).show()},removeWrapper:function(t){var n=document.activeElement;return t.parent().is(".ui-effects-wrapper")&&(t.parent().replaceWith(t),(t[0]===n||e.contains(t[0],n))&&e(n).focus()),t},setTransition:function(t,n,r,i){return i=i||{},e.each(n,function(e,n){var s=t.cssUnit(n);s[0]>0&&(i[n]=s[0]*r+s[1])}),i}}),e.fn.extend({effect:function(){function a(n){function u(){e.isFunction(i)&&i.call(r[0]),e.isFunction(n)&&n()}var r=e(this),i=t.complete,s=t.mode;(r.is(":hidden")?s==="hide":s==="show")?u():o.call(r[0],t,u)}var t=i.apply(this,arguments),r=t.mode,s=t.queue,o=e.effects.effect[t.effect],u=!o&&n&&e.effects[t.effect];return e.fx.off||!o&&!u?r?this[r](t.duration,t.complete):this.each(function(){t.complete&&t.complete.call(this)}):o?s===!1?this.each(a):this.queue(s||"fx",a):u.call(this,{options:t,duration:t.duration,callback:t.complete,mode:t.mode})},_show:e.fn.show,show:function(e){if(s(e))return this._show.apply(this,arguments);var t=i.apply(this,arguments);return t.mode="show",this.effect.call(this,t)},_hide:e.fn.hide,hide:function(e){if(s(e))return this._hide.apply(this,arguments);var t=i.apply(this,arguments);return t.mode="hide",this.effect.call(this,t)},__toggle:e.fn.toggle,toggle:function(t){if(s(t)||typeof t=="boolean"||e.isFunction(t))return this.__toggle.apply(this,arguments);var n=i.apply(this,arguments);return n.mode="toggle",this.effect.call(this,n)},cssUnit:function(t){var n=this.css(t),r=[];return e.each(["em","px","%","pt"],function(e,t){n.indexOf(t)>0&&(r=[parseFloat(n),t])}),r}})}(),function(){var t={};e.each(["Quad","Cubic","Quart","Quint","Expo"],function(e,n){t[n]=function(t){return Math.pow(t,e+2)}}),e.extend(t,{Sine:function(e){return 1-Math.cos(e*Math.PI/2)},Circ:function(e){return 1-Math.sqrt(1-e*e)},Elastic:function(e){return e===0||e===1?e:-Math.pow(2,8*(e-1))*Math.sin(((e-1)*80-7.5)*Math.PI/15)},Back:function(e){return e*e*(3*e-2)},Bounce:function(e){var t,n=4;while(e<((t=Math.pow(2,--n))-1)/11);return 1/Math.pow(4,3-n)-7.5625*Math.pow((t*3-2)/22-e,2)}}),e.each(t,function(t,n){e.easing["easeIn"+t]=n,e.easing["easeOut"+t]=function(e){return 1-n(1-e)},e.easing["easeInOut"+t]=function(e){return e<.5?n(e*2)/2:1-n(e*-2+2)/2}})}()}(jQuery),function(e,t){var n=0,r={},i={};r.height=r.paddingTop=r.paddingBottom=r.borderTopWidth=r.borderBottomWidth="hide",i.height=i.paddingTop=i.paddingBottom=i.borderTopWidth=i.borderBottomWidth="show",e.widget("ui.accordion",{version:"1.9.2",options:{active:0,animate:{},collapsible:!1,event:"click",header:"> li > :first-child,> :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},_create:function(){var t=this.accordionId="ui-accordion-"+(this.element.attr("id")||++n),r=this.options;this.prevShow=this.prevHide=e(),this.element.addClass("ui-accordion ui-widget ui-helper-reset"),this.headers=this.element.find(r.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all"),this._hoverable(this.headers),this._focusable(this.headers),this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").hide(),!r.collapsible&&(r.active===!1||r.active==null)&&(r.active=0),r.active<0&&(r.active+=this.headers.length),this.active=this._findActive(r.active).addClass("ui-accordion-header-active ui-state-active").toggleClass("ui-corner-all ui-corner-top"),this.active.next().addClass("ui-accordion-content-active").show(),this._createIcons(),this.refresh(),this.element.attr("role","tablist"),this.headers.attr("role","tab").each(function(n){var r=e(this),i=r.attr("id"),s=r.next(),o=s.attr("id");i||(i=t+"-header-"+n,r.attr("id",i)),o||(o=t+"-panel-"+n,s.attr("id",o)),r.attr("aria-controls",o),s.attr("aria-labelledby",i)}).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false",tabIndex:-1}).next().attr({"aria-expanded":"false","aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true",tabIndex:0}).next().attr({"aria-expanded":"true","aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._on(this.headers,{keydown:"_keydown"}),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._setupEvents(r.event)},_getCreateEventData:function(){return{header:this.active,content:this.active.length?this.active.next():e()}},_createIcons:function(){var t=this.options.icons;t&&(e("<span>").addClass("ui-accordion-header-icon ui-icon "+t.header).prependTo(this.headers),this.active.children(".ui-accordion-header-icon").removeClass(t.header).addClass(t.activeHeader),this.headers.addClass("ui-accordion-icons"))},_destroyIcons:function(){this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()},_destroy:function(){var e;this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"),this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute("id")}),this._destroyIcons(),e=this.headers.next().css("display","").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute("id")}),this.options.heightStyle!=="content"&&e.css("height","")},_setOption:function(e,t){if(e==="active"){this._activate(t);return}e==="event"&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(t)),this._super(e,t),e==="collapsible"&&!t&&this.options.active===!1&&this._activate(0),e==="icons"&&(this._destroyIcons(),t&&this._createIcons()),e==="disabled"&&this.headers.add(this.headers.next()).toggleClass("ui-state-disabled",!!t)},_keydown:function(t){if(t.altKey||t.ctrlKey)return;var n=e.ui.keyCode,r=this.headers.length,i=this.headers.index(t.target),s=!1;switch(t.keyCode){case n.RIGHT:case n.DOWN:s=this.headers[(i+1)%r];break;case n.LEFT:case n.UP:s=this.headers[(i-1+r)%r];break;case n.SPACE:case n.ENTER:this._eventHandler(t);break;case n.HOME:s=this.headers[0];break;case n.END:s=this.headers[r-1]}s&&(e(t.target).attr("tabIndex",-1),e(s).attr("tabIndex",0),s.focus(),t.preventDefault())},_panelKeyDown:function(t){t.keyCode===e.ui.keyCode.UP&&t.ctrlKey&&e(t.currentTarget).prev().focus()},refresh:function(){var t,n,r=this.options.heightStyle,i=this.element.parent();r==="fill"?(e.support.minHeight||(n=i.css("overflow"),i.css("overflow","hidden")),t=i.height(),this.element.siblings(":visible").each(function(){var n=e(this),r=n.css("position");if(r==="absolute"||r==="fixed")return;t-=n.outerHeight(!0)}),n&&i.css("overflow",n),this.headers.each(function(){t-=e(this).outerHeight(!0)}),this.headers.next().each(function(){e(this).height(Math.max(0,t-e(this).innerHeight()+e(this).height()))}).css("overflow","auto")):r==="auto"&&(t=0,this.headers.next().each(function(){t=Math.max(t,e(this).css("height","").height())}).height(t))},_activate:function(t){var n=this._findActive(t)[0];if(n===this.active[0])return;n=n||this.active[0],this._eventHandler({target:n,currentTarget:n,preventDefault:e.noop})},_findActive:function(t){return typeof t=="number"?this.headers.eq(t):e()},_setupEvents:function(t){var n={};if(!t)return;e.each(t.split(" "),function(e,t){n[t]="_eventHandler"}),this._on(this.headers,n)},_eventHandler:function(t){var n=this.options,r=this.active,i=e(t.currentTarget),s=i[0]===r[0],o=s&&n.collapsible,u=o?e():i.next(),a=r.next(),f={oldHeader:r,oldPanel:a,newHeader:o?e():i,newPanel:u};t.preventDefault();if(s&&!n.collapsible||this._trigger("beforeActivate",t,f)===!1)return;n.active=o?!1:this.headers.index(i),this.active=s?e():i,this._toggle(f),r.removeClass("ui-accordion-header-active ui-state-active"),n.icons&&r.children(".ui-accordion-header-icon").removeClass(n.icons.activeHeader).addClass(n.icons.header),s||(i.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"),n.icons&&i.children(".ui-accordion-header-icon").removeClass(n.icons.header).addClass(n.icons.activeHeader),i.next().addClass("ui-accordion-content-active"))},_toggle:function(t){var n=t.newPanel,r=this.prevShow.length?this.prevShow:t.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=n,this.prevHide=r,this.options.animate?this._animate(n,r,t):(r.hide(),n.show(),this._toggleComplete(t)),r.attr({"aria-expanded":"false","aria-hidden":"true"}),r.prev().attr("aria-selected","false"),n.length&&r.length?r.prev().attr("tabIndex",-1):n.length&&this.headers.filter(function(){return e(this).attr("tabIndex")===0}).attr("tabIndex",-1),n.attr({"aria-expanded":"true","aria-hidden":"false"}).prev().attr({"aria-selected":"true",tabIndex:0})},_animate:function(e,t,n){var s,o,u,a=this,f=0,l=e.length&&(!t.length||e.index()<t.index()),c=this.options.animate||{},h=l&&c.down||c,p=function(){a._toggleComplete(n)};typeof h=="number"&&(u=h),typeof h=="string"&&(o=h),o=o||h.easing||c.easing,u=u||h.duration||c.duration;if(!t.length)return e.animate(i,u,o,p);if(!e.length)return t.animate(r,u,o,p);s=e.show().outerHeight(),t.animate(r,{duration:u,easing:o,step:function(e,t){t.now=Math.round(e)}}),e.hide().animate(i,{duration:u,easing:o,complete:p,step:function(e,n){n.now=Math.round(e),n.prop!=="height"?f+=n.now:a.options.heightStyle!=="content"&&(n.now=Math.round(s-t.outerHeight()-f),f=0)}})},_toggleComplete:function(e){var t=e.oldPanel;t.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"),t.length&&(t.parent()[0].className=t.parent()[0].className),this._trigger("activate",null,e)}}),e.uiBackCompat!==!1&&(function(e,t){e.extend(t.options,{navigation:!1,navigationFilter:function(){return this.href.toLowerCase()===location.href.toLowerCase()}});var n=t._create;t._create=function(){if(this.options.navigation){var t=this,r=this.element.find(this.options.header),i=r.next(),s=r.add(i).find("a").filter(this.options.navigationFilter)[0];s&&r.add(i).each(function(n){if(e.contains(this,s))return t.options.active=Math.floor(n/2),!1})}n.call(this)}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options,{heightStyle:null,autoHeight:!0,clearStyle:!1,fillSpace:!1});var n=t._create,r=t._setOption;e.extend(t,{_create:function(){this.options.heightStyle=this.options.heightStyle||this._mergeHeightStyle(),n.call(this)},_setOption:function(e){if(e==="autoHeight"||e==="clearStyle"||e==="fillSpace")this.options.heightStyle=this._mergeHeightStyle();r.apply(this,arguments)},_mergeHeightStyle:function(){var e=this.options;if(e.fillSpace)return"fill";if(e.clearStyle)return"content";if(e.autoHeight)return"auto"}})}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options.icons,{activeHeader:null,headerSelected:"ui-icon-triangle-1-s"});var n=t._createIcons;t._createIcons=function(){this.options.icons&&(this.options.icons.activeHeader=this.options.icons.activeHeader||this.options.icons.headerSelected),n.call(this)}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){t.activate=t._activate;var n=t._findActive;t._findActive=function(e){return e===-1&&(e=!1),e&&typeof e!="number"&&(e=this.headers.index(this.headers.filter(e)),e===-1&&(e=!1)),n.call(this,e)}}(jQuery,jQuery.ui.accordion.prototype),jQuery.ui.accordion.prototype.resize=jQuery.ui.accordion.prototype.refresh,function(e,t){e.extend(t.options,{change:null,changestart:null});var n=t._trigger;t._trigger=function(e,t,r){var i=n.apply(this,arguments);return i?(e==="beforeActivate"?i=n.call(this,"changestart",t,{oldHeader:r.oldHeader,oldContent:r.oldPanel,newHeader:r.newHeader,newContent:r.newPanel}):e==="activate"&&(i=n.call(this,"change",t,{oldHeader:r.oldHeader,oldContent:r.oldPanel,newHeader:r.newHeader,newContent:r.newPanel})),i):!1}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options,{animate:null,animated:"slide"});var n=t._create;t._create=function(){var e=this.options;e.animate===null&&(e.animated?e.animated==="slide"?e.animate=300:e.animated==="bounceslide"?e.animate={duration:200,down:{easing:"easeOutBounce",duration:1e3}}:e.animate=e.animated:e.animate=!1),n.call(this)}}(jQuery,jQuery.ui.accordion.prototype))}(jQuery),function(e,t){var n=0;e.widget("ui.autocomplete",{version:"1.9.2",defaultElement:"<input>",options:{appendTo:"body",autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},pending:0,_create:function(){var t,n,r;this.isMultiLine=this._isMultiLine(),this.valueMethod=this.element[this.element.is("input,textarea")?"val":"text"],this.isNewMenu=!0,this.element.addClass("ui-autocomplete-input").attr("autocomplete","off"),this._on(this.element,{keydown:function(i){if(this.element.prop("readOnly")){t=!0,r=!0,n=!0;return}t=!1,r=!1,n=!1;var s=e.ui.keyCode;switch(i.keyCode){case s.PAGE_UP:t=!0,this._move("previousPage",i);break;case s.PAGE_DOWN:t=!0,this._move("nextPage",i);break;case s.UP:t=!0,this._keyEvent("previous",i);break;case s.DOWN:t=!0,this._keyEvent("next",i);break;case s.ENTER:case s.NUMPAD_ENTER:this.menu.active&&(t=!0,i.preventDefault(),this.menu.select(i));break;case s.TAB:this.menu.active&&this.menu.select(i);break;case s.ESCAPE:this.menu.element.is(":visible")&&(this._value(this.term),this.close(i),i.preventDefault());break;default:n=!0,this._searchTimeout(i)}},keypress:function(r){if(t){t=!1,r.preventDefault();return}if(n)return;var i=e.ui.keyCode;switch(r.keyCode){case i.PAGE_UP:this._move("previousPage",r);break;case i.PAGE_DOWN:this._move("nextPage",r);break;case i.UP:this._keyEvent("previous",r);break;case i.DOWN:this._keyEvent("next",r)}},input:function(e){if(r){r=!1,e.preventDefault();return}this._searchTimeout(e)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(e){if(this.cancelBlur){delete this.cancelBlur;return}clearTimeout(this.searching),this.close(e),this._change(e)}}),this._initSource(),this.menu=e("<ul>").addClass("ui-autocomplete").appendTo(this.document.find(this.options.appendTo||"body")[0]).menu({input:e(),role:null}).zIndex(this.element.zIndex()+1).hide().data("menu"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var n=this.menu.element[0];e(t.target).closest(".ui-menu-item").length||this._delay(function(){var t=this;this.document.one("mousedown",function(r){r.target!==t.element[0]&&r.target!==n&&!e.contains(n,r.target)&&t.close()})})},menufocus:function(t,n){if(this.isNewMenu){this.isNewMenu=!1;if(t.originalEvent&&/^mouse/.test(t.originalEvent.type)){this.menu.blur(),this.document.one("mousemove",function(){e(t.target).trigger(t.originalEvent)});return}}var r=n.item.data("ui-autocomplete-item")||n.item.data("item.autocomplete");!1!==this._trigger("focus",t,{item:r})?t.originalEvent&&/^key/.test(t.originalEvent.type)&&this._value(r.value):this.liveRegion.text(r.value)},menuselect:function(e,t){var n=t.item.data("ui-autocomplete-item")||t.item.data("item.autocomplete"),r=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=r,this._delay(function(){this.previous=r,this.selectedItem=n})),!1!==this._trigger("select",e,{item:n})&&this._value(n.value),this.term=this._value(),this.close(e),this.selectedItem=n}}),this.liveRegion=e("<span>",{role:"status","aria-live":"polite"}).addClass("ui-helper-hidden-accessible").insertAfter(this.element),e.fn.bgiframe&&this.menu.element.bgiframe(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(e,t){this._super(e,t),e==="source"&&this._initSource(),e==="appendTo"&&this.menu.element.appendTo(this.document.find(t||"body")[0]),e==="disabled"&&t&&this.xhr&&this.xhr.abort()},_isMultiLine:function(){return this.element.is("textarea")?!0:this.element.is("input")?!1:this.element.prop("isContentEditable")},_initSource:function(){var t,n,r=this;e.isArray(this.options.source)?(t=this.options.source,this.source=function(n,r){r(e.ui.autocomplete.filter(t,n.term))}):typeof this.options.source=="string"?(n=this.options.source,this.source=function(t,i){r.xhr&&r.xhr.abort(),r.xhr=e.ajax({url:n,data:t,dataType:"json",success:function(e){i(e)},error:function(){i([])}})}):this.source=this.options.source},_searchTimeout:function(e){clearTimeout(this.searching),this.searching=this._delay(function(){this.term!==this._value()&&(this.selectedItem=null,this.search(null,e))},this.options.delay)},search:function(e,t){e=e!=null?e:this._value(),this.term=this._value();if(e.length<this.options.minLength)return this.close(t);if(this._trigger("search",t)===!1)return;return this._search(e)},_search:function(e){this.pending++,this.element.addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:e},this._response())},_response:function(){var e=this,t=++n;return function(r){t===n&&e.__response(r),e.pending--,e.pending||e.element.removeClass("ui-autocomplete-loading")}},__response:function(e){e&&(e=this._normalize(e)),this._trigger("response",null,{content:e}),!this.options.disabled&&e&&e.length&&!this.cancelSearch?(this._suggest(e),this._trigger("open")):this._close()},close:function(e){this.cancelSearch=!0,this._close(e)},_close:function(e){this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",e))},_change:function(e){this.previous!==this._value()&&this._trigger("change",e,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:e.map(t,function(t){return typeof t=="string"?{label:t,value:t}:e.extend({label:t.label||t.value,value:t.value||t.label},t)})},_suggest:function(t){var n=this.menu.element.empty().zIndex(this.element.zIndex()+1);this._renderMenu(n,t),this.menu.refresh(),n.show(),this._resizeMenu(),n.position(e.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var e=this.menu.element;e.outerWidth(Math.max(e.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(t,n){var r=this;e.each(n,function(e,n){r._renderItemData(t,n)})},_renderItemData:function(e,t){return this._renderItem(e,t).data("ui-autocomplete-item",t)},_renderItem:function(t,n){return e("<li>").append(e("<a>").text(n.label)).appendTo(t)},_move:function(e,t){if(!this.menu.element.is(":visible")){this.search(null,t);return}if(this.menu.isFirstItem()&&/^previous/.test(e)||this.menu.isLastItem()&&/^next/.test(e)){this._value(this.term),this.menu.blur();return}this.menu[e](t)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(e,t){if(!this.isMultiLine||this.menu.element.is(":visible"))this._move(e,t),t.preventDefault()}}),e.extend(e.ui.autocomplete,{escapeRegex:function(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(t,n){var r=new RegExp(e.ui.autocomplete.escapeRegex(n),"i");return e.grep(t,function(e){return r.test(e.label||e.value||e)})}}),e.widget("ui.autocomplete",e.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(e){return e+(e>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(e){var t;this._superApply(arguments);if(this.options.disabled||this.cancelSearch)return;e&&e.length?t=this.options.messages.results(e.length):t=this.options.messages.noResults,this.liveRegion.text(t)}})}(jQuery),function(e,t){var n,r,i,s,o="ui-button ui-widget ui-state-default ui-corner-all",u="ui-state-hover ui-state-active ",a="ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",f=function(){var t=e(this).find(":ui-button");setTimeout(function(){t.button("refresh")},1)},l=function(t){var n=t.name,r=t.form,i=e([]);return n&&(r?i=e(r).find("[name='"+n+"']"):i=e("[name='"+n+"']",t.ownerDocument).filter(function(){return!this.form})),i};e.widget("ui.button",{version:"1.9.2",defaultElement:"<button>",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset"+this.eventNamespace).bind("reset"+this.eventNamespace,f),typeof this.options.disabled!="boolean"?this.options.disabled=!!this.element.prop("disabled"):this.element.prop("disabled",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr("title");var t=this,u=this.options,a=this.type==="checkbox"||this.type==="radio",c=a?"":"ui-state-active",h="ui-state-focus";u.label===null&&(u.label=this.type==="input"?this.buttonElement.val():this.buttonElement.html()),this._hoverable(this.buttonElement),this.buttonElement.addClass(o).attr("role","button").bind("mouseenter"+this.eventNamespace,function(){if(u.disabled)return;this===n&&e(this).addClass("ui-state-active")}).bind("mouseleave"+this.eventNamespace,function(){if(u.disabled)return;e(this).removeClass(c)}).bind("click"+this.eventNamespace,function(e){u.disabled&&(e.preventDefault(),e.stopImmediatePropagation())}),this.element.bind("focus"+this.eventNamespace,function(){t.buttonElement.addClass(h)}).bind("blur"+this.eventNamespace,function(){t.buttonElement.removeClass(h)}),a&&(this.element.bind("change"+this.eventNamespace,function(){if(s)return;t.refresh()}),this.buttonElement.bind("mousedown"+this.eventNamespace,function(e){if(u.disabled)return;s=!1,r=e.pageX,i=e.pageY}).bind("mouseup"+this.eventNamespace,function(e){if(u.disabled)return;if(r!==e.pageX||i!==e.pageY)s=!0})),this.type==="checkbox"?this.buttonElement.bind("click"+this.eventNamespace,function(){if(u.disabled||s)return!1;e(this).toggleClass("ui-state-active"),t.buttonElement.attr("aria-pressed",t.element[0].checked)}):this.type==="radio"?this.buttonElement.bind("click"+this.eventNamespace,function(){if(u.disabled||s)return!1;e(this).addClass("ui-state-active"),t.buttonElement.attr("aria-pressed","true");var n=t.element[0];l(n).not(n).map(function(){return e(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")}):(this.buttonElement.bind("mousedown"+this.eventNamespace,function(){if(u.disabled)return!1;e(this).addClass("ui-state-active"),n=this,t.document.one("mouseup",function(){n=null})}).bind("mouseup"+this.eventNamespace,function(){if(u.disabled)return!1;e(this).removeClass("ui-state-active")}).bind("keydown"+this.eventNamespace,function(t){if(u.disabled)return!1;(t.keyCode===e.ui.keyCode.SPACE||t.keyCode===e.ui.keyCode.ENTER)&&e(this).addClass("ui-state-active")}).bind("keyup"+this.eventNamespace,function(){e(this).removeClass("ui-state-active")}),this.buttonElement.is("a")&&this.buttonElement.keyup(function(t){t.keyCode===e.ui.keyCode.SPACE&&e(this).click()})),this._setOption("disabled",u.disabled),this._resetButton()},_determineButtonType:function(){var e,t,n;this.element.is("[type=checkbox]")?this.type="checkbox":this.element.is("[type=radio]")?this.type="radio":this.element.is("input")?this.type="input":this.type="button",this.type==="checkbox"||this.type==="radio"?(e=this.element.parents().last(),t="label[for='"+this.element.attr("id")+"']",this.buttonElement=e.find(t),this.buttonElement.length||(e=e.length?e.siblings():this.element.siblings(),this.buttonElement=e.filter(t),this.buttonElement.length||(this.buttonElement=e.find(t))),this.element.addClass("ui-helper-hidden-accessible"),n=this.element.is(":checked"),n&&this.buttonElement.addClass("ui-state-active"),this.buttonElement.prop("aria-pressed",n)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass("ui-helper-hidden-accessible"),this.buttonElement.removeClass(o+" "+u+" "+a).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()),this.hasTitle||this.buttonElement.removeAttr("title")},_setOption:function(e,t){this._super(e,t);if(e==="disabled"){t?this.element.prop("disabled",!0):this.element.prop("disabled",!1);return}this._resetButton()},refresh:function(){var t=this.element.is("input, button")?this.element.is(":disabled"):this.element.hasClass("ui-button-disabled");t!==this.options.disabled&&this._setOption("disabled",t),this.type==="radio"?l(this.element[0]).each(function(){e(this).is(":checked")?e(this).button("widget").addClass("ui-state-active").attr("aria-pressed","true"):e(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")}):this.type==="checkbox"&&(this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true"):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false"))},_resetButton:function(){if(this.type==="input"){this.options.label&&this.element.val(this.options.label);return}var t=this.buttonElement.removeClass(a),n=e("<span></span>",this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(t.empty()).text(),r=this.options.icons,i=r.primary&&r.secondary,s=[];r.primary||r.secondary?(this.options.text&&s.push("ui-button-text-icon"+(i?"s":r.primary?"-primary":"-secondary")),r.primary&&t.prepend("<span class='ui-button-icon-primary ui-icon "+r.primary+"'></span>"),r.secondary&&t.append("<span class='ui-button-icon-secondary ui-icon "+r.secondary+"'></span>"),this.options.text||(s.push(i?"ui-button-icons-only":"ui-button-icon-only"),this.hasTitle||t.attr("title",e.trim(n)))):s.push("ui-button-text-only"),t.addClass(s.join(" "))}}),e.widget("ui.buttonset",{version:"1.9.2",options:{items:"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(e,t){e==="disabled"&&this.buttons.button("option",e,t),this._super(e,t)},refresh:function(){var t=this.element.css("direction")==="rtl";this.buttons=this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function(){return e(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(t?"ui-corner-right":"ui-corner-left").end().filter(":last").addClass(t?"ui-corner-left":"ui-corner-right").end().end()},_destroy:function(){this.element.removeClass("ui-buttonset"),this.buttons.map(function(){return e(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy")}})}(jQuery),function($,undefined){function Datepicker(){this.debug=!1,this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},$.extend(this._defaults,this.regional[""]),this.dpDiv=bindHover($('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function bindHover(e){var t="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.delegate(t,"mouseout",function(){$(this).removeClass("ui-state-hover"),this.className.indexOf("ui-datepicker-prev")!=-1&&$(this).removeClass("ui-datepicker-prev-hover"),this.className.indexOf("ui-datepicker-next")!=-1&&$(this).removeClass("ui-datepicker-next-hover")}).delegate(t,"mouseover",function(){$.datepicker._isDisabledDatepicker(instActive.inline?e.parent()[0]:instActive.input[0])||($(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),$(this).addClass("ui-state-hover"),this.className.indexOf("ui-datepicker-prev")!=-1&&$(this).addClass("ui-datepicker-prev-hover"),this.className.indexOf("ui-datepicker-next")!=-1&&$(this).addClass("ui-datepicker-next-hover"))})}function extendRemove(e,t){$.extend(e,t);for(var n in t)if(t[n]==null||t[n]==undefined)e[n]=t[n];return e}$.extend($.ui,{datepicker:{version:"1.9.2"}});var PROP_NAME="datepicker",dpuuid=(new Date).getTime(),instActive;$.extend(Datepicker.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return extendRemove(this._defaults,e||{}),this},_attachDatepicker:function(target,settings){var inlineSettings=null;for(var attrName in this._defaults){var attrValue=target.getAttribute("date:"+attrName);if(attrValue){inlineSettings=inlineSettings||{};try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}}var nodeName=target.nodeName.toLowerCase(),inline=nodeName=="div"||nodeName=="span";target.id||(this.uuid+=1,target.id="dp"+this.uuid);var inst=this._newInst($(target),inline);inst.settings=$.extend({},settings||{},inlineSettings||{}),nodeName=="input"?this._connectDatepicker(target,inst):inline&&this._inlineDatepicker(target,inst)},_newInst:function(e,t){var n=e[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1");return{id:n,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:t,dpDiv:t?bindHover($('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')):this.dpDiv}},_connectDatepicker:function(e,t){var n=$(e);t.append=$([]),t.trigger=$([]);if(n.hasClass(this.markerClassName))return;this._attachments(n,t),n.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",function(e,n,r){t.settings[n]=r}).bind("getData.datepicker",function(e,n){return this._get(t,n)}),this._autoSize(t),$.data(e,PROP_NAME,t),t.settings.disabled&&this._disableDatepicker(e)},_attachments:function(e,t){var n=this._get(t,"appendText"),r=this._get(t,"isRTL");t.append&&t.append.remove(),n&&(t.append=$('<span class="'+this._appendClass+'">'+n+"</span>"),e[r?"before":"after"](t.append)),e.unbind("focus",this._showDatepicker),t.trigger&&t.trigger.remove();var i=this._get(t,"showOn");(i=="focus"||i=="both")&&e.focus(this._showDatepicker);if(i=="button"||i=="both"){var s=this._get(t,"buttonText"),o=this._get(t,"buttonImage");t.trigger=$(this._get(t,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:o,alt:s,title:s}):$('<button type="button"></button>').addClass(this._triggerClass).html(o==""?s:$("<img/>").attr({src:o,alt:s,title:s}))),e[r?"before":"after"](t.trigger),t.trigger.click(function(){return $.datepicker._datepickerShowing&&$.datepicker._lastInput==e[0]?$.datepicker._hideDatepicker():$.datepicker._datepickerShowing&&$.datepicker._lastInput!=e[0]?($.datepicker._hideDatepicker(),$.datepicker._showDatepicker(e[0])):$.datepicker._showDatepicker(e[0]),!1})}},_autoSize:function(e){if(this._get(e,"autoSize")&&!e.inline){var t=new Date(2009,11,20),n=this._get(e,"dateFormat");if(n.match(/[DM]/)){var r=function(e){var t=0,n=0;for(var r=0;r<e.length;r++)e[r].length>t&&(t=e[r].length,n=r);return n};t.setMonth(r(this._get(e,n.match(/MM/)?"monthNames":"monthNamesShort"))),t.setDate(r(this._get(e,n.match(/DD/)?"dayNames":"dayNamesShort"))+20-t.getDay())}e.input.attr("size",this._formatDate(e,t).length)}},_inlineDatepicker:function(e,t){var n=$(e);if(n.hasClass(this.markerClassName))return;n.addClass(this.markerClassName).append(t.dpDiv).bind("setData.datepicker",function(e,n,r){t.settings[n]=r}).bind("getData.datepicker",function(e,n){return this._get(t,n)}),$.data(e,PROP_NAME,t),this._setDate(t,this._getDefaultDate(t),!0),this._updateDatepicker(t),this._updateAlternate(t),t.settings.disabled&&this._disableDatepicker(e),t.dpDiv.css("display","block")},_dialogDatepicker:function(e,t,n,r,i){var s=this._dialogInst;if(!s){this.uuid+=1;var o="dp"+this.uuid;this._dialogInput=$('<input type="text" id="'+o+'" style="position: absolute; top: -100px; width: 0px;"/>'),this._dialogInput.keydown(this._doKeyDown),$("body").append(this._dialogInput),s=this._dialogInst=this._newInst(this._dialogInput,!1),s.settings={},$.data(this._dialogInput[0],PROP_NAME,s)}extendRemove(s.settings,r||{}),t=t&&t.constructor==Date?this._formatDate(s,t):t,this._dialogInput.val(t),this._pos=i?i.length?i:[i.pageX,i.pageY]:null;if(!this._pos){var u=document.documentElement.clientWidth,a=document.documentElement.clientHeight,f=document.documentElement.scrollLeft||document.body.scrollLeft,l=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[u/2-100+f,a/2-150+l]}return this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),s.settings.onSelect=n,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),$.blockUI&&$.blockUI(this.dpDiv),$.data(this._dialogInput[0],PROP_NAME,s),this},_destroyDatepicker:function(e){var t=$(e),n=$.data(e,PROP_NAME);if(!t.hasClass(this.markerClassName))return;var r=e.nodeName.toLowerCase();$.removeData(e,PROP_NAME),r=="input"?(n.append.remove(),n.trigger.remove(),t.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):(r=="div"||r=="span")&&t.removeClass(this.markerClassName).empty()},_enableDatepicker:function(e){var t=$(e),n=$.data(e,PROP_NAME);if(!t.hasClass(this.markerClassName))return;var r=e.nodeName.toLowerCase();if(r=="input")e.disabled=!1,n.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""});else if(r=="div"||r=="span"){var i=t.children("."+this._inlineClass);i.children().removeClass("ui-state-disabled"),i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t})},_disableDatepicker:function(e){var t=$(e),n=$.data(e,PROP_NAME);if(!t.hasClass(this.markerClassName))return;var r=e.nodeName.toLowerCase();if(r=="input")e.disabled=!0,n.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"});else if(r=="div"||r=="span"){var i=t.children("."+this._inlineClass);i.children().addClass("ui-state-disabled"),i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t}),this._disabledInputs[this._disabledInputs.length]=e},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;t<this._disabledInputs.length;t++)if(this._disabledInputs[t]==e)return!0;return!1},_getInst:function(e){try{return $.data(e,PROP_NAME)}catch(t){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,t,n){var r=this._getInst(e);if(arguments.length==2&&typeof t=="string")return t=="defaults"?$.extend({},$.datepicker._defaults):r?t=="all"?$.extend({},r.settings):this._get(r,t):null;var i=t||{};typeof t=="string"&&(i={},i[t]=n);if(r){this._curInst==r&&this._hideDatepicker();var s=this._getDateDatepicker(e,!0),o=this._getMinMaxDate(r,"min"),u=this._getMinMaxDate(r,"max");extendRemove(r.settings,i),o!==null&&i.dateFormat!==undefined&&i.minDate===undefined&&(r.settings.minDate=this._formatDate(r,o)),u!==null&&i.dateFormat!==undefined&&i.maxDate===undefined&&(r.settings.maxDate=this._formatDate(r,u)),this._attachments($(e),r),this._autoSize(r),this._setDate(r,s),this._updateAlternate(r),this._updateDatepicker(r)}},_changeDatepicker:function(e,t,n){this._optionDatepicker(e,t,n)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var n=this._getInst(e);n&&(this._setDate(n,t),this._updateDatepicker(n),this._updateAlternate(n))},_getDateDatepicker:function(e,t){var n=this._getInst(e);return n&&!n.inline&&this._setDateFromField(n,t),n?this._getDate(n):null},_doKeyDown:function(e){var t=$.datepicker._getInst(e.target),n=!0,r=t.dpDiv.is(".ui-datepicker-rtl");t._keyEvent=!0;if($.datepicker._datepickerShowing)switch(e.keyCode){case 9:$.datepicker._hideDatepicker(),n=!1;break;case 13:var i=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",t.dpDiv);i[0]&&$.datepicker._selectDay(e.target,t.selectedMonth,t.selectedYear,i[0]);var s=$.datepicker._get(t,"onSelect");if(s){var o=$.datepicker._formatDate(t);s.apply(t.input?t.input[0]:null,[o,t])}else $.datepicker._hideDatepicker();return!1;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 34:$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&$.datepicker._clearDate(e.target),n=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&$.datepicker._gotoToday(e.target),n=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,r?1:-1,"D"),n=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,-7,"D"),n=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,r?-1:1,"D"),n=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,7,"D"),n=e.ctrlKey||e.metaKey;break;default:n=!1}else e.keyCode==36&&e.ctrlKey?$.datepicker._showDatepicker(this):n=!1;n&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var t=$.datepicker._getInst(e.target);if($.datepicker._get(t,"constrainInput")){var n=$.datepicker._possibleChars($.datepicker._get(t,"dateFormat")),r=String.fromCharCode(e.charCode==undefined?e.keyCode:e.charCode);return e.ctrlKey||e.metaKey||r<" "||!n||n.indexOf(r)>-1}},_doKeyUp:function(e){var t=$.datepicker._getInst(e.target);if(t.input.val()!=t.lastVal)try{var n=$.datepicker.parseDate($.datepicker._get(t,"dateFormat"),t.input?t.input.val():null,$.datepicker._getFormatConfig(t));n&&($.datepicker._setDateFromField(t),$.datepicker._updateAlternate(t),$.datepicker._updateDatepicker(t))}catch(r){$.datepicker.log(r)}return!0},_showDatepicker:function(e){e=e.target||e,e.nodeName.toLowerCase()!="input"&&(e=$("input",e.parentNode)[0]);if($.datepicker._isDisabledDatepicker(e)||$.datepicker._lastInput==e)return;var t=$.datepicker._getInst(e);$.datepicker._curInst&&$.datepicker._curInst!=t&&($.datepicker._curInst.dpDiv.stop(!0,!0),t&&$.datepicker._datepickerShowing&&$.datepicker._hideDatepicker($.datepicker._curInst.input[0]));var n=$.datepicker._get(t,"beforeShow"),r=n?n.apply(e,[e,t]):{};if(r===!1)return;extendRemove(t.settings,r),t.lastVal=null,$.datepicker._lastInput=e,$.datepicker._setDateFromField(t),$.datepicker._inDialog&&(e.value=""),$.datepicker._pos||($.datepicker._pos=$.datepicker._findPos(e),$.datepicker._pos[1]+=e.offsetHeight);var i=!1;$(e).parents().each(function(){return i|=$(this).css("position")=="fixed",!i});var s={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};$.datepicker._pos=null,t.dpDiv.empty(),t.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),$.datepicker._updateDatepicker(t),s=$.datepicker._checkOffset(t,s,i),t.dpDiv.css({position:$.datepicker._inDialog&&$.blockUI?"static":i?"fixed":"absolute",display:"none",left:s.left+"px",top:s.top+"px"});if(!t.inline){var o=$.datepicker._get(t,"showAnim"),u=$.datepicker._get(t,"duration"),a=function(){var e=t.dpDiv.find("iframe.ui-datepicker-cover");if(!!e.length){var n=$.datepicker._getBorders(t.dpDiv);e.css({left:-n[0],top:-n[1],width:t.dpDiv.outerWidth(),height:t.dpDiv.outerHeight()})}};t.dpDiv.zIndex($(e).zIndex()+1),$.datepicker._datepickerShowing=!0,$.effects&&($.effects.effect[o]||$.effects[o])?t.dpDiv.show(o,$.datepicker._get(t,"showOptions"),u,a):t.dpDiv[o||"show"](o?u:null,a),(!o||!u)&&a(),t.input.is(":visible")&&!t.input.is(":disabled")&&t.input.focus(),$.datepicker._curInst=t}},_updateDatepicker:function(e){this.maxRows=4;var t=$.datepicker._getBorders(e.dpDiv);instActive=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var n=e.dpDiv.find("iframe.ui-datepicker-cover");!n.length||n.css({left:-t[0],top:-t[1],width:e.dpDiv.outerWidth(),height:e.dpDiv.outerHeight()}),e.dpDiv.find("."+this._dayOverClass+" a").mouseover();var r=this._getNumberOfMonths(e),i=r[1],s=17;e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),i>1&&e.dpDiv.addClass("ui-datepicker-multi-"+i).css("width",s*i+"em"),e.dpDiv[(r[0]!=1||r[1]!=1?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e==$.datepicker._curInst&&$.datepicker._datepickerShowing&&e.input&&e.input.is(":visible")&&!e.input.is(":disabled")&&e.input[0]!=document.activeElement&&e.input.focus();if(e.yearshtml){var o=e.yearshtml;setTimeout(function(){o===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),o=e.yearshtml=null},0)}},_getBorders:function(e){var t=function(e){return{thin:1,medium:2,thick:3}[e]||e};return[parseFloat(t(e.css("border-left-width"))),parseFloat(t(e.css("border-top-width")))]},_checkOffset:function(e,t,n){var r=e.dpDiv.outerWidth(),i=e.dpDiv.outerHeight(),s=e.input?e.input.outerWidth():0,o=e.input?e.input.outerHeight():0,u=document.documentElement.clientWidth+(n?0:$(document).scrollLeft()),a=document.documentElement.clientHeight+(n?0:$(document).scrollTop());return t.left-=this._get(e,"isRTL")?r-s:0,t.left-=n&&t.left==e.input.offset().left?$(document).scrollLeft():0,t.top-=n&&t.top==e.input.offset().top+o?$(document).scrollTop():0,t.left-=Math.min(t.left,t.left+r>u&&u>r?Math.abs(t.left+r-u):0),t.top-=Math.min(t.top,t.top+i>a&&a>i?Math.abs(i+o):0),t},_findPos:function(e){var t=this._getInst(e),n=this._get(t,"isRTL");while(e&&(e.type=="hidden"||e.nodeType!=1||$.expr.filters.hidden(e)))e=e[n?"previousSibling":"nextSibling"];var r=$(e).offset();return[r.left,r.top]},_hideDatepicker:function(e){var t=this._curInst;if(!t||e&&t!=$.data(e,PROP_NAME))return;if(this._datepickerShowing){var n=this._get(t,"showAnim"),r=this._get(t,"duration"),i=function(){$.datepicker._tidyDialog(t)};$.effects&&($.effects.effect[n]||$.effects[n])?t.dpDiv.hide(n,$.datepicker._get(t,"showOptions"),r,i):t.dpDiv[n=="slideDown"?"slideUp":n=="fadeIn"?"fadeOut":"hide"](n?r:null,i),n||i(),this._datepickerShowing=!1;var s=this._get(t,"onClose");s&&s.apply(t.input?t.input[0]:null,[t.input?t.input.val():"",t]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),$.blockUI&&($.unblockUI(),$("body").append(this.dpDiv))),this._inDialog=!1}},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(e){if(!$.datepicker._curInst)return;var t=$(e.target),n=$.datepicker._getInst(t[0]);(t[0].id!=$.datepicker._mainDivId&&t.parents("#"+$.datepicker._mainDivId).length==0&&!t.hasClass($.datepicker.markerClassName)&&!t.closest("."+$.datepicker._triggerClass).length&&$.datepicker._datepickerShowing&&(!$.datepicker._inDialog||!$.blockUI)||t.hasClass($.datepicker.markerClassName)&&$.datepicker._curInst!=n)&&$.datepicker._hideDatepicker()},_adjustDate:function(e,t,n){var r=$(e),i=this._getInst(r[0]);if(this._isDisabledDatepicker(r[0]))return;this._adjustInstDate(i,t+(n=="M"?this._get(i,"showCurrentAtPos"):0),n),this._updateDatepicker(i)},_gotoToday:function(e){var t=$(e),n=this._getInst(t[0]);if(this._get(n,"gotoCurrent")&&n.currentDay)n.selectedDay=n.currentDay,n.drawMonth=n.selectedMonth=n.currentMonth,n.drawYear=n.selectedYear=n.currentYear;else{var r=new Date;n.selectedDay=r.getDate(),n.drawMonth=n.selectedMonth=r.getMonth(),n.drawYear=n.selectedYear=r.getFullYear()}this._notifyChange(n),this._adjustDate(t)},_selectMonthYear:function(e,t,n){var r=$(e),i=this._getInst(r[0]);i["selected"+(n=="M"?"Month":"Year")]=i["draw"+(n=="M"?"Month":"Year")]=parseInt(t.options[t.selectedIndex].value,10),this._notifyChange(i),this._adjustDate(r)},_selectDay:function(e,t,n,r){var i=$(e);if($(r).hasClass(this._unselectableClass)||this._isDisabledDatepicker(i[0]))return;var s=this._getInst(i[0]);s.selectedDay=s.currentDay=$("a",r).html(),s.selectedMonth=s.currentMonth=t,s.selectedYear=s.currentYear=n,this._selectDate(e,this._formatDate(s,s.currentDay,s.currentMonth,s.currentYear))},_clearDate:function(e){var t=$(e),n=this._getInst(t[0]);this._selectDate(t,"")},_selectDate:function(e,t){var n=$(e),r=this._getInst(n[0]);t=t!=null?t:this._formatDate(r),r.input&&r.input.val(t),this._updateAlternate(r);var i=this._get(r,"onSelect");i?i.apply(r.input?r.input[0]:null,[t,r]):r.input&&r.input.trigger("change"),r.inline?this._updateDatepicker(r):(this._hideDatepicker(),this._lastInput=r.input[0],typeof r.input[0]!="object"&&r.input.focus(),this._lastInput=null)},_updateAlternate:function(e){var t=this._get(e,"altField");if(t){var n=this._get(e,"altFormat")||this._get(e,"dateFormat"),r=this._getDate(e),i=this.formatDate(n,r,this._getFormatConfig(e));$(t).each(function(){$(this).val(i)})}},noWeekends:function(e){var t=e.getDay();return[t>0&&t<6,""]},iso8601Week:function(e){var t=new Date(e.getTime());t.setDate(t.getDate()+4-(t.getDay()||7));var n=t.getTime();return t.setMonth(0),t.setDate(1),Math.floor(Math.round((n-t)/864e5)/7)+1},parseDate:function(e,t,n){if(e==null||t==null)throw"Invalid arguments";t=typeof t=="object"?t.toString():t+"";if(t=="")return null;var r=(n?n.shortYearCutoff:null)||this._defaults.shortYearCutoff;r=typeof r!="string"?r:(new Date).getFullYear()%100+parseInt(r,10);var i=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,s=(n?n.dayNames:null)||this._defaults.dayNames,o=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,u=(n?n.monthNames:null)||this._defaults.monthNames,a=-1,f=-1,l=-1,c=-1,h=!1,p=function(t){var n=y+1<e.length&&e.charAt(y+1)==t;return n&&y++,n},d=function(e){var n=p(e),r=e=="@"?14:e=="!"?20:e=="y"&&n?4:e=="o"?3:2,i=new RegExp("^\\d{1,"+r+"}"),s=t.substring(g).match(i);if(!s)throw"Missing number at position "+g;return g+=s[0].length,parseInt(s[0],10)},v=function(e,n,r){var i=$.map(p(e)?r:n,function(e,t){return[[t,e]]}).sort(function(e,t){return-(e[1].length-t[1].length)}),s=-1;$.each(i,function(e,n){var r=n[1];if(t.substr(g,r.length).toLowerCase()==r.toLowerCase())return s=n[0],g+=r.length,!1});if(s!=-1)return s+1;throw"Unknown name at position "+g},m=function(){if(t.charAt(g)!=e.charAt(y))throw"Unexpected literal at position "+g;g++},g=0;for(var y=0;y<e.length;y++)if(h)e.charAt(y)=="'"&&!p("'")?h=!1:m();else switch(e.charAt(y)){case"d":l=d("d");break;case"D":v("D",i,s);break;case"o":c=d("o");break;case"m":f=d("m");break;case"M":f=v("M",o,u);break;case"y":a=d("y");break;case"@":var b=new Date(d("@"));a=b.getFullYear(),f=b.getMonth()+1,l=b.getDate();break;case"!":var b=new Date((d("!")-this._ticksTo1970)/1e4);a=b.getFullYear(),f=b.getMonth()+1,l=b.getDate();break;case"'":p("'")?m():h=!0;break;default:m()}if(g<t.length){var w=t.substr(g);if(!/^\s+/.test(w))throw"Extra/unparsed characters found in date: "+w}a==-1?a=(new Date).getFullYear():a<100&&(a+=(new Date).getFullYear()-(new Date).getFullYear()%100+(a<=r?0:-100));if(c>-1){f=1,l=c;do{var E=this._getDaysInMonth(a,f-1);if(l<=E)break;f++,l-=E}while(!0)}var b=this._daylightSavingAdjust(new Date(a,f-1,l));if(b.getFullYear()!=a||b.getMonth()+1!=f||b.getDate()!=l)throw"Invalid date";return b},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*24*60*60*1e7,formatDate:function(e,t,n){if(!t)return"";var r=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,i=(n?n.dayNames:null)||this._defaults.dayNames,s=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,o=(n?n.monthNames:null)||this._defaults.monthNames,u=function(t){var n=h+1<e.length&&e.charAt(h+1)==t;return n&&h++,n},a=function(e,t,n){var r=""+t;if(u(e))while(r.length<n)r="0"+r;return r},f=function(e,t,n,r){return u(e)?r[t]:n[t]},l="",c=!1;if(t)for(var h=0;h<e.length;h++)if(c)e.charAt(h)=="'"&&!u("'")?c=!1:l+=e.charAt(h);else switch(e.charAt(h)){case"d":l+=a("d",t.getDate(),2);break;case"D":l+=f("D",t.getDay(),r,i);break;case"o":l+=a("o",Math.round(((new Date(t.getFullYear(),t.getMonth(),t.getDate())).getTime()-(new Date(t.getFullYear(),0,0)).getTime())/864e5),3);break;case"m":l+=a("m",t.getMonth()+1,2);break;case"M":l+=f("M",t.getMonth(),s,o);break;case"y":l+=u("y")?t.getFullYear():(t.getYear()%100<10?"0":"")+t.getYear()%100;break;case"@":l+=t.getTime();break;case"!":l+=t.getTime()*1e4+this._ticksTo1970;break;case"'":u("'")?l+="'":c=!0;break;default:l+=e.charAt(h)}return l},_possibleChars:function(e){var t="",n=!1,r=function(t){var n=i+1<e.length&&e.charAt(i+1)==t;return n&&i++,n};for(var i=0;i<e.length;i++)if(n)e.charAt(i)=="'"&&!r("'")?n=!1:t+=e.charAt(i);else switch(e.charAt(i)){case"d":case"m":case"y":case"@":t+="0123456789";break;case"D":case"M":return null;case"'":r("'")?t+="'":n=!0;break;default:t+=e.charAt(i)}return t},_get:function(e,t){return e.settings[t]!==undefined?e.settings[t]:this._defaults[t]},_setDateFromField:function(e,t){if(e.input.val()==e.lastVal)return;var n=this._get(e,"dateFormat"),r=e.lastVal=e.input?e.input.val():null,i,s;i=s=this._getDefaultDate(e);var o=this._getFormatConfig(e);try{i=this.parseDate(n,r,o)||s}catch(u){this.log(u),r=t?"":r}e.selectedDay=i.getDate(),e.drawMonth=e.selectedMonth=i.getMonth(),e.drawYear=e.selectedYear=i.getFullYear(),e.currentDay=r?i.getDate():0,e.currentMonth=r?i.getMonth():0,e.currentYear=r?i.getFullYear():0,this._adjustInstDate(e)},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,"defaultDate"),new Date))},_determineDate:function(e,t,n){var r=function(e){var t=new Date;return t.setDate(t.getDate()+e),t},i=function(t){try{return $.datepicker.parseDate($.datepicker._get(e,"dateFormat"),t,$.datepicker._getFormatConfig(e))}catch(n){}var r=(t.toLowerCase().match(/^c/)?$.datepicker._getDate(e):null)||new Date,i=r.getFullYear(),s=r.getMonth(),o=r.getDate(),u=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,a=u.exec(t);while(a){switch(a[2]||"d"){case"d":case"D":o+=parseInt(a[1],10);break;case"w":case"W":o+=parseInt(a[1],10)*7;break;case"m":case"M":s+=parseInt(a[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(i,s));break;case"y":case"Y":i+=parseInt(a[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(i,s))}a=u.exec(t)}return new Date(i,s,o)},s=t==null||t===""?n:typeof t=="string"?i(t):typeof t=="number"?isNaN(t)?n:r(t):new Date(t.getTime());return s=s&&s.toString()=="Invalid Date"?n:s,s&&(s.setHours(0),s.setMinutes(0),s.setSeconds(0),s.setMilliseconds(0)),this._daylightSavingAdjust(s)},_daylightSavingAdjust:function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},_setDate:function(e,t,n){var r=!t,i=e.selectedMonth,s=e.selectedYear,o=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=o.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=o.getMonth(),e.drawYear=e.selectedYear=e.currentYear=o.getFullYear(),(i!=e.selectedMonth||s!=e.selectedYear)&&!n&&this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(r?"":this._formatDate(e))},_getDate:function(e){var t=!e.currentYear||e.input&&e.input.val()==""?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return t},_attachHandlers:function(e){var t=this._get(e,"stepMonths"),n="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(n,-t,"M")},next:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(n,+t,"M")},hide:function(){window["DP_jQuery_"+dpuuid].datepicker._hideDatepicker()},today:function(){window["DP_jQuery_"+dpuuid].datepicker._gotoToday(n)},selectDay:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectDay(n,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(n,this,"M"),!1},selectYear:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(n,this,"Y"),!1}};$(this).bind(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])})},_generateHTML:function(e){var t=new Date;t=this._daylightSavingAdjust(new Date(t.getFullYear(),t.getMonth(),t.getDate()));var n=this._get(e,"isRTL"),r=this._get(e,"showButtonPanel"),i=this._get(e,"hideIfNoPrevNext"),s=this._get(e,"navigationAsDateFormat"),o=this._getNumberOfMonths(e),u=this._get(e,"showCurrentAtPos"),a=this._get(e,"stepMonths"),f=o[0]!=1||o[1]!=1,l=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),c=this._getMinMaxDate(e,"min"),h=this._getMinMaxDate(e,"max"),p=e.drawMonth-u,d=e.drawYear;p<0&&(p+=12,d--);if(h){var v=this._daylightSavingAdjust(new Date(h.getFullYear(),h.getMonth()-o[0]*o[1]+1,h.getDate()));v=c&&v<c?c:v;while(this._daylightSavingAdjust(new Date(d,p,1))>v)p--,p<0&&(p=11,d--)}e.drawMonth=p,e.drawYear=d;var m=this._get(e,"prevText");m=s?this.formatDate(m,this._daylightSavingAdjust(new Date(d,p-a,1)),this._getFormatConfig(e)):m;var g=this._canAdjustMonth(e,-1,d,p)?'<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="'+m+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"e":"w")+'">'+m+"</span></a>":i?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+m+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"e":"w")+'">'+m+"</span></a>",y=this._get(e,"nextText");y=s?this.formatDate(y,this._daylightSavingAdjust(new Date(d,p+a,1)),this._getFormatConfig(e)):y;var b=this._canAdjustMonth(e,1,d,p)?'<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="'+y+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"w":"e")+'">'+y+"</span></a>":i?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+y+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"w":"e")+'">'+y+"</span></a>",w=this._get(e,"currentText"),E=this._get(e,"gotoCurrent")&&e.currentDay?l:t;w=s?this.formatDate(w,E,this._getFormatConfig(e)):w;var S=e.inline?"":'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">'+this._get(e,"closeText")+"</button>",x=r?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(n?S:"")+(this._isInRange(e,E)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">'+w+"</button>":"")+(n?"":S)+"</div>":"",T=parseInt(this._get(e,"firstDay"),10);T=isNaN(T)?0:T;var N=this._get(e,"showWeek"),C=this._get(e,"dayNames"),k=this._get(e,"dayNamesShort"),L=this._get(e,"dayNamesMin"),A=this._get(e,"monthNames"),O=this._get(e,"monthNamesShort"),M=this._get(e,"beforeShowDay"),_=this._get(e,"showOtherMonths"),D=this._get(e,"selectOtherMonths"),P=this._get(e,"calculateWeek")||this.iso8601Week,H=this._getDefaultDate(e),B="";for(var j=0;j<o[0];j++){var F="";this.maxRows=4;for(var I=0;I<o[1];I++){var q=this._daylightSavingAdjust(new Date(d,p,e.selectedDay)),R=" ui-corner-all",U="";if(f){U+='<div class="ui-datepicker-group';if(o[1]>1)switch(I){case 0:U+=" ui-datepicker-group-first",R=" ui-corner-"+(n?"right":"left");break;case o[1]-1:U+=" ui-datepicker-group-last",R=" ui-corner-"+(n?"left":"right");break;default:U+=" ui-datepicker-group-middle",R=""}U+='">'}U+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+R+'">'+(/all|left/.test(R)&&j==0?n?b:g:"")+(/all|right/.test(R)&&j==0?n?g:b:"")+this._generateMonthYearHeader(e,p,d,c,h,j>0||I>0,A,O)+'</div><table class="ui-datepicker-calendar"><thead>'+"<tr>";var z=N?'<th class="ui-datepicker-week-col">'+this._get(e,"weekHeader")+"</th>":"";for(var W=0;W<7;W++){var X=(W+T)%7;z+="<th"+((W+T+6)%7>=5?' class="ui-datepicker-week-end"':"")+">"+'<span title="'+C[X]+'">'+L[X]+"</span></th>"}U+=z+"</tr></thead><tbody>";var V=this._getDaysInMonth(d,p);d==e.selectedYear&&p==e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,V));var J=(this._getFirstDayOfMonth(d,p)-T+7)%7,K=Math.ceil((J+V)/7),Q=f?this.maxRows>K?this.maxRows:K:K;this.maxRows=Q;var G=this._daylightSavingAdjust(new Date(d,p,1-J));for(var Y=0;Y<Q;Y++){U+="<tr>";var Z=N?'<td class="ui-datepicker-week-col">'+this._get(e,"calculateWeek")(G)+"</td>":"";for(var W=0;W<7;W++){var et=M?M.apply(e.input?e.input[0]:null,[G]):[!0,""],tt=G.getMonth()!=p,nt=tt&&!D||!et[0]||c&&G<c||h&&G>h;Z+='<td class="'+((W+T+6)%7>=5?" ui-datepicker-week-end":"")+(tt?" ui-datepicker-other-month":"")+(G.getTime()==q.getTime()&&p==e.selectedMonth&&e._keyEvent||H.getTime()==G.getTime()&&H.getTime()==q.getTime()?" "+this._dayOverClass:"")+(nt?" "+this._unselectableClass+" ui-state-disabled":"")+(tt&&!_?"":" "+et[1]+(G.getTime()==l.getTime()?" "+this._currentClass:"")+(G.getTime()==t.getTime()?" ui-datepicker-today":""))+'"'+((!tt||_)&&et[2]?' title="'+et[2]+'"':"")+(nt?"":' data-handler="selectDay" data-event="click" data-month="'+G.getMonth()+'" data-year="'+G.getFullYear()+'"')+">"+(tt&&!_?"&#xa0;":nt?'<span class="ui-state-default">'+G.getDate()+"</span>":'<a class="ui-state-default'+(G.getTime()==t.getTime()?" ui-state-highlight":"")+(G.getTime()==l.getTime()?" ui-state-active":"")+(tt?" ui-priority-secondary":"")+'" href="#">'+G.getDate()+"</a>")+"</td>",G.setDate(G.getDate()+1),G=this._daylightSavingAdjust(G)}U+=Z+"</tr>"}p++,p>11&&(p=0,d++),U+="</tbody></table>"+(f?"</div>"+(o[0]>0&&I==o[1]-1?'<div class="ui-datepicker-row-break"></div>':""):""),F+=U}B+=F}return B+=x+($.ui.ie6&&!e.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':""),e._keyEvent=!1,B},_generateMonthYearHeader:function(e,t,n,r,i,s,o,u){var a=this._get(e,"changeMonth"),f=this._get(e,"changeYear"),l=this._get(e,"showMonthAfterYear"),c='<div class="ui-datepicker-title">',h="";if(s||!a)h+='<span class="ui-datepicker-month">'+o[t]+"</span>";else{var p=r&&r.getFullYear()==n,d=i&&i.getFullYear()==n;h+='<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';for(var v=0;v<12;v++)(!p||v>=r.getMonth())&&(!d||v<=i.getMonth())&&(h+='<option value="'+v+'"'+(v==t?' selected="selected"':"")+">"+u[v]+"</option>");h+="</select>"}l||(c+=h+(s||!a||!f?"&#xa0;":""));if(!e.yearshtml){e.yearshtml="";if(s||!f)c+='<span class="ui-datepicker-year">'+n+"</span>";else{var m=this._get(e,"yearRange").split(":"),g=(new Date).getFullYear(),y=function(e){var t=e.match(/c[+-].*/)?n+parseInt(e.substring(1),10):e.match(/[+-].*/)?g+parseInt(e,10):parseInt(e,10);return isNaN(t)?g:t},b=y(m[0]),w=Math.max(b,y(m[1]||""));b=r?Math.max(b,r.getFullYear()):b,w=i?Math.min(w,i.getFullYear()):w,e.yearshtml+='<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';for(;b<=w;b++)e.yearshtml+='<option value="'+b+'"'+(b==n?' selected="selected"':"")+">"+b+"</option>";e.yearshtml+="</select>",c+=e.yearshtml,e.yearshtml=null}}return c+=this._get(e,"yearSuffix"),l&&(c+=(s||!a||!f?"&#xa0;":"")+h),c+="</div>",c},_adjustInstDate:function(e,t,n){var r=e.drawYear+(n=="Y"?t:0),i=e.drawMonth+(n=="M"?t:0),s=Math.min(e.selectedDay,this._getDaysInMonth(r,i))+(n=="D"?t:0),o=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(r,i,s)));e.selectedDay=o.getDate(),e.drawMonth=e.selectedMonth=o.getMonth(),e.drawYear=e.selectedYear=o.getFullYear(),(n=="M"||n=="Y")&&this._notifyChange(e)},_restrictMinMax:function(e,t){var n=this._getMinMaxDate(e,"min"),r=this._getMinMaxDate(e,"max"),i=n&&t<n?n:t;return i=r&&i>r?r:i,i},_notifyChange:function(e){var t=this._get(e,"onChangeMonthYear");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,"numberOfMonths");return t==null?[1,1]:typeof t=="number"?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+"Date"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return(new Date(e,t,1)).getDay()},_canAdjustMonth:function(e,t,n,r){var i=this._getNumberOfMonths(e),s=this._daylightSavingAdjust(new Date(n,r+(t<0?t:i[0]*i[1]),1));return t<0&&s.setDate(this._getDaysInMonth(s.getFullYear(),s.getMonth())),this._isInRange(e,s)},_isInRange:function(e,t){var n=this._getMinMaxDate(e,"min"),r=this._getMinMaxDate(e,"max");return(!n||t.getTime()>=n.getTime())&&(!r||t.getTime()<=r.getTime())},_getFormatConfig:function(e){var t=this._get(e,"shortYearCutoff");return t=typeof t!="string"?t:(new Date).getFullYear()%100+parseInt(t,10),{shortYearCutoff:t,dayNamesShort:this._get(e,"dayNamesShort"),dayNames:this._get(e,"dayNames"),monthNamesShort:this._get(e,"monthNamesShort"),monthNames:this._get(e,"monthNames")}},_formatDate:function(e,t,n,r){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var i=t?typeof t=="object"?t:this._daylightSavingAdjust(new Date(r,n,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,"dateFormat"),i,this._getFormatConfig(e))}}),$.fn.datepicker=function(e){if(!this.length)return this;$.datepicker.initialized||($(document).mousedown($.datepicker._checkExternalClick).find(document.body).append($.datepicker.dpDiv),$.datepicker.initialized=!0);var t=Array.prototype.slice.call(arguments,1);return typeof e!="string"||e!="isDisabled"&&e!="getDate"&&e!="widget"?e=="option"&&arguments.length==2&&typeof arguments[1]=="string"?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t)):this.each(function(){typeof e=="string"?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this].concat(t)):$.datepicker._attachDatepicker(this,e)}):$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t))},$.datepicker=new Datepicker,$.datepicker.initialized=!1,$.datepicker.uuid=(new Date).getTime(),$.datepicker.version="1.9.2",window["DP_jQuery_"+dpuuid]=$}(jQuery),function(e,t){var n="ui-dialog ui-widget ui-widget-content ui-corner-all ",r={buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},i={maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0};e.widget("ui.dialog",{version:"1.9.2",options:{autoOpen:!0,buttons:{},closeOnEscape:!0,closeText:"close",dialogClass:"",draggable:!0,hide:null,height:"auto",maxHeight:!1,maxWidth:!1,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(t){var n=e(this).css(t).offset().top;n<0&&e(this).css("top",t.top-n)}},resizable:!0,show:null,stack:!0,title:"",width:300,zIndex:1e3},_create:function(){this.originalTitle=this.element.attr("title"),typeof this.originalTitle!="string"&&(this.originalTitle=""),this.oldPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.options.title=this.options.title||this.originalTitle;var t=this,r=this.options,i=r.title||"&#160;",s,o,u,a,f;s=(this.uiDialog=e("<div>")).addClass(n+r.dialogClass).css({display:"none",outline:0,zIndex:r.zIndex}).attr("tabIndex",-1).keydown(function(n){r.closeOnEscape&&!n.isDefaultPrevented()&&n.keyCode&&n.keyCode===e.ui.keyCode.ESCAPE&&(t.close(n),n.preventDefault())}).mousedown(function(e){t.moveToTop(!1,e)}).appendTo("body"),this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(s),o=(this.uiDialogTitlebar=e("<div>")).addClass("ui-dialog-titlebar  ui-widget-header  ui-corner-all  ui-helper-clearfix").bind("mousedown",function(){s.focus()}).prependTo(s),u=e("<a href='#'></a>").addClass("ui-dialog-titlebar-close  ui-corner-all").attr("role","button").click(function(e){e.preventDefault(),t.close(e)}).appendTo(o),(this.uiDialogTitlebarCloseText=e("<span>")).addClass("ui-icon ui-icon-closethick").text(r.closeText).appendTo(u),a=e("<span>").uniqueId().addClass("ui-dialog-title").html(i).prependTo(o),f=(this.uiDialogButtonPane=e("<div>")).addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),(this.uiButtonSet=e("<div>")).addClass("ui-dialog-buttonset").appendTo(f),s.attr({role:"dialog","aria-labelledby":a.attr("id")}),o.find("*").add(o).disableSelection(),this._hoverable(u),this._focusable(u),r.draggable&&e.fn.draggable&&this._makeDraggable(),r.resizable&&e.fn.resizable&&this._makeResizable(),this._createButtons(r.buttons),this._isOpen=!1,e.fn.bgiframe&&s.bgiframe(),this._on(s,{keydown:function(t){if(!r.modal||t.keyCode!==e.ui.keyCode.TAB)return;var n=e(":tabbable",s),i=n.filter(":first"),o=n.filter(":last");if(t.target===o[0]&&!t.shiftKey)return i.focus(1),!1;if(t.target===i[0]&&t.shiftKey)return o.focus(1),!1}})},_init:function(){this.options.autoOpen&&this.open()},_destroy:function(){var e,t=this.oldPosition;this.overlay&&this.overlay.destroy(),this.uiDialog.hide(),this.element.removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body"),this.uiDialog.remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),e=t.parent.children().eq(t.index),e.length&&e[0]!==this.element[0]?e.before(this.element):t.parent.append(this.element)},widget:function(){return this.uiDialog},close:function(t){var n=this,r,i;if(!this._isOpen)return;if(!1===this._trigger("beforeClose",t))return;return this._isOpen=!1,this.overlay&&this.overlay.destroy(),this.options.hide?this._hide(this.uiDialog,this.options.hide,function(){n._trigger("close",t)}):(this.uiDialog.hide(),this._trigger("close",t)),e.ui.dialog.overlay.resize(),this.options.modal&&(r=0,e(".ui-dialog").each(function(){this!==n.uiDialog[0]&&(i=e(this).css("z-index"),isNaN(i)||(r=Math.max(r,i)))}),e.ui.dialog.maxZ=r),this},isOpen:function(){return this._isOpen},moveToTop:function(t,n){var r=this.options,i;return r.modal&&!t||!r.stack&&!r.modal?this._trigger("focus",n):(r.zIndex>e.ui.dialog.maxZ&&(e.ui.dialog.maxZ=r.zIndex),this.overlay&&(e.ui.dialog.maxZ+=1,e.ui.dialog.overlay.maxZ=e.ui.dialog.maxZ,this.overlay.$el.css("z-index",e.ui.dialog.overlay.maxZ)),i={scrollTop:this.element.scrollTop(),scrollLeft:this.element.scrollLeft()},e.ui.dialog.maxZ+=1,this.uiDialog.css("z-index",e.ui.dialog.maxZ),this.element.attr(i),this._trigger("focus",n),this)},open:function(){if(this._isOpen)return;var t,n=this.options,r=this.uiDialog;return this._size(),this._position(n.position),r.show(n.show),this.overlay=n.modal?new e.ui.dialog.overlay(this):null,this.moveToTop(!0),t=this.element.find(":tabbable"),t.length||(t=this.uiDialogButtonPane.find(":tabbable"),t.length||(t=r)),t.eq(0).focus(),this._isOpen=!0,this._trigger("open"),this},_createButtons:function(t){var n=this,r=!1;this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),typeof t=="object"&&t!==null&&e.each(t,function(){return!(r=!0)}),r?(e.each(t,function(t,r){var i,s;r=e.isFunction(r)?{click:r,text:t}:r,r=e.extend({type:"button"},r),s=r.click,r.click=function(){s.apply(n.element[0],arguments)},i=e("<button></button>",r).appendTo(n.uiButtonSet),e.fn.button&&i.button()}),this.uiDialog.addClass("ui-dialog-buttons"),this.uiDialogButtonPane.appendTo(this.uiDialog)):this.uiDialog.removeClass("ui-dialog-buttons")},_makeDraggable:function(){function r(e){return{position:e.position,offset:e.offset}}var t=this,n=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(n,i){e(this).addClass("ui-dialog-dragging"),t._trigger("dragStart",n,r(i))},drag:function(e,n){t._trigger("drag",e,r(n))},stop:function(i,s){n.position=[s.position.left-t.document.scrollLeft(),s.position.top-t.document.scrollTop()],e(this).removeClass("ui-dialog-dragging"),t._trigger("dragStop",i,r(s)),e.ui.dialog.overlay.resize()}})},_makeResizable:function(n){function u(e){return{originalPosition:e.originalPosition,originalSize:e.originalSize,position:e.position,size:e.size}}n=n===t?this.options.resizable:n;var r=this,i=this.options,s=this.uiDialog.css("position"),o=typeof n=="string"?n:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:i.maxWidth,maxHeight:i.maxHeight,minWidth:i.minWidth,minHeight:this._minHeight(),handles:o,start:function(t,n){e(this).addClass("ui-dialog-resizing"),r._trigger("resizeStart",t,u(n))},resize:function(e,t){r._trigger("resize",e,u(t))},stop:function(t,n){e(this).removeClass("ui-dialog-resizing"),i.height=e(this).height(),i.width=e(this).width(),r._trigger("resizeStop",t,u(n)),e.ui.dialog.overlay.resize()}}).css("position",s).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")},_minHeight:function(){var e=this.options;return e.height==="auto"?e.minHeight:Math.min(e.minHeight,e.height)},_position:function(t){var n=[],r=[0,0],i;if(t){if(typeof t=="string"||typeof t=="object"&&"0"in t)n=t.split?t.split(" "):[t[0],t[1]],n.length===1&&(n[1]=n[0]),e.each(["left","top"],function(e,t){+n[e]===n[e]&&(r[e]=n[e],n[e]=t)}),t={my:n[0]+(r[0]<0?r[0]:"+"+r[0])+" "+n[1]+(r[1]<0?r[1]:"+"+r[1]),at:n.join(" ")};t=e.extend({},e.ui.dialog.prototype.options.position,t)}else t=e.ui.dialog.prototype.options.position;i=this.uiDialog.is(":visible"),i||this.uiDialog.show(),this.uiDialog.position(t),i||this.uiDialog.hide()},_setOptions:function(t){var n=this,s={},o=!1;e.each(t,function(e,t){n._setOption(e,t),e in r&&(o=!0),e in i&&(s[e]=t)}),o&&this._size(),this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option",s)},_setOption:function(t,r){var i,s,o=this.uiDialog;switch(t){case"buttons":this._createButtons(r);break;case"closeText":this.uiDialogTitlebarCloseText.text(""+r);break;case"dialogClass":o.removeClass(this.options.dialogClass).addClass(n+r);break;case"disabled":r?o.addClass("ui-dialog-disabled"):o.removeClass("ui-dialog-disabled");break;case"draggable":i=o.is(":data(draggable)"),i&&!r&&o.draggable("destroy"),!i&&r&&this._makeDraggable();break;case"position":this._position(r);break;case"resizable":s=o.is(":data(resizable)"),s&&!r&&o.resizable("destroy"),s&&typeof r=="string"&&o.resizable("option","handles",r),!s&&r!==!1&&this._makeResizable(r);break;case"title":e(".ui-dialog-title",this.uiDialogTitlebar).html(""+(r||"&#160;"))}this._super(t,r)},_size:function(){var t,n,r,i=this.options,s=this.uiDialog.is(":visible");this.element.show().css({width:"auto",minHeight:0,height:0}),i.minWidth>i.width&&(i.width=i.minWidth),t=this.uiDialog.css({height:"auto",width:i.width}).outerHeight(),n=Math.max(0,i.minHeight-t),i.height==="auto"?e.support.minHeight?this.element.css({minHeight:n,height:"auto"}):(this.uiDialog.show(),r=this.element.css("height","auto").height(),s||this.uiDialog.hide(),this.element.height(Math.max(r,n))):this.element.height(Math.max(i.height-t,0)),this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())}}),e.extend(e.ui.dialog,{uuid:0,maxZ:0,getTitleId:function(e){var t=e.attr("id");return t||(this.uuid+=1,t=this.uuid),"ui-dialog-title-"+t},overlay:function(t){this.$el=e.ui.dialog.overlay.create(t)}}),e.extend(e.ui.dialog.overlay,{instances:[],oldInstances:[],maxZ:0,events:e.map("focus,mousedown,mouseup,keydown,keypress,click".split(","),function(e){return e+".dialog-overlay"}).join(" "),create:function(t){this.instances.length===0&&(setTimeout(function(){e.ui.dialog.overlay.instances.length&&e(document).bind(e.ui.dialog.overlay.events,function(t){if(e(t.target).zIndex()<e.ui.dialog.overlay.maxZ)return!1})},1),e(window).bind("resize.dialog-overlay",e.ui.dialog.overlay.resize));var n=this.oldInstances.pop()||e("<div>").addClass("ui-widget-overlay");return e(document).bind("keydown.dialog-overlay",function(r){var i=e.ui.dialog.overlay.instances;i.length!==0&&i[i.length-1]===n&&t.options.closeOnEscape&&!r.isDefaultPrevented()&&r.keyCode&&r.keyCode===e.ui.keyCode.ESCAPE&&(t.close(r),r.preventDefault())}),n.appendTo(document.body).css({width:this.width(),height:this.height()}),e.fn.bgiframe&&n.bgiframe(),this.instances.push(n),n},destroy:function(t){var n=e.inArray(t,this.instances),r=0;n!==-1&&this.oldInstances.push(this.instances.splice(n,1)[0]),this.instances.length===0&&e([document,window]).unbind(".dialog-overlay"),t.height(0).width(0).remove(),e.each(this.instances,function(){r=Math.max(r,this.css("z-index"))}),this.maxZ=r},height:function(){var t,n;return e.ui.ie?(t=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),n=Math.max(document.documentElement.offsetHeight,document.body.offsetHeight),t<n?e(window).height()+"px":t+"px"):e(document).height()+"px"},width:function(){var t,n;return e.ui.ie?(t=Math.max(document.documentElement.scrollWidth,document.body.scrollWidth),n=Math.max(document.documentElement.offsetWidth,document.body.offsetWidth),t<n?e(window).width()+"px":t+"px"):e(document).width()+"px"},resize:function(){var t=e([]);e.each(e.ui.dialog.overlay.instances,function(){t=t.add(this)}),t.css({width:0,height:0}).css({width:e.ui.dialog.overlay.width(),height:e.ui.dialog.overlay.height()})}}),e.extend(e.ui.dialog.overlay.prototype,{destroy:function(){e.ui.dialog.overlay.destroy(this.$el)}})}(jQuery),function(e,t){var n=/up|down|vertical/,r=/up|left|vertical|horizontal/;e.effects.effect.blind=function(t,i){var s=e(this),o=["position","top","bottom","left","right","height","width"],u=e.effects.setMode(s,t.mode||"hide"),a=t.direction||"up",f=n.test(a),l=f?"height":"width",c=f?"top":"left",h=r.test(a),p={},d=u==="show",v,m,g;s.parent().is(".ui-effects-wrapper")?e.effects.save(s.parent(),o):e.effects.save(s,o),s.show(),v=e.effects.createWrapper(s).css({overflow:"hidden"}),m=v[l](),g=parseFloat(v.css(c))||0,p[l]=d?m:0,h||(s.css(f?"bottom":"right",0).css(f?"top":"left","auto").css({position:"absolute"}),p[c]=d?g:m+g),d&&(v.css(l,0),h||v.css(c,g+m)),v.animate(p,{duration:t.duration,easing:t.easing,queue:!1,complete:function(){u==="hide"&&s.hide(),e.effects.restore(s,o),e.effects.removeWrapper(s),i()}})}}(jQuery),function(e,t){e.effects.effect.bounce=function(t,n){var r=e(this),i=["position","top","bottom","left","right","height","width"],s=e.effects.setMode(r,t.mode||"effect"),o=s==="hide",u=s==="show",a=t.direction||"up",f=t.distance,l=t.times||5,c=l*2+(u||o?1:0),h=t.duration/c,p=t.easing,d=a==="up"||a==="down"?"top":"left",v=a==="up"||a==="left",m,g,y,b=r.queue(),w=b.length;(u||o)&&i.push("opacity"),e.effects.save(r,i),r.show(),e.effects.createWrapper(r),f||(f=r[d==="top"?"outerHeight":"outerWidth"]()/3),u&&(y={opacity:1},y[d]=0,r.css("opacity",0).css(d,v?-f*2:f*2).animate(y,h,p)),o&&(f/=Math.pow(2,l-1)),y={},y[d]=0;for(m=0;m<l;m++)g={},g[d]=(v?"-=":"+=")+f,r.animate(g,h,p).animate(y,h,p),f=o?f*2:f/2;o&&(g={opacity:0},g[d]=(v?"-=":"+=")+f,r.animate(g,h,p)),r.queue(function(){o&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}),w>1&&b.splice.apply(b,[1,0].concat(b.splice(w,c+1))),r.dequeue()}}(jQuery),function(e,t){e.effects.effect.clip=function(t,n){var r=e(this),i=["position","top","bottom","left","right","height","width"],s=e.effects.setMode(r,t.mode||"hide"),o=s==="show",u=t.direction||"vertical",a=u==="vertical",f=a?"height":"width",l=a?"top":"left",c={},h,p,d;e.effects.save(r,i),r.show(),h=e.effects.createWrapper(r).css({overflow:"hidden"}),p=r[0].tagName==="IMG"?h:r,d=p[f](),o&&(p.css(f,0),p.css(l,d/2)),c[f]=o?d:0,c[l]=o?0:d/2,p.animate(c,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){o||r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}})}}(jQuery),function(e,t){e.effects.effect.drop=function(t,n){var r=e(this),i=["position","top","bottom","left","right","opacity","height","width"],s=e.effects.setMode(r,t.mode||"hide"),o=s==="show",u=t.direction||"left",a=u==="up"||u==="down"?"top":"left",f=u==="up"||u==="left"?"pos":"neg",l={opacity:o?1:0},c;e.effects.save(r,i),r.show(),e.effects.createWrapper(r),c=t.distance||r[a==="top"?"outerHeight":"outerWidth"](!0)/2,o&&r.css("opacity",0).css(a,f==="pos"?-c:c),l[a]=(o?f==="pos"?"+=":"-=":f==="pos"?"-=":"+=")+c,r.animate(l,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){s==="hide"&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}})}}(jQuery),function(e,t){e.effects.effect.explode=function(t,n){function y(){c.push(this),c.length===r*i&&b()}function b(){s.css({visibility:"visible"}),e(c).remove(),u||s.hide(),n()}var r=t.pieces?Math.round(Math.sqrt(t.pieces)):3,i=r,s=e(this),o=e.effects.setMode(s,t.mode||"hide"),u=o==="show",a=s.show().css("visibility","hidden").offset(),f=Math.ceil(s.outerWidth()/i),l=Math.ceil(s.outerHeight()/r),c=[],h,p,d,v,m,g;for(h=0;h<r;h++){v=a.top+h*l,g=h-(r-1)/2;for(p=0;p<i;p++)d=a.left+p*f,m=p-(i-1)/2,s.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-p*f,top:-h*l}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:f,height:l,left:d+(u?m*f:0),top:v+(u?g*l:0),opacity:u?0:1}).animate({left:d+(u?0:m*f),top:v+(u?0:g*l),opacity:u?1:0},t.duration||500,t.easing,y)}}}(jQuery),function(e,t){e.effects.effect.fade=function(t,n){var r=e(this),i=e.effects.setMode(r,t.mode||"toggle");r.animate({opacity:i},{queue:!1,duration:t.duration,easing:t.easing,complete:n})}}(jQuery),function(e,t){e.effects.effect.fold=function(t,n){var r=e(this),i=["position","top","bottom","left","right","height","width"],s=e.effects.setMode(r,t.mode||"hide"),o=s==="show",u=s==="hide",a=t.size||15,f=/([0-9]+)%/.exec(a),l=!!t.horizFirst,c=o!==l,h=c?["width","height"]:["height","width"],p=t.duration/2,d,v,m={},g={};e.effects.save(r,i),r.show(),d=e.effects.createWrapper(r).css({overflow:"hidden"}),v=c?[d.width(),d.height()]:[d.height(),d.width()],f&&(a=parseInt(f[1],10)/100*v[u?0:1]),o&&d.css(l?{height:0,width:a}:{height:a,width:0}),m[h[0]]=o?v[0]:a,g[h[1]]=o?v[1]:0,d.animate(m,p,t.easing).animate(g,p,t.easing,function(){u&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()})}}(jQuery),function(e,t){e.effects.effect.highlight=function(t,n){var r=e(this),i=["backgroundImage","backgroundColor","opacity"],s=e.effects.setMode(r,t.mode||"show"),o={backgroundColor:r.css("backgroundColor")};s==="hide"&&(o.opacity=0),e.effects.save(r,i),r.show().css({backgroundImage:"none",backgroundColor:t.color||"#ffff99"}).animate(o,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){s==="hide"&&r.hide(),e.effects.restore(r,i),n()}})}}(jQuery),function(e,t){e.effects.effect.pulsate=function(t,n){var r=e(this),i=e.effects.setMode(r,t.mode||"show"),s=i==="show",o=i==="hide",u=s||i==="hide",a=(t.times||5)*2+(u?1:0),f=t.duration/a,l=0,c=r.queue(),h=c.length,p;if(s||!r.is(":visible"))r.css("opacity",0).show(),l=1;for(p=1;p<a;p++)r.animate({opacity:l},f,t.easing),l=1-l;r.animate({opacity:l},f,t.easing),r.queue(function(){o&&r.hide(),n()}),h>1&&c.splice.apply(c,[1,0].concat(c.splice(h,a+1))),r.dequeue()}}(jQuery),function(e,t){e.effects.effect.puff=function(t,n){var r=e(this),i=e.effects.setMode(r,t.mode||"hide"),s=i==="hide",o=parseInt(t.percent,10)||150,u=o/100,a={height:r.height(),width:r.width(),outerHeight:r.outerHeight(),outerWidth:r.outerWidth()};e.extend(t,{effect:"scale",queue:!1,fade:!0,mode:i,complete:n,percent:s?o:100,from:s?a:{height:a.height*u,width:a.width*u,outerHeight:a.outerHeight*u,outerWidth:a.outerWidth*u}}),r.effect(t)},e.effects.effect.scale=function(t,n){var r=e(this),i=e.extend(!0,{},t),s=e.effects.setMode(r,t.mode||"effect"),o=parseInt(t.percent,10)||(parseInt(t.percent,10)===0?0:s==="hide"?0:100),u=t.direction||"both",a=t.origin,f={height:r.height(),width:r.width(),outerHeight:r.outerHeight(),outerWidth:r.outerWidth()},l={y:u!=="horizontal"?o/100:1,x:u!=="vertical"?o/100:1};i.effect="size",i.queue=!1,i.complete=n,s!=="effect"&&(i.origin=a||["middle","center"],i.restore=!0),i.from=t.from||(s==="show"?{height:0,width:0,outerHeight:0,outerWidth:0}:f),i.to={height:f.height*l.y,width:f.width*l.x,outerHeight:f.outerHeight*l.y,outerWidth:f.outerWidth*l.x},i.fade&&(s==="show"&&(i.from.opacity=0,i.to.opacity=1),s==="hide"&&(i.from.opacity=1,i.to.opacity=0)),r.effect(i)},e.effects.effect.size=function(t,n){var r,i,s,o=e(this),u=["position","top","bottom","left","right","width","height","overflow","opacity"],a=["position","top","bottom","left","right","overflow","opacity"],f=["width","height","overflow"],l=["fontSize"],c=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],h=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],p=e.effects.setMode(o,t.mode||"effect"),d=t.restore||p!=="effect",v=t.scale||"both",m=t.origin||["middle","center"],g=o.css("position"),y=d?u:a,b={height:0,width:0,outerHeight:0,outerWidth:0};p==="show"&&o.show(),r={height:o.height(),width:o.width(),outerHeight:o.outerHeight(),outerWidth:o.outerWidth()},t.mode==="toggle"&&p==="show"?(o.from=t.to||b,o.to=t.from||r):(o.from=t.from||(p==="show"?b:r),o.to=t.to||(p==="hide"?b:r)),s={from:{y:o.from.height/r.height,x:o.from.width/r.width},to:{y:o.to.height/r.height,x:o.to.width/r.width}};if(v==="box"||v==="both")s.from.y!==s.to.y&&(y=y.concat(c),o.from=e.effects.setTransition(o,c,s.from.y,o.from),o.to=e.effects.setTransition(o,c,s.to.y,o.to)),s.from.x!==s.to.x&&(y=y.concat(h),o.from=e.effects.setTransition(o,h,s.from.x,o.from),o.to=e.effects.setTransition(o,h,s.to.x,o.to));(v==="content"||v==="both")&&s.from.y!==s.to.y&&(y=y.concat(l).concat(f),o.from=e.effects.setTransition(o,l,s.from.y,o.from),o.to=e.effects.setTransition(o,l,s.to.y,o.to)),e.effects.save(o,y),o.show(),e.effects.createWrapper(o),o.css("overflow","hidden").css(o.from),m&&(i=e.effects.getBaseline(m,r),o.from.top=(r.outerHeight-o.outerHeight())*i.y,o.from.left=(r.outerWidth-o.outerWidth())*i.x,o.to.top=(r.outerHeight-o.to.outerHeight)*i.y,o.to.left=(r.outerWidth-o.to.outerWidth)*i.x),o.css(o.from);if(v==="content"||v==="both")c=c.concat(["marginTop","marginBottom"]).concat(l),h=h.concat(["marginLeft","marginRight"]),f=u.concat(c).concat(h),o.find("*[width]").each(function(){var n=e(this),r={height:n.height(),width:n.width(),outerHeight:n.outerHeight(),outerWidth:n.outerWidth()};d&&e.effects.save(n,f),n.from={height:r.height*s.from.y,width:r.width*s.from.x,outerHeight:r.outerHeight*s.from.y,outerWidth:r.outerWidth*s.from.x},n.to={height:r.height*s.to.y,width:r.width*s.to.x,outerHeight:r.height*s.to.y,outerWidth:r.width*s.to.x},s.from.y!==s.to.y&&(n.from=e.effects.setTransition(n,c,s.from.y,n.from),n.to=e.effects.setTransition(n,c,s.to.y,n.to)),s.from.x!==s.to.x&&(n.from=e.effects.setTransition(n,h,s.from.x,n.from),n.to=e.effects.setTransition(n,h,s.to.x,n.to)),n.css(n.from),n.animate(n.to,t.duration,t.easing,function(){d&&e.effects.restore(n,f)})});o.animate(o.to,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){o.to.opacity===0&&o.css("opacity",o.from.opacity),p==="hide"&&o.hide(),e.effects.restore(o,y),d||(g==="static"?o.css({position:"relative",top:o.to.top,left:o.to.left}):e.each(["top","left"],function(e,t){o.css(t,function(t,n){var r=parseInt(n,10),i=e?o.to.left:o.to.top;return n==="auto"?i+"px":r+i+"px"})})),e.effects.removeWrapper(o),n()}})}}(jQuery),function(e,t){e.effects.effect.shake=function(t,n){var r=e(this),i=["position","top","bottom","left","right","height","width"],s=e.effects.setMode(r,t.mode||"effect"),o=t.direction||"left",u=t.distance||20,a=t.times||3,f=a*2+1,l=Math.round(t.duration/f),c=o==="up"||o==="down"?"top":"left",h=o==="up"||o==="left",p={},d={},v={},m,g=r.queue(),y=g.length;e.effects.save(r,i),r.show(),e.effects.createWrapper(r),p[c]=(h?"-=":"+=")+u,d[c]=(h?"+=":"-=")+u*2,v[c]=(h?"-=":"+=")+u*2,r.animate(p,l,t.easing);for(m=1;m<a;m++)r.animate(d,l,t.easing).animate(v,l,t.easing);r.animate(d,l,t.easing).animate(p,l/2,t.easing).queue(function(){s==="hide"&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}),y>1&&g.splice.apply(g,[1,0].concat(g.splice(y,f+1))),r.dequeue()}}(jQuery),function(e,t){e.effects.effect.slide=function(t,n){var r=e(this),i=["position","top","bottom","left","right","width","height"],s=e.effects.setMode(r,t.mode||"show"),o=s==="show",u=t.direction||"left",a=u==="up"||u==="down"?"top":"left",f=u==="up"||u==="left",l,c={};e.effects.save(r,i),r.show(),l=t.distance||r[a==="top"?"outerHeight":"outerWidth"](!0),e.effects.createWrapper(r).css({overflow:"hidden"}),o&&r.css(a,f?isNaN(l)?"-"+l:-l:l),c[a]=(o?f?"+=":"-=":f?"-=":"+=")+l,r.animate(c,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){s==="hide"&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}})}}(jQuery),function(e,t){e.effects.effect.transfer=function(t,n){var r=e(this),i=e(t.to),s=i.css("position")==="fixed",o=e("body"),u=s?o.scrollTop():0,a=s?o.scrollLeft():0,f=i.offset(),l={top:f.top-u,left:f.left-a,height:i.innerHeight(),width:i.innerWidth()},c=r.offset(),h=e('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(t.className).css({top:c.top-u,left:c.left-a,height:r.innerHeight(),width:r.innerWidth(),position:s?"fixed":"absolute"}).animate(l,t.duration,t.easing,function(){h.remove(),n()})}}(jQuery),function(e,t){var n=!1;e.widget("ui.menu",{version:"1.9.2",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-carat-1-e"},menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length).attr({role:this.options.role,tabIndex:0}).bind("click"+this.eventNamespace,e.proxy(function(e){this.options.disabled&&e.preventDefault()},this)),this.options.disabled&&this.element.addClass("ui-state-disabled").attr("aria-disabled","true"),this._on({"mousedown .ui-menu-item > a":function(e){e.preventDefault()},"click .ui-state-disabled > a":function(e){e.preventDefault()},"click .ui-menu-item:has(a)":function(t){var r=e(t.target).closest(".ui-menu-item");!n&&r.not(".ui-state-disabled").length&&(n=!0,this.select(t),r.has(".ui-menu").length?this.expand(t):this.element.is(":focus")||(this.element.trigger("focus",[!0]),this.active&&this.active.parents(".ui-menu").length===1&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(t){var n=e(t.currentTarget);n.siblings().children(".ui-state-active").removeClass("ui-state-active"),this.focus(t,n)},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(e,t){var n=this.active||this.element.children(".ui-menu-item").eq(0);t||this.focus(e,n)},blur:function(t){this._delay(function(){e.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(t)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(t){e(t.target).closest(".ui-menu").length||this.collapseAll(t),n=!1}})},_destroy:function(){this.element.removeAttr("aria-activedescendant").find(".ui-menu").andSelf().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(),this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function(){var t=e(this);t.data("ui-menu-submenu-carat")&&t.remove()}),this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")},_keydown:function(t){function a(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}var n,r,i,s,o,u=!0;switch(t.keyCode){case e.ui.keyCode.PAGE_UP:this.previousPage(t);break;case e.ui.keyCode.PAGE_DOWN:this.nextPage(t);break;case e.ui.keyCode.HOME:this._move("first","first",t);break;case e.ui.keyCode.END:this._move("last","last",t);break;case e.ui.keyCode.UP:this.previous(t);break;case e.ui.keyCode.DOWN:this.next(t);break;case e.ui.keyCode.LEFT:this.collapse(t);break;case e.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(t);break;case e.ui.keyCode.ENTER:case e.ui.keyCode.SPACE:this._activate(t);break;case e.ui.keyCode.ESCAPE:this.collapse(t);break;default:u=!1,r=this.previousFilter||"",i=String.fromCharCode(t.keyCode),s=!1,clearTimeout(this.filterTimer),i===r?s=!0:i=r+i,o=new RegExp("^"+a(i),"i"),n=this.activeMenu.children(".ui-menu-item").filter(function(){return o.test(e(this).children("a").text())}),n=s&&n.index(this.active.next())!==-1?this.active.nextAll(".ui-menu-item"):n,n.length||(i=String.fromCharCode(t.keyCode),o=new RegExp("^"+a(i),"i"),n=this.activeMenu.children(".ui-menu-item").filter(function(){return o.test(e(this).children("a").text())})),n.length?(this.focus(t,n),n.length>1?(this.previousFilter=i,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter):delete this.previousFilter}u&&t.preventDefault()},_activate:function(e){this.active.is(".ui-state-disabled")||(this.active.children("a[aria-haspopup='true']").length?this.expand(e):this.select(e))},refresh:function(){var t,n=this.options.icons.submenu,r=this.element.find(this.options.menus);r.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var t=e(this),r=t.prev("a"),i=e("<span>").addClass("ui-menu-icon ui-icon "+n).data("ui-menu-submenu-carat",!0);r.attr("aria-haspopup","true").prepend(i),t.attr("aria-labelledby",r.attr("id"))}),t=r.add(this.element),t.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","presentation").children("a").uniqueId().addClass("ui-corner-all").attr({tabIndex:-1,role:this._itemRole()}),t.children(":not(.ui-menu-item)").each(function(){var t=e(this);/[^\-—–\s]/.test(t.text())||t.addClass("ui-widget-content ui-menu-divider")}),t.children(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!e.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},focus:function(e,t){var n,r;this.blur(e,e&&e.type==="focus"),this._scrollIntoView(t),this.active=t.first(),r=this.active.children("a").addClass("ui-state-focus"),this.options.role&&this.element.attr("aria-activedescendant",r.attr("id")),this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active"),e&&e.type==="keydown"?this._close():this.timer=this._delay(function(){this._close()},this.delay),n=t.children(".ui-menu"),n.length&&/^mouse/.test(e.type)&&this._startOpening(n),this.activeMenu=t.parent(),this._trigger("focus",e,{item:t})},_scrollIntoView:function(t){var n,r,i,s,o,u;this._hasScroll()&&(n=parseFloat(e.css(this.activeMenu[0],"borderTopWidth"))||0,r=parseFloat(e.css(this.activeMenu[0],"paddingTop"))||0,i=t.offset().top-this.activeMenu.offset().top-n-r,s=this.activeMenu.scrollTop(),o=this.activeMenu.height(),u=t.height(),i<0?this.activeMenu.scrollTop(s+i):i+u>o&&this.activeMenu.scrollTop(s+i-o+u))},blur:function(e,t){t||clearTimeout(this.timer);if(!this.active)return;this.active.children("a").removeClass("ui-state-focus"),this.active=null,this._trigger("blur",e,{item:this.active})},_startOpening:function(e){clearTimeout(this.timer);if(e.attr("aria-hidden")!=="true")return;this.timer=this._delay(function(){this._close(),this._open(e)},this.delay)},_open:function(t){var n=e.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(t.parents(".ui-menu")).hide().attr("aria-hidden","true"),t.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(n)},collapseAll:function(t,n){clearTimeout(this.timer),this.timer=this._delay(function(){var r=n?this.element:e(t&&t.target).closest(this.element.find(".ui-menu"));r.length||(r=this.element),this._close(r),this.blur(t),this.activeMenu=r},this.delay)},_close:function(e){e||(e=this.active?this.active.parent():this.element),e.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false").end().find("a.ui-state-active").removeClass("ui-state-active")},collapse:function(e){var t=this.active&&this.active.parent().closest(".ui-menu-item",this.element);t&&t.length&&(this._close(),this.focus(e,t))},expand:function(e){var t=this.active&&this.active.children(".ui-menu ").children(".ui-menu-item").first();t&&t.length&&(this._open(t.parent()),this._delay(function(){this.focus(e,t)}))},next:function(e){this._move("next","first",e)},previous:function(e){this._move("prev","last",e)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(e,t,n){var r;this.active&&(e==="first"||e==="last"?r=this.active[e==="first"?"prevAll":"nextAll"](".ui-menu-item").eq(-1):r=this.active[e+"All"](".ui-menu-item").eq(0));if(!r||!r.length||!this.active)r=this.activeMenu.children(".ui-menu-item")[t]();this.focus(n,r)},nextPage:function(t){var n,r,i;if(!this.active){this.next(t);return}if(this.isLastItem())return;this._hasScroll()?(r=this.active.offset().top,i=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return n=e(this),n.offset().top-r-i<0}),this.focus(t,n)):this.focus(t,this.activeMenu.children(".ui-menu-item")[this.active?"last":"first"]())},previousPage:function(t){var n,r,i;if(!this.active){this.next(t);return}if(this.isFirstItem())return;this._hasScroll()?(r=this.active.offset().top,i=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return n=e(this),n.offset().top-r+i>0}),this.focus(t,n)):this.focus(t,this.activeMenu.children(".ui-menu-item").first())},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(t){this.active=this.active||e(t.target).closest(".ui-menu-item");var n={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(t,!0),this._trigger("select",t,n)}})}(jQuery),function(e,t){function h(e,t,n){return[parseInt(e[0],10)*(l.test(e[0])?t/100:1),parseInt(e[1],10)*(l.test(e[1])?n/100:1)]}function p(t,n){return parseInt(e.css(t,n),10)||0}e.ui=e.ui||{};var n,r=Math.max,i=Math.abs,s=Math.round,o=/left|center|right/,u=/top|center|bottom/,a=/[\+\-]\d+%?/,f=/^\w+/,l=/%$/,c=e.fn.position;e.position={scrollbarWidth:function(){if(n!==t)return n;var r,i,s=e("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),o=s.children()[0];return e("body").append(s),r=o.offsetWidth,s.css("overflow","scroll"),i=o.offsetWidth,r===i&&(i=s[0].clientWidth),s.remove(),n=r-i},getScrollInfo:function(t){var n=t.isWindow?"":t.element.css("overflow-x"),r=t.isWindow?"":t.element.css("overflow-y"),i=n==="scroll"||n==="auto"&&t.width<t.element[0].scrollWidth,s=r==="scroll"||r==="auto"&&t.height<t.element[0].scrollHeight;return{width:i?e.position.scrollbarWidth():0,height:s?e.position.scrollbarWidth():0}},getWithinInfo:function(t){var n=e(t||window),r=e.isWindow(n[0]);return{element:n,isWindow:r,offset:n.offset()||{left:0,top:0},scrollLeft:n.scrollLeft(),scrollTop:n.scrollTop(),width:r?n.width():n.outerWidth(),height:r?n.height():n.outerHeight()}}},e.fn.position=function(t){if(!t||!t.of)return c.apply(this,arguments);t=e.extend({},t);var n,l,d,v,m,g=e(t.of),y=e.position.getWithinInfo(t.within),b=e.position.getScrollInfo(y),w=g[0],E=(t.collision||"flip").split(" "),S={};return w.nodeType===9?(l=g.width(),d=g.height(),v={top:0,left:0}):e.isWindow(w)?(l=g.width(),d=g.height(),v={top:g.scrollTop(),left:g.scrollLeft()}):w.preventDefault?(t.at="left top",l=d=0,v={top:w.pageY,left:w.pageX}):(l=g.outerWidth(),d=g.outerHeight(),v=g.offset()),m=e.extend({},v),e.each(["my","at"],function(){var e=(t[this]||"").split(" "),n,r;e.length===1&&(e=o.test(e[0])?e.concat(["center"]):u.test(e[0])?["center"].concat(e):["center","center"]),e[0]=o.test(e[0])?e[0]:"center",e[1]=u.test(e[1])?e[1]:"center",n=a.exec(e[0]),r=a.exec(e[1]),S[this]=[n?n[0]:0,r?r[0]:0],t[this]=[f.exec(e[0])[0],f.exec(e[1])[0]]}),E.length===1&&(E[1]=E[0]),t.at[0]==="right"?m.left+=l:t.at[0]==="center"&&(m.left+=l/2),t.at[1]==="bottom"?m.top+=d:t.at[1]==="center"&&(m.top+=d/2),n=h(S.at,l,d),m.left+=n[0],m.top+=n[1],this.each(function(){var o,u,a=e(this),f=a.outerWidth(),c=a.outerHeight(),w=p(this,"marginLeft"),x=p(this,"marginTop"),T=f+w+p(this,"marginRight")+b.width,N=c+x+p(this,"marginBottom")+b.height,C=e.extend({},m),k=h(S.my,a.outerWidth(),a.outerHeight());t.my[0]==="right"?C.left-=f:t.my[0]==="center"&&(C.left-=f/2),t.my[1]==="bottom"?C.top-=c:t.my[1]==="center"&&(C.top-=c/2),C.left+=k[0],C.top+=k[1],e.support.offsetFractions||(C.left=s(C.left),C.top=s(C.top)),o={marginLeft:w,marginTop:x},e.each(["left","top"],function(r,i){e.ui.position[E[r]]&&e.ui.position[E[r]][i](C,{targetWidth:l,targetHeight:d,elemWidth:f,elemHeight:c,collisionPosition:o,collisionWidth:T,collisionHeight:N,offset:[n[0]+k[0],n[1]+k[1]],my:t.my,at:t.at,within:y,elem:a})}),e.fn.bgiframe&&a.bgiframe(),t.using&&(u=function(e){var n=v.left-C.left,s=n+l-f,o=v.top-C.top,u=o+d-c,h={target:{element:g,left:v.left,top:v.top,width:l,height:d},element:{element:a,left:C.left,top:C.top,width:f,height:c},horizontal:s<0?"left":n>0?"right":"center",vertical:u<0?"top":o>0?"bottom":"middle"};l<f&&i(n+s)<l&&(h.horizontal="center"),d<c&&i(o+u)<d&&(h.vertical="middle"),r(i(n),i(s))>r(i(o),i(u))?h.important="horizontal":h.important="vertical",t.using.call(this,e,h)}),a.offset(e.extend(C,{using:u}))})},e.ui.position={fit:{left:function(e,t){var n=t.within,i=n.isWindow?n.scrollLeft:n.offset.left,s=n.width,o=e.left-t.collisionPosition.marginLeft,u=i-o,a=o+t.collisionWidth-s-i,f;t.collisionWidth>s?u>0&&a<=0?(f=e.left+u+t.collisionWidth-s-i,e.left+=u-f):a>0&&u<=0?e.left=i:u>a?e.left=i+s-t.collisionWidth:e.left=i:u>0?e.left+=u:a>0?e.left-=a:e.left=r(e.left-o,e.left)},top:function(e,t){var n=t.within,i=n.isWindow?n.scrollTop:n.offset.top,s=t.within.height,o=e.top-t.collisionPosition.marginTop,u=i-o,a=o+t.collisionHeight-s-i,f;t.collisionHeight>s?u>0&&a<=0?(f=e.top+u+t.collisionHeight-s-i,e.top+=u-f):a>0&&u<=0?e.top=i:u>a?e.top=i+s-t.collisionHeight:e.top=i:u>0?e.top+=u:a>0?e.top-=a:e.top=r(e.top-o,e.top)}},flip:{left:function(e,t){var n=t.within,r=n.offset.left+n.scrollLeft,s=n.width,o=n.isWindow?n.scrollLeft:n.offset.left,u=e.left-t.collisionPosition.marginLeft,a=u-o,f=u+t.collisionWidth-s-o,l=t.my[0]==="left"?-t.elemWidth:t.my[0]==="right"?t.elemWidth:0,c=t.at[0]==="left"?t.targetWidth:t.at[0]==="right"?-t.targetWidth:0,h=-2*t.offset[0],p,d;if(a<0){p=e.left+l+c+h+t.collisionWidth-s-r;if(p<0||p<i(a))e.left+=l+c+h}else if(f>0){d=e.left-t.collisionPosition.marginLeft+l+c+h-o;if(d>0||i(d)<f)e.left+=l+c+h}},top:function(e,t){var n=t.within,r=n.offset.top+n.scrollTop,s=n.height,o=n.isWindow?n.scrollTop:n.offset.top,u=e.top-t.collisionPosition.marginTop,a=u-o,f=u+t.collisionHeight-s-o,l=t.my[1]==="top",c=l?-t.elemHeight:t.my[1]==="bottom"?t.elemHeight:0,h=t.at[1]==="top"?t.targetHeight:t.at[1]==="bottom"?-t.targetHeight:0,p=-2*t.offset[1],d,v;a<0?(v=e.top+c+h+p+t.collisionHeight-s-r,e.top+c+h+p>a&&(v<0||v<i(a))&&(e.top+=c+h+p)):f>0&&(d=e.top-t.collisionPosition.marginTop+c+h+p-o,e.top+c+h+p>f&&(d>0||i(d)<f)&&(e.top+=c+h+p))}},flipfit:{left:function(){e.ui.position.flip.left.apply(this,arguments),e.ui.position.fit.left.apply(this,arguments)},top:function(){e.ui.position.flip.top.apply(this,arguments),e.ui.position.fit.top.apply(this,arguments)}}},function(){var t,n,r,i,s,o=document.getElementsByTagName("body")[0],u=document.createElement("div");t=document.createElement(o?"div":"body"),r={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},o&&e.extend(r,{position:"absolute",left:"-1000px",top:"-1000px"});for(s in r)t.style[s]=r[s];t.appendChild(u),n=o||document.documentElement,n.insertBefore(t,n.firstChild),u.style.cssText="position: absolute; left: 10.7432222px;",i=e(u).offset().left,e.support.offsetFractions=i>10&&i<11,t.innerHTML="",n.removeChild(t)}(),e.uiBackCompat!==!1&&function(e){var n=e.fn.position;e.fn.position=function(r){if(!r||!r.offset)return n.call(this,r);var i=r.offset.split(" "),s=r.at.split(" ");return i.length===1&&(i[1]=i[0]),/^\d/.test(i[0])&&(i[0]="+"+i[0]),/^\d/.test(i[1])&&(i[1]="+"+i[1]),s.length===1&&(/left|center|right/.test(s[0])?s[1]="center":(s[1]=s[0],s[0]="center")),n.call(this,e.extend(r,{at:s[0]+i[0]+" "+s[1]+i[1],offset:t}))}}(jQuery)}(jQuery),function(e,t){e.widget("ui.progressbar",{version:"1.9.2",options:{value:0,max:100},min:0,_create:function(){this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role:"progressbar","aria-valuemin":this.min,"aria-valuemax":this.options.max,"aria-valuenow":this._value()}),this.valueDiv=e("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element),this.oldValue=this._value(),this._refreshValue()},_destroy:function(){this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.valueDiv.remove()},value:function(e){return e===t?this._value():(this._setOption("value",e),this)},_setOption:function(e,t){e==="value"&&(this.options.value=t,this._refreshValue(),this._value()===this.options.max&&this._trigger("complete")),this._super(e,t)},_value:function(){var e=this.options.value;return typeof e!="number"&&(e=0),Math.min(this.options.max,Math.max(this.min,e))},_percentage:function(){return 100*this._value()/this.options.max},_refreshValue:function(){var e=this.value(),t=this._percentage();this.oldValue!==e&&(this.oldValue=e,this._trigger("change")),this.valueDiv.toggle(e>this.min).toggleClass("ui-corner-right",e===this.options.max).width(t.toFixed(0)+"%"),this.element.attr("aria-valuenow",e)}})}(jQuery),function(e,t){var n=5;e.widget("ui.slider",e.ui.mouse,{version:"1.9.2",widgetEventPrefix:"slide",options:{animate:!1,distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null},_create:function(){var t,r,i=this.options,s=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),o="<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",u=[];this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget"+" ui-widget-content"+" ui-corner-all"+(i.disabled?" ui-slider-disabled ui-disabled":"")),this.range=e([]),i.range&&(i.range===!0&&(i.values||(i.values=[this._valueMin(),this._valueMin()]),i.values.length&&i.values.length!==2&&(i.values=[i.values[0],i.values[0]])),this.range=e("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header"+(i.range==="min"||i.range==="max"?" ui-slider-range-"+i.range:""))),r=i.values&&i.values.length||1;for(t=s.length;t<r;t++)u.push(o);this.handles=s.add(e(u.join("")).appendTo(this.element)),this.handle=this.handles.eq(0),this.handles.add(this.range).filter("a").click(function(e){e.preventDefault()}).mouseenter(function(){i.disabled||e(this).addClass("ui-state-hover")}).mouseleave(function(){e(this).removeClass("ui-state-hover")}).focus(function(){i.disabled?e(this).blur():(e(".ui-slider .ui-state-focus").removeClass("ui-state-focus"),e(this).addClass("ui-state-focus"))}).blur(function(){e(this).removeClass("ui-state-focus")}),this.handles.each(function(t){e(this).data("ui-slider-handle-index",t)}),this._on(this.handles,{keydown:function(t){var r,i,s,o,u=e(t.target).data("ui-slider-handle-index");switch(t.keyCode){case e.ui.keyCode.HOME:case e.ui.keyCode.END:case e.ui.keyCode.PAGE_UP:case e.ui.keyCode.PAGE_DOWN:case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:t.preventDefault();if(!this._keySliding){this._keySliding=!0,e(t.target).addClass("ui-state-active"),r=this._start(t,u);if(r===!1)return}}o=this.options.step,this.options.values&&this.options.values.length?i=s=this.values(u):i=s=this.value();switch(t.keyCode){case e.ui.keyCode.HOME:s=this._valueMin();break;case e.ui.keyCode.END:s=this._valueMax();break;case e.ui.keyCode.PAGE_UP:s=this._trimAlignValue(i+(this._valueMax()-this._valueMin())/n);break;case e.ui.keyCode.PAGE_DOWN:s=this._trimAlignValue(i-(this._valueMax()-this._valueMin())/n);break;case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:if(i===this._valueMax())return;s=this._trimAlignValue(i+o);break;case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(i===this._valueMin())return;s=this._trimAlignValue(i-o)}this._slide(t,u,s)},keyup:function(t){var n=e(t.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(t,n),this._change(t,n),e(t.target).removeClass("ui-state-active"))}}),this._refreshValue(),this._animateOff=!1},_destroy:function(){this.handles.remove(),this.range.remove(),this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all"),this._mouseDestroy()},_mouseCapture:function(t){var n,r,i,s,o,u,a,f,l=this,c=this.options;return c.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),n={x:t.pageX,y:t.pageY},r=this._normValueFromMouse(n),i=this._valueMax()-this._valueMin()+1,this.handles.each(function(t){var n=Math.abs(r-l.values(t));i>n&&(i=n,s=e(this),o=t)}),c.range===!0&&this.values(1)===c.min&&(o+=1,s=e(this.handles[o])),u=this._start(t,o),u===!1?!1:(this._mouseSliding=!0,this._handleIndex=o,s.addClass("ui-state-active").focus(),a=s.offset(),f=!e(t.target).parents().andSelf().is(".ui-slider-handle"),this._clickOffset=f?{left:0,top:0}:{left:t.pageX-a.left-s.width()/2,top:t.pageY-a.top-s.height()/2-(parseInt(s.css("borderTopWidth"),10)||0)-(parseInt(s.css("borderBottomWidth"),10)||0)+(parseInt(s.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(t,o,r),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(e){var t={x:e.pageX,y:e.pageY},n=this._normValueFromMouse(t);return this._slide(e,this._handleIndex,n),!1},_mouseStop:function(e){return this.handles.removeClass("ui-state-active"),this._mouseSliding=!1,this._stop(e,this._handleIndex),this._change(e,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation=this.options.orientation==="vertical"?"vertical":"horizontal"},_normValueFromMouse:function(e){var t,n,r,i,s;return this.orientation==="horizontal"?(t=this.elementSize.width,n=e.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(t=this.elementSize.height,n=e.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),r=n/t,r>1&&(r=1),r<0&&(r=0),this.orientation==="vertical"&&(r=1-r),i=this._valueMax()-this._valueMin(),s=this._valueMin()+r*i,this._trimAlignValue(s)},_start:function(e,t){var n={handle:this.handles[t],value:this.value()};return this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger("start",e,n)},_slide:function(e,t,n){var r,i,s;this.options.values&&this.options.values.length?(r=this.values(t?0:1),this.options.values.length===2&&this.options.range===!0&&(t===0&&n>r||t===1&&n<r)&&(n=r),n!==this.values(t)&&(i=this.values(),i[t]=n,s=this._trigger("slide",e,{handle:this.handles[t],value:n,values:i}),r=this.values(t?0:1),s!==!1&&this.values(t,n,!0))):n!==this.value()&&(s=this._trigger("slide",e,{handle:this.handles[t],value:n}),s!==!1&&this.value(n))},_stop:function(e,t){var n={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger("stop",e,n)},_change:function(e,t){if(!this._keySliding&&!this._mouseSliding){var n={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger("change",e,n)}},value:function(e){if(arguments.length){this.options.value=this._trimAlignValue(e),this._refreshValue(),this._change(null,0);return}return this._value()},values:function(t,n){var r,i,s;if(arguments.length>1){this.options.values[t]=this._trimAlignValue(n),this._refreshValue(),this._change(null,t);return}if(!arguments.length)return this._values();if(!e.isArray(arguments[0]))return this.options.values&&this.options.values.length?this._values(t):this.value();r=this.options.values,i=arguments[0];for(s=0;s<r.length;s+=1)r[s]=this._trimAlignValue(i[s]),this._change(null,s);this._refreshValue()},_setOption:function(t,n){var r,i=0;e.isArray(this.options.values)&&(i=this.options.values.length),e.Widget.prototype._setOption.apply(this,arguments);switch(t){case"disabled":n?(this.handles.filter(".ui-state-focus").blur(),this.handles.removeClass("ui-state-hover"),this.handles.prop("disabled",!0),this.element.addClass("ui-disabled")):(this.handles.prop("disabled",!1),this.element.removeClass("ui-disabled"));break;case"orientation":this._detectOrientation(),this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation),this._refreshValue();break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":this._animateOff=!0,this._refreshValue();for(r=0;r<i;r+=1)this._change(null,r);this._animateOff=!1;break;case"min":case"max":this._animateOff=!0,this._refreshValue(),this._animateOff=!1}},_value:function(){var e=this.options.value;return e=this._trimAlignValue(e),e},_values:function(e){var t,n,r;if(arguments.length)return t=this.options.values[e],t=this._trimAlignValue(t),t;n=this.options.values.slice();for(r=0;r<n.length;r+=1)n[r]=this._trimAlignValue(n[r]);return n},_trimAlignValue:function(e){if(e<=this._valueMin())return this._valueMin();if(e>=this._valueMax())return this._valueMax();var t=this.options.step>0?this.options.step:1,n=(e-this._valueMin())%t,r=e-n;return Math.abs(n)*2>=t&&(r+=n>0?t:-t),parseFloat(r.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var t,n,r,i,s,o=this.options.range,u=this.options,a=this,f=this._animateOff?!1:u.animate,l={};this.options.values&&this.options.values.length?this.handles.each(function(r){n=(a.values(r)-a._valueMin())/(a._valueMax()-a._valueMin())*100,l[a.orientation==="horizontal"?"left":"bottom"]=n+"%",e(this).stop(1,1)[f?"animate":"css"](l,u.animate),a.options.range===!0&&(a.orientation==="horizontal"?(r===0&&a.range.stop(1,1)[f?"animate":"css"]({left:n+"%"},u.animate),r===1&&a.range[f?"animate":"css"]({width:n-t+"%"},{queue:!1,duration:u.animate})):(r===0&&a.range.stop(1,1)[f?"animate":"css"]({bottom:n+"%"},u.animate),r===1&&a.range[f?"animate":"css"]({height:n-t+"%"},{queue:!1,duration:u.animate}))),t=n}):(r=this.value(),i=this._valueMin(),s=this._valueMax(),n=s!==i?(r-i)/(s-i)*100:0,l[this.orientation==="horizontal"?"left":"bottom"]=n+"%",this.handle.stop(1,1)[f?"animate":"css"](l,u.animate),o==="min"&&this.orientation==="horizontal"&&this.range.stop(1,1)[f?"animate":"css"]({width:n+"%"},u.animate),o==="max"&&this.orientation==="horizontal"&&this.range[f?"animate":"css"]({width:100-n+"%"},{queue:!1,duration:u.animate}),o==="min"&&this.orientation==="vertical"&&this.range.stop(1,1)[f?"animate":"css"]({height:n+"%"},u.animate),o==="max"&&this.orientation==="vertical"&&this.range[f?"animate":"css"]({height:100-n+"%"},{queue:!1,duration:u.animate}))}})}(jQuery),function(e){function t(e){return function(){var t=this.element.val();e.apply(this,arguments),this._refresh(),t!==this.element.val()&&this._trigger("change")}}e.widget("ui.spinner",{version:"1.9.2",defaultElement:"<input>",widgetEventPrefix:"spin",options:{culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption("max",this.options.max),this._setOption("min",this.options.min),this._setOption("step",this.options.step),this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_getCreateOptions:function(){var t={},n=this.element;return e.each(["min","max","step"],function(e,r){var i=n.attr(r);i!==undefined&&i.length&&(t[r]=i)}),t},_events:{keydown:function(e){this._start(e)&&this._keydown(e)&&e.preventDefault()},keyup:"_stop",focus:function(){this.previous=this.element.val()},blur:function(e){if(this.cancelBlur){delete this.cancelBlur;return}this._refresh(),this.previous!==this.element.val()&&this._trigger("change",e)},mousewheel:function(e,t){if(!t)return;if(!this.spinning&&!this._start(e))return!1;this._spin((t>0?1:-1)*this.options.step,e),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(e)},100),e.preventDefault()},"mousedown .ui-spinner-button":function(t){function r(){var e=this.element[0]===this.document[0].activeElement;e||(this.element.focus(),this.previous=n,this._delay(function(){this.previous=n}))}var n;n=this.element[0]===this.document[0].activeElement?this.previous:this.element.val(),t.preventDefault(),r.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,r.call(this)});if(this._start(t)===!1)return;this._repeat(null,e(t.currentTarget).hasClass("ui-spinner-up")?1:-1,t)},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function(t){if(!e(t.currentTarget).hasClass("ui-state-active"))return;if(this._start(t)===!1)return!1;this._repeat(null,e(t.currentTarget).hasClass("ui-spinner-up")?1:-1,t)},"mouseleave .ui-spinner-button":"_stop"},_draw:function(){var e=this.uiSpinner=this.element.addClass("ui-spinner-input").attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());this.element.attr("role","spinbutton"),this.buttons=e.find(".ui-spinner-button").attr("tabIndex",-1).button().removeClass("ui-corner-all"),this.buttons.height()>Math.ceil(e.height()*.5)&&e.height()>0&&e.height(e.height()),this.options.disabled&&this.disable()},_keydown:function(t){var n=this.options,r=e.ui.keyCode;switch(t.keyCode){case r.UP:return this._repeat(null,1,t),!0;case r.DOWN:return this._repeat(null,-1,t),!0;case r.PAGE_UP:return this._repeat(null,n.page,t),!0;case r.PAGE_DOWN:return this._repeat(null,-n.page,t),!0}return!1},_uiSpinnerHtml:function(){return"<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>"},_buttonHtml:function(){return"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon "+this.options.icons.up+"'>&#9650;</span>"+"</a>"+"<a class='ui-spinner-button ui-spinner-down ui-corner-br'>"+"<span class='ui-icon "+this.options.icons.down+"'>&#9660;</span>"+"</a>"},_start:function(e){return!this.spinning&&this._trigger("start",e)===!1?!1:(this.counter||(this.counter=1),this.spinning=!0,!0)},_repeat:function(e,t,n){e=e||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,t,n)},e),this._spin(t*this.options.step,n)},_spin:function(e,t){var n=this.value()||0;this.counter||(this.counter=1),n=this._adjustValue(n+e*this._increment(this.counter));if(!this.spinning||this._trigger("spin",t,{value:n})!==!1)this._value(n),this.counter++},_increment:function(t){var n=this.options.incremental;return n?e.isFunction(n)?n(t):Math.floor(t*t*t/5e4-t*t/500+17*t/200+1):1},_precision:function(){var e=this._precisionOf(this.options.step);return this.options.min!==null&&(e=Math.max(e,this._precisionOf(this.options.min))),e},_precisionOf:function(e){var t=e.toString(),n=t.indexOf(".");return n===-1?0:t.length-n-1},_adjustValue:function(e){var t,n,r=this.options;return t=r.min!==null?r.min:0,n=e-t,n=Math.round(n/r.step)*r.step,e=t+n,e=parseFloat(e.toFixed(this._precision())),r.max!==null&&e>r.max?r.max:r.min!==null&&e<r.min?r.min:e},_stop:function(e){if(!this.spinning)return;clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",e)},_setOption:function(e,t){if(e==="culture"||e==="numberFormat"){var n=this._parse(this.element.val());this.options[e]=t,this.element.val(this._format(n));return}(e==="max"||e==="min"||e==="step")&&typeof t=="string"&&(t=this._parse(t)),this._super(e,t),e==="disabled"&&(t?(this.element.prop("disabled",!0),this.buttons.button("disable")):(this.element.prop("disabled",!1),this.buttons.button("enable")))},_setOptions:t(function(e){this._super(e),this._value(this.element.val())}),_parse:function(e){return typeof e=="string"&&e!==""&&(e=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(e,10,this.options.culture):+e),e===""||isNaN(e)?null:e},_format:function(e){return e===""?"":window.Globalize&&this.options.numberFormat?Globalize.format(e,this.options.numberFormat,this.options.culture):e},_refresh:function(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())})},_value:function(e,t){var n;e!==""&&(n=this._parse(e),n!==null&&(t||(n=this._adjustValue(n)),e=this._format(n))),this.element.val(e),this._refresh()},_destroy:function(){this.element.removeClass("ui-spinner-input").prop("disabled",!1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.uiSpinner.replaceWith(this.element)},stepUp:t(function(e){this._stepUp(e)}),_stepUp:function(e){this._spin((e||1)*this.options.step)},stepDown:t(function(e){this._stepDown(e)}),_stepDown:function(e){this._spin((e||1)*-this.options.step)},pageUp:t(function(e){this._stepUp((e||1)*this.options.page)}),pageDown:t(function(e){this._stepDown((e||1)*this.options.page)}),value:function(e){if(!arguments.length)return this._parse(this.element.val());t(this._value).call(this,e)},widget:function(){return this.uiSpinner}})}(jQuery),function(e,t){function i(){return++n}function s(e){return e.hash.length>1&&e.href.replace(r,"")===location.href.replace(r,"").replace(/\s/g,"%20")}var n=0,r=/#.*$/;e.widget("ui.tabs",{version:"1.9.2",delay:300,options:{active:null,collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_create:function(){var t=this,n=this.options,r=n.active,i=location.hash.substring(1);this.running=!1,this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible",n.collapsible).delegate(".ui-tabs-nav > li","mousedown"+this.eventNamespace,function(t){e(this).is(".ui-state-disabled")&&t.preventDefault()}).delegate(".ui-tabs-anchor","focus"+this.eventNamespace,function(){e(this).closest("li").is(".ui-state-disabled")&&this.blur()}),this._processTabs();if(r===null){i&&this.tabs.each(function(t,n){if(e(n).attr("aria-controls")===i)return r=t,!1}),r===null&&(r=this.tabs.index(this.tabs.filter(".ui-tabs-active")));if(r===null||r===-1)r=this.tabs.length?0:!1}r!==!1&&(r=this.tabs.index(this.tabs.eq(r)),r===-1&&(r=n.collapsible?!1:0)),n.active=r,!n.collapsible&&n.active===!1&&this.anchors.length&&(n.active=0),e.isArray(n.disabled)&&(n.disabled=e.unique(n.disabled.concat(e.map(this.tabs.filter(".ui-state-disabled"),function(e){return t.tabs.index(e)}))).sort()),this.options.active!==!1&&this.anchors.length?this.active=this._findActive(this.options.active):this.active=e(),this._refresh(),this.active.length&&this.load(n.active)},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):e()}},_tabKeydown:function(t){var n=e(this.document[0].activeElement).closest("li"),r=this.tabs.index(n),i=!0;if(this._handlePageNav(t))return;switch(t.keyCode){case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:r++;break;case e.ui.keyCode.UP:case e.ui.keyCode.LEFT:i=!1,r--;break;case e.ui.keyCode.END:r=this.anchors.length-1;break;case e.ui.keyCode.HOME:r=0;break;case e.ui.keyCode.SPACE:t.preventDefault(),clearTimeout(this.activating),this._activate(r);return;case e.ui.keyCode.ENTER:t.preventDefault(),clearTimeout(this.activating),this._activate(r===this.options.active?!1:r);return;default:return}t.preventDefault(),clearTimeout(this.activating),r=this._focusNextTab(r,i),t.ctrlKey||(n.attr("aria-selected","false"),this.tabs.eq(r).attr("aria-selected","true"),this.activating=this._delay(function(){this.option("active",r)},this.delay))},_panelKeydown:function(t){if(this._handlePageNav(t))return;t.ctrlKey&&t.keyCode===e.ui.keyCode.UP&&(t.preventDefault(),this.active.focus())},_handlePageNav:function(t){if(t.altKey&&t.keyCode===e.ui.keyCode.PAGE_UP)return this._activate(this._focusNextTab(this.options.active-1,!1)),!0;if(t.altKey&&t.keyCode===e.ui.keyCode.PAGE_DOWN)return this._activate(this._focusNextTab(this.options.active+1,!0)),!0},_findNextTab:function(t,n){function i(){return t>r&&(t=0),t<0&&(t=r),t}var r=this.tabs.length-1;while(e.inArray(i(),this.options.disabled)!==-1)t=n?t+1:t-1;return t},_focusNextTab:function(e,t){return e=this._findNextTab(e,t),this.tabs.eq(e).focus(),e},_setOption:function(e,t){if(e==="active"){this._activate(t);return}if(e==="disabled"){this._setupDisabled(t);return}this._super(e,t),e==="collapsible"&&(this.element.toggleClass("ui-tabs-collapsible",t),!t&&this.options.active===!1&&this._activate(0)),e==="event"&&this._setupEvents(t),e==="heightStyle"&&this._setupHeightStyle(t)},_tabId:function(e){return e.attr("aria-controls")||"ui-tabs-"+i()},_sanitizeSelector:function(e){return e?e.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):""},refresh:function(){var t=this.options,n=this.tablist.children(":has(a[href])");t.disabled=e.map(n.filter(".ui-state-disabled"),function(e){return n.index(e)}),this._processTabs(),t.active===!1||!this.anchors.length?(t.active=!1,this.active=e()):this.active.length&&!e.contains(this.tablist[0],this.active[0])?this.tabs.length===t.disabled.length?(t.active=!1,this.active=e()):this._activate(this._findNextTab(Math.max(0,t.active-1),!1)):t.active=this.tabs.index(this.active),this._refresh()},_refresh:function(){this._setupDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-expanded":"false","aria-hidden":"true"}),this.active.length?(this.active.addClass("ui-tabs-active ui-state-active").attr({"aria-selected":"true",tabIndex:0}),this._getPanelForTab(this.active).show().attr({"aria-expanded":"true","aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var t=this;this.tablist=this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role","tablist"),this.tabs=this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({role:"tab",tabIndex:-1}),this.anchors=this.tabs.map(function(){return e("a",this)[0]}).addClass("ui-tabs-anchor").attr({role:"presentation",tabIndex:-1}),this.panels=e(),this.anchors.each(function(n,r){var i,o,u,a=e(r).uniqueId().attr("id"),f=e(r).closest("li"),l=f.attr("aria-controls");s(r)?(i=r.hash,o=t.element.find(t._sanitizeSelector(i))):(u=t._tabId(f),i="#"+u,o=t.element.find(i),o.length||(o=t._createPanel(u),o.insertAfter(t.panels[n-1]||t.tablist)),o.attr("aria-live","polite")),o.length&&(t.panels=t.panels.add(o)),l&&f.data("ui-tabs-aria-controls",l),f.attr({"aria-controls":i.substring(1),"aria-labelledby":a}),o.attr("aria-labelledby",a)}),this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role","tabpanel")},_getList:function(){return this.element.find("ol,ul").eq(0)},_createPanel:function(t){return e("<div>").attr("id",t).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy",!0)},_setupDisabled:function(t){e.isArray(t)&&(t.length?t.length===this.anchors.length&&(t=!0):t=!1);for(var n=0,r;r=this.tabs[n];n++)t===!0||e.inArray(n,t)!==-1?e(r).addClass("ui-state-disabled").attr("aria-disabled","true"):e(r).removeClass("ui-state-disabled").removeAttr("aria-disabled");this.options.disabled=t},_setupEvents:function(t){var n={click:function(e){e.preventDefault()}};t&&e.each(t.split(" "),function(e,t){n[t]="_eventHandler"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(this.anchors,n),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(t){var n,r,i=this.element.parent();t==="fill"?(e.support.minHeight||(r=i.css("overflow"),i.css("overflow","hidden")),n=i.height(),this.element.siblings(":visible").each(function(){var t=e(this),r=t.css("position");if(r==="absolute"||r==="fixed")return;n-=t.outerHeight(!0)}),r&&i.css("overflow",r),this.element.children().not(this.panels).each(function(){n-=e(this).outerHeight(!0)}),this.panels.each(function(){e(this).height(Math.max(0,n-e(this).innerHeight()+e(this).height()))}).css("overflow","auto")):t==="auto"&&(n=0,this.panels.each(function(){n=Math.max(n,e(this).height("").height())}).height(n))},_eventHandler:function(t){var n=this.options,r=this.active,i=e(t.currentTarget),s=i.closest("li"),o=s[0]===r[0],u=o&&n.collapsible,a=u?e():this._getPanelForTab(s),f=r.length?this._getPanelForTab(r):e(),l={oldTab:r,oldPanel:f,newTab:u?e():s,newPanel:a};t.preventDefault();if(s.hasClass("ui-state-disabled")||s.hasClass("ui-tabs-loading")||this.running||o&&!n.collapsible||this._trigger("beforeActivate",t,l)===!1)return;n.active=u?!1:this.tabs.index(s),this.active=o?e():s,this.xhr&&this.xhr.abort(),!f.length&&!a.length&&e.error("jQuery UI Tabs: Mismatching fragment identifier."),a.length&&this.load(this.tabs.index(s),t),this._toggle(t,l)},_toggle:function(t,n){function o(){r.running=!1,r._trigger("activate",t,n)}function u(){n.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),i.length&&r.options.show?r._show(i,r.options.show,o):(i.show(),o())}var r=this,i=n.newPanel,s=n.oldPanel;this.running=!0,s.length&&this.options.hide?this._hide(s,this.options.hide,function(){n.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),u()}):(n.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),s.hide(),u()),s.attr({"aria-expanded":"false","aria-hidden":"true"}),n.oldTab.attr("aria-selected","false"),i.length&&s.length?n.oldTab.attr("tabIndex",-1):i.length&&this.tabs.filter(function(){return e(this).attr("tabIndex")===0}).attr("tabIndex",-1),i.attr({"aria-expanded":"true","aria-hidden":"false"}),n.newTab.attr({"aria-selected":"true",tabIndex:0})},_activate:function(t){var n,r=this._findActive(t);if(r[0]===this.active[0])return;r.length||(r=this.active),n=r.find(".ui-tabs-anchor")[0],this._eventHandler({target:n,currentTarget:n,preventDefault:e.noop})},_findActive:function(t){return t===!1?e():this.tabs.eq(t)},_getIndex:function(e){return typeof e=="string"&&(e=this.anchors.index(this.anchors.filter("[href$='"+e+"']"))),e},_destroy:function(){this.xhr&&this.xhr.abort(),this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"),this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role"),this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeData("href.tabs").removeData("load.tabs").removeUniqueId(),this.tabs.add(this.panels).each(function(){e.data(this,"ui-tabs-destroy")?e(this).remove():e(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")}),this.tabs.each(function(){var t=e(this),n=t.data("ui-tabs-aria-controls");n?t.attr("aria-controls",n):t.removeAttr("aria-controls")}),this.panels.show(),this.options.heightStyle!=="content"&&this.panels.css("height","")},enable:function(n){var r=this.options.disabled;if(r===!1)return;n===t?r=!1:(n=this._getIndex(n),e.isArray(r)?r=e.map(r,function(e){return e!==n?e:null}):r=e.map(this.tabs,function(e,t){return t!==n?t:null})),this._setupDisabled(r)},disable:function(n){var r=this.options.disabled;if(r===!0)return;if(n===t)r=!0;else{n=this._getIndex(n);if(e.inArray(n,r)!==-1)return;e.isArray(r)?r=e.merge([n],r).sort():r=[n]}this._setupDisabled(r)},load:function(t,n){t=this._getIndex(t);var r=this,i=this.tabs.eq(t),o=i.find(".ui-tabs-anchor"),u=this._getPanelForTab(i),a={tab:i,panel:u};if(s(o[0]))return;this.xhr=e.ajax(this._ajaxSettings(o,n,a)),this.xhr&&this.xhr.statusText!=="canceled"&&(i.addClass("ui-tabs-loading"),u.attr("aria-busy","true"),this.xhr.success(function(e){setTimeout(function(){u.html(e),r._trigger("load",n,a)},1)}).complete(function(e,t){setTimeout(function(){t==="abort"&&r.panels.stop(!1,!0),i.removeClass("ui-tabs-loading"),u.removeAttr("aria-busy"),e===r.xhr&&delete r.xhr},1)}))},_ajaxSettings:function(t,n,r){var i=this;return{url:t.attr("href"),beforeSend:function(t,s){return i._trigger("beforeLoad",n,e.extend({jqXHR:t,ajaxSettings:s},r))}}},_getPanelForTab:function(t){var n=e(t).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+n))}}),e.uiBackCompat!==!1&&(e.ui.tabs.prototype._ui=function(e,t){return{tab:e,panel:t,index:this.anchors.index(e)}},e.widget("ui.tabs",e.ui.tabs,{url:function(e,t){this.anchors.eq(e).attr("href",t)}}),e.widget("ui.tabs",e.ui.tabs,{options:{ajaxOptions:null,cache:!1},_create:function(){this._super();var t=this;this._on({tabsbeforeload:function(n,r){if(e.data(r.tab[0],"cache.tabs")){n.preventDefault();return}r.jqXHR.success(function(){t.options.cache&&e.data(r.tab[0],"cache.tabs",!0)})}})},_ajaxSettings:function(t,n,r){var i=this.options.ajaxOptions;return e.extend({},i,{error:function(e,t){try{i.error(e,t,r.tab.closest("li").index(),r.tab[0])}catch(n){}}},this._superApply(arguments))},_setOption:function(e,t){e==="cache"&&t===!1&&this.anchors.removeData("cache.tabs"),this._super(e,t)},_destroy:function(){this.anchors.removeData("cache.tabs"),this._super()},url:function(e){this.anchors.eq(e).removeData("cache.tabs"),this._superApply(arguments)}}),e.widget("ui.tabs",e.ui.tabs,{abort:function(){this.xhr&&this.xhr.abort()}}),e.widget("ui.tabs",e.ui.tabs,{options:{spinner:"<em>Loading&#8230;</em>"},_create:function(){this._super(),this._on({tabsbeforeload:function(e,t){if(e.target!==this.element[0]||!this.options.spinner)return;var n=t.tab.find("span"),r=n.html();n.html(this.options.spinner),t.jqXHR.complete(function(){n.html(r)})}})}}),e.widget("ui.tabs",e.ui.tabs,{options:{enable:null,disable:null},enable:function(t){var n=this.options,r;if(t&&n.disabled===!0||e.isArray(n.disabled)&&e.inArray(t,n.disabled)!==-1)r=!0;this._superApply(arguments),r&&this._trigger("enable",null,this._ui(this.anchors[t],this.panels[t]))},disable:function(t){var n=this.options,r;if(t&&n.disabled===!1||e.isArray(n.disabled)&&e.inArray(t,n.disabled)===-1)r=!0;this._superApply(arguments),r&&this._trigger("disable",null,this._ui(this.anchors[t],this.panels[t]))}}),e.widget("ui.tabs",e.ui.tabs,{options:{add:null,remove:null,tabTemplate:"<li><a href='#{href}'><span>#{label}</span></a></li>"},add:function(n,r,i){i===t&&(i=this.anchors.length);var s,o,u=this.options,a=e(u.tabTemplate.replace(/#\{href\}/g,n).replace(/#\{label\}/g,r)),f=n.indexOf("#")?this._tabId(a):n.replace("#","");return a.addClass("ui-state-default ui-corner-top").data("ui-tabs-destroy",!0),a.attr("aria-controls",f),s=i>=this.tabs.length,o=this.element.find("#"+f),o.length||(o=this._createPanel(f),s?i>0?o.insertAfter(this.panels.eq(-1)):o.appendTo(this.element):o.insertBefore(this.panels[i])),o.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").hide(),s?a.appendTo(this.tablist):a.insertBefore(this.tabs[i]),u.disabled=e.map(u.disabled,function(e){return e>=i?++e:e}),this.refresh(),this.tabs.length===1&&u.active===!1&&this.option("active",0),this._trigger("add",null,this._ui(this.anchors[i],this.panels[i])),this},remove:function(t){t=this._getIndex(t);var n=this.options,r=this.tabs.eq(t).remove(),i=this._getPanelForTab(r).remove();return r.hasClass("ui-tabs-active")&&this.anchors.length>2&&this._activate(t+(t+1<this.anchors.length?1:-1)),n.disabled=e.map(e.grep(n.disabled,function(e){return e!==t}),function(e){return e>=t?--e:e}),this.refresh(),this._trigger("remove",null,this._ui(r.find("a")[0],i[0])),this}}),e.widget("ui.tabs",e.ui.tabs,{length:function(){return this.anchors.length}}),e.widget("ui.tabs",e.ui.tabs,{options:{idPrefix:"ui-tabs-"},_tabId:function(t){var n=t.is("li")?t.find("a[href]"):t;return n=n[0],e(n).closest("li").attr("aria-controls")||n.title&&n.title.replace(/\s/g,"_").replace(/[^\w\u00c0-\uFFFF\-]/g,"")||this.options.idPrefix+i()}}),e.widget("ui.tabs",e.ui.tabs,{options:{panelTemplate:"<div></div>"},_createPanel:function(t){return e(this.options.panelTemplate).attr("id",t).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy",!0)}}),e.widget("ui.tabs",e.ui.tabs,{_create:function(){var e=this.options;e.active===null&&e.selected!==t&&(e.active=e.selected===-1?!1:e.selected),this._super(),e.selected=e.active,e.selected===!1&&(e.selected=-1)},_setOption:function(e,t){if(e!=="selected")return this._super(e,t);var n=this.options;this._super("active",t===-1?!1:t),n.selected=n.active,n.selected===!1&&(n.selected=-1)},_eventHandler:function(){this._superApply(arguments),this.options.selected=this.options.active,this.options.selected===!1&&(this.options.selected=-1)}}),e.widget("ui.tabs",e.ui.tabs,{options:{show:null,select:null},_create:function(){this._super(),this.options.active!==!1&&this._trigger("show",null,this._ui(this.active.find(".ui-tabs-anchor")[0],this._getPanelForTab(this.active)[0]))},_trigger:function(e,t,n){var r,i,s=this._superApply(arguments);return s?(e==="beforeActivate"?(r=n.newTab.length?n.newTab:n.oldTab,i=n.newPanel.length?n.newPanel:n.oldPanel,s=this._super("select",t,{tab:r.find(".ui-tabs-anchor")[0],panel:i[0],index:r.closest("li").index()})):e==="activate"&&n.newTab.length&&(s=this._super("show",t,{tab:n.newTab.find(".ui-tabs-anchor")[0],panel:n.newPanel[0],index:n.newTab.closest("li").index()})),s):!1}}),e.widget("ui.tabs",e.ui.tabs,{select:function(e){e=this._getIndex(e);if(e===-1){if(!this.options.collapsible||this.options.selected===-1)return;e=this.options.selected}this.anchors.eq(e).trigger(this.options.event+this.eventNamespace)}}),function(){var t=0;e.widget("ui.tabs",e.ui.tabs,{options:{cookie:null},_create:function(){var e=this.options,t;e.active==null&&e.cookie&&(t=parseInt(this._cookie(),10),t===-1&&(t=!1),e.active=t),this._super()},_cookie:function(n){var r=[this.cookie||(this.cookie=this.options.cookie.name||"ui-tabs-"+ ++t)];return arguments.length&&(r.push(n===!1?-1:n),r.push(this.options.cookie)),e.cookie.apply(null,r)},_refresh:function(){this._super(),this.options.cookie&&this._cookie(this.options.active,this.options.cookie)},_eventHandler:function(){this._superApply(arguments),this.options.cookie&&this._cookie(this.options.active,this.options.cookie)},_destroy:function(){this._super(),this.options.cookie&&this._cookie(null,this.options.cookie)}})}(),e.widget("ui.tabs",e.ui.tabs,{_trigger:function(t,n,r){var i=e.extend({},r);return t==="load"&&(i.panel=i.panel[0],i.tab=i.tab.find(".ui-tabs-anchor")[0]),this._super(t,n,i)}}),e.widget("ui.tabs",e.ui.tabs,{options:{fx:null},_getFx:function(){var t,n,r=this.options.fx;return r&&(e.isArray(r)?(t=r[0],n=r[1]):t=n=r),r?{show:n,hide:t}:null},_toggle:function(e,t){function o(){n.running=!1,n._trigger("activate",e,t)}function u(){t.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),r.length&&s.show?r.animate(s.show,s.show.duration,function(){o()}):(r.show(),o())}var n=this,r=t.newPanel,i=t.oldPanel,s=this._getFx();if(!s)return this._super(e,t);n.running=!0,i.length&&s.hide?i.animate(s.hide,s.hide.duration,function(){t.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),u()}):(t.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),i.hide(),u())}}))}(jQuery),function(e){function n(t,n){var r=(t.attr("aria-describedby")||"").split(/\s+/);r.push(n),t.data("ui-tooltip-id",n).attr("aria-describedby",e.trim(r.join(" ")))}function r(t){var n=t.data("ui-tooltip-id"),r=(t.attr("aria-describedby")||"").split(/\s+/),i=e.inArray(n,r);i!==-1&&r.splice(i,1),t.removeData("ui-tooltip-id"),r=e.trim(r.join(" ")),r?t.attr("aria-describedby",r):t.removeAttr("aria-describedby")}var t=0;e.widget("ui.tooltip",{version:"1.9.2",options:{content:function(){return e(this).attr("title")},hide:!0,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flip"},show:!0,tooltipClass:null,track:!1,close:null,open:null},_create:function(){this._on({mouseover:"open",focusin:"open"}),this.tooltips={},this.parents={},this.options.disabled&&this._disable()},_setOption:function(t,n){var r=this;if(t==="disabled"){this[n?"_disable":"_enable"](),this.options[t]=n;return}this._super(t,n),t==="content"&&e.each(this.tooltips,function(e,t){r._updateContent(t)})},_disable:function(){var t=this;e.each(this.tooltips,function(n,r){var i=e.Event("blur");i.target=i.currentTarget=r[0],t.close(i,!0)}),this.element.find(this.options.items).andSelf().each(function(){var t=e(this);t.is("[title]")&&t.data("ui-tooltip-title",t.attr("title")).attr("title","")})},_enable:function(){this.element.find(this.options.items).andSelf().each(function(){var t=e(this);t.data("ui-tooltip-title")&&t.attr("title",t.data("ui-tooltip-title"))})},open:function(t){var n=this,r=e(t?t.target:this.element).closest(this.options.items);if(!r.length||r.data("ui-tooltip-id"))return;r.attr("title")&&r.data("ui-tooltip-title",r.attr("title")),r.data("ui-tooltip-open",!0),t&&t.type==="mouseover"&&r.parents().each(function(){var t=e(this),r;t.data("ui-tooltip-open")&&(r=e.Event("blur"),r.target=r.currentTarget=this,n.close(r,!0)),t.attr("title")&&(t.uniqueId(),n.parents[this.id]={element:this,title:t.attr("title")},t.attr("title",""))}),this._updateContent(r,t)},_updateContent:function(e,t){var n,r=this.options.content,i=this,s=t?t.type:null;if(typeof r=="string")return this._open(t,e,r);n=r.call(e[0],function(n){if(!e.data("ui-tooltip-open"))return;i._delay(function(){t&&(t.type=s),this._open(t,e,n)})}),n&&this._open(t,e,n)},_open:function(t,r,i){function f(e){a.of=e;if(s.is(":hidden"))return;s.position(a)}var s,o,u,a=e.extend({},this.options.position);if(!i)return;s=this._find(r);if(s.length){s.find(".ui-tooltip-content").html(i);return}r.is("[title]")&&(t&&t.type==="mouseover"?r.attr("title",""):r.removeAttr("title")),s=this._tooltip(r),n(r,s.attr("id")),s.find(".ui-tooltip-content").html(i),this.options.track&&t&&/^mouse/.test(t.type)?(this._on(this.document,{mousemove:f}),f(t)):s.position(e.extend({of:r},this.options.position)),s.hide(),this._show(s,this.options.show),this.options.show&&this.options.show.delay&&(u=setInterval(function(){s.is(":visible")&&(f(a.of),clearInterval(u))},e.fx.interval)),this._trigger("open",t,{tooltip:s}),o={keyup:function(t){if(t.keyCode===e.ui.keyCode.ESCAPE){var n=e.Event(t);n.currentTarget=r[0],this.close(n,!0)}},remove:function(){this._removeTooltip(s)}};if(!t||t.type==="mouseover")o.mouseleave="close";if(!t||t.type==="focusin")o.focusout="close";this._on(!0,r,o)},close:function(t){var n=this,i=e(t?t.currentTarget:this.element),s=this._find(i);if(this.closing)return;i.data("ui-tooltip-title")&&i.attr("title",i.data("ui-tooltip-title")),r(i),s.stop(!0),this._hide(s,this.options.hide,function(){n._removeTooltip(e(this))}),i.removeData("ui-tooltip-open"),this._off(i,"mouseleave focusout keyup"),i[0]!==this.element[0]&&this._off(i,"remove"),this._off(this.document,"mousemove"),t&&t.type==="mouseleave"&&e.each(this.parents,function(t,r){e(r.element).attr("title",r.title),delete n.parents[t]}),this.closing=!0,this._trigger("close",t,{tooltip:s}),this.closing=!1},_tooltip:function(n){var r="ui-tooltip-"+t++,i=e("<div>").attr({id:r,role:"tooltip"}).addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content "+(this.options.tooltipClass||""));return e("<div>").addClass("ui-tooltip-content").appendTo(i),i.appendTo(this.document[0].body),e.fn.bgiframe&&i.bgiframe(),this.tooltips[r]=n,i},_find:function(t){var n=t.data("ui-tooltip-id");return n?e("#"+n):e()},_removeTooltip:function(e){e.remove(),delete this.tooltips[e.attr("id")]},_destroy:function(){var t=this;e.each(this.tooltips,function(n,r){var i=e.Event("blur");i.target=i.currentTarget=r[0],t.close(i,!0),e("#"+n).remove(),r.data("ui-tooltip-title")&&(r.attr("title",r.data("ui-tooltip-title")),r.removeData("ui-tooltip-title"))})}})}(jQuery);;
// jQuery available Plugin 1.5.0 (20100315)
// By John Terenzio | http://plugins.jquery.com/project/available | MIT License
(function($){$.available={list:[],interval:null,turbo:false,poll:function(){for(var i=0;i<$.available.list.length;i++){if($($.available.list[i][0]).length&&($.available.turbo||$($.available.list[i][0]).next().length||$.isReady)){try{$.available.list[i][1].apply($($.available.list[i][0]).eq(0));}catch(e){if(typeof console!='undefined'){console.log(e);}}$.available.list=$.available.list.slice(0,i).concat($.available.list.slice(i+1));i--;}}if(!$.available.list.length||$.isReady){$.available.interval=clearInterval($.available.interval);}}};$.fn.available=function(fn,turbo){$.available.turbo=turbo||$.available.turbo;$.available.list.push([this.selector,fn]);if(!$.available.interval){$.available.interval=setInterval($.available.poll,1);}return this;};})(jQuery);



/*
 * SimpleModal 1.2.3 - jQuery Plugin
 * http://www.ericmmartin.com/projects/simplemodal/
 * Copyright (c) 2009 Eric Martin
 * Dual licensed under the MIT and GPL licenses
 * Revision: $Id: jquery.simplemodal.js 185 2009-02-09 21:51:12Z emartin24 $
 */
(function ($) { var ie6 = $.browser.msie && parseInt($.browser.version) == 6 && typeof window['XMLHttpRequest'] != "object", ieQuirks = null, w = []; $.modal = function (data, options) { return $.modal.impl.init(data, options); }; $.modal.close = function () { $.modal.impl.close(); }; $.fn.modal = function (options) { return $.modal.impl.init(this, options); }; $.modal.defaults = { opacity: 50, overlayId: 'simplemodal-overlay', overlayCss: {}, containerId: 'simplemodal-container', containerCss: {}, dataCss: {}, zIndex: 1000, close: false, closeHTML: '<a class="modalCloseImg" title="Close"></a>', closeClass: 'simplemodal-close', position: null, persist: false, onOpen: null, onShow: null, onClose: null }; $.modal.impl = { opts: null, dialog: {}, init: function (data, options) { if (this.dialog.data) { return false; } ieQuirks = $.browser.msie && !$.boxModel; this.opts = $.extend({}, $.modal.defaults, options); this.zIndex = this.opts.zIndex; this.occb = false; if (typeof data == 'object') { data = data instanceof jQuery ? data : $(data); if (data.parent().parent().size() > 0) { this.dialog.parentNode = data.parent(); if (!this.opts.persist) { this.dialog.orig = data.clone(true); } } } else if (typeof data == 'string' || typeof data == 'number') { data = $('<div/>').html(data); } else { alert('SimpleModal Error: Unsupported data type: ' + typeof data); return false; } this.dialog.data = data.addClass('simplemodal-data').css(this.opts.dataCss); data = null; this.create(); this.open(); if ($.isFunction(this.opts.onShow)) { this.opts.onShow.apply(this, [this.dialog]); } return this; }, create: function () { w = this.getDimensions(); if (ie6) { this.dialog.iframe = $('<iframe src="javascript:false;"/>').css($.extend(this.opts.iframeCss, { display: 'none', opacity: 0, position: 'fixed', height: w[0], width: w[1], zIndex: this.opts.zIndex, top: 0, left: 0 })).appendTo('body'); } this.dialog.overlay = $('<div/>').attr('id', this.opts.overlayId).addClass('simplemodal-overlay').css($.extend(this.opts.overlayCss, { display: 'none', opacity: this.opts.opacity / 100, height: w[0], width: w[1], position: 'fixed', left: 0, top: 0, zIndex: this.opts.zIndex + 1 })).appendTo('body'); this.dialog.container = $('<div/>').attr('id', this.opts.containerId).addClass('simplemodal-container').css($.extend(this.opts.containerCss, { display: 'none', position: 'fixed', zIndex: this.opts.zIndex + 2 })).append(this.opts.close ? $(this.opts.closeHTML).addClass(this.opts.closeClass) : '').appendTo('body'); this.setPosition(); if (ie6 || ieQuirks) { this.fixIE(); } this.dialog.container.append(this.dialog.data.hide()); }, bindEvents: function () { var self = this; $('.' + this.opts.closeClass).bind('click.simplemodal', function (e) { e.preventDefault(); self.close(); }); $(window).bind('resize.simplemodal', function () { w = self.getDimensions(); self.setPosition(); if (ie6 || ieQuirks) { self.fixIE(); } else { self.dialog.iframe && self.dialog.iframe.css({ height: w[0], width: w[1] }); self.dialog.overlay.css({ height: w[0], width: w[1] }); } }); }, unbindEvents: function () { $('.' + this.opts.closeClass).unbind('click.simplemodal'); $(window).unbind('resize.simplemodal'); }, fixIE: function () { var p = this.opts.position; $.each([this.dialog.iframe || null, this.dialog.overlay, this.dialog.container], function (i, el) { if (el) { var bch = 'document.body.clientHeight', bcw = 'document.body.clientWidth', bsh = 'document.body.scrollHeight', bsl = 'document.body.scrollLeft', bst = 'document.body.scrollTop', bsw = 'document.body.scrollWidth', ch = 'document.documentElement.clientHeight', cw = 'document.documentElement.clientWidth', sl = 'document.documentElement.scrollLeft', st = 'document.documentElement.scrollTop', s = el[0].style; s.position = 'absolute'; if (i < 2) { s.removeExpression('height'); s.removeExpression('width'); s.setExpression('height', '' + bsh + ' > ' + bch + ' ? ' + bsh + ' : ' + bch + ' + "px"'); s.setExpression('width', '' + bsw + ' > ' + bcw + ' ? ' + bsw + ' : ' + bcw + ' + "px"'); } else { var te, le; if (p && p.constructor == Array) { var top = p[0] ? typeof p[0] == 'number' ? p[0].toString() : p[0].replace(/px/, '') : el.css('top').replace(/px/, ''); te = top.indexOf('%') == -1 ? top + ' + (t = ' + st + ' ? ' + st + ' : ' + bst + ') + "px"' : parseInt(top.replace(/%/, '')) + ' * ((' + ch + ' || ' + bch + ') / 100) + (t = ' + st + ' ? ' + st + ' : ' + bst + ') + "px"'; if (p[1]) { var left = typeof p[1] == 'number' ? p[1].toString() : p[1].replace(/px/, ''); le = left.indexOf('%') == -1 ? left + ' + (t = ' + sl + ' ? ' + sl + ' : ' + bsl + ') + "px"' : parseInt(left.replace(/%/, '')) + ' * ((' + cw + ' || ' + bcw + ') / 100) + (t = ' + sl + ' ? ' + sl + ' : ' + bsl + ') + "px"'; } } else { te = '(' + ch + ' || ' + bch + ') / 2 - (this.offsetHeight / 2) + (t = ' + st + ' ? ' + st + ' : ' + bst + ') + "px"'; le = '(' + cw + ' || ' + bcw + ') / 2 - (this.offsetWidth / 2) + (t = ' + sl + ' ? ' + sl + ' : ' + bsl + ') + "px"'; } s.removeExpression('top'); s.removeExpression('left'); s.setExpression('top', te); s.setExpression('left', le); } } }); }, getDimensions: function () { var el = $(window); var h = $.browser.opera && $.browser.version > '9.5' && $.fn.jquery <= '1.2.6' ? document.documentElement['clientHeight'] : el.height(); return [h, el.width()]; }, setPosition: function () { var top, left, hCenter = (w[0] / 2) - ((this.dialog.container.height() || this.dialog.data.height()) / 2), vCenter = (w[1] / 2) - ((this.dialog.container.width() || this.dialog.data.width()) / 2); if (this.opts.position && this.opts.position.constructor == Array) { top = this.opts.position[0] || hCenter; left = this.opts.position[1] || vCenter; } else { top = hCenter; left = vCenter; } this.dialog.container.css({ left: left, top: top }); }, open: function () { this.dialog.iframe && this.dialog.iframe.show(); if ($.isFunction(this.opts.onOpen)) { this.opts.onOpen.apply(this, [this.dialog]); } else { this.dialog.overlay.show(); this.dialog.container.show(); this.dialog.data.show(); } this.bindEvents(); }, close: function () { if (!this.dialog.data) { return false; } if ($.isFunction(this.opts.onClose) && !this.occb) { this.occb = true; this.opts.onClose.apply(this, [this.dialog]); } else { if (this.dialog.parentNode) { if (this.opts.persist) { this.dialog.data.hide().appendTo(this.dialog.parentNode); } else { this.dialog.data.remove(); this.dialog.orig.appendTo(this.dialog.parentNode); } } else { this.dialog.data.remove(); } this.dialog.container.remove(); this.dialog.overlay.remove(); this.dialog.iframe && this.dialog.iframe.remove(); this.dialog = {}; } this.unbindEvents(); } }; })(jQuery);

/**
* jquery.simpletip 1.3.1. A simple tooltip plugin
* 
* Copyright (c) 2009 Craig Thompson
* http://craigsworks.com
*
* Licensed under GPLv3
* http://www.opensource.org/licenses/gpl-3.0.html
*
* Launch  : February 2009
* Version : 1.3.1
* Released: February 5, 2009 - 11:04am
*/
(function ($) {
    function Simpletip(elem, conf) {
        var self = this; elem = jQuery(elem); var tooltip = jQuery(document.createElement('div')).addClass(conf.baseClass).addClass((conf.fixed) ? conf.fixedClass : '').addClass((conf.persistent) ? conf.persistentClass : '').html(conf.content).appendTo(elem); if (!conf.hidden) tooltip.show(); else tooltip.hide(); if (!conf.persistent) { elem.hover(function (event) { self.show(event) }, function () { self.hide() }); if (!conf.fixed) { elem.mousemove(function (event) { if (tooltip.css('display') !== 'none') self.updatePos(event); }); }; } else {
            elem.click(function (event) {
                if (event.target === elem.get(0)) {
                    if (tooltip.css('display') !== 'none') self.hide(); else
                        self.show();
                };
            }); jQuery(window).mousedown(function (event) { if (tooltip.css('display') !== 'none') { var check = (conf.focus) ? jQuery(event.target).parents('.tooltip').andSelf().filter(function () { return this === tooltip.get(0) }).length : 0; if (check === 0) self.hide(); }; });
        }; jQuery.extend(self, { getVersion: function () { return [1, 2, 0]; }, getParent: function () { return elem; }, getTooltip: function () { return tooltip; }, getPos: function () { return tooltip.offset(); }, setPos: function (posX, posY) { var elemPos = elem.offset(); if (typeof posX == 'string') posX = parseInt(posX) + elemPos.left; if (typeof posY == 'string') posY = parseInt(posY) + elemPos.top; tooltip.css({ left: posX, top: posY }); return self; }, show: function (event) { conf.onBeforeShow.call(self); self.updatePos((conf.fixed) ? null : event); switch (conf.showEffect) { case 'fade': tooltip.fadeIn(conf.showTime); break; case 'slide': tooltip.slideDown(conf.showTime, self.updatePos); break; case 'custom': conf.showCustom.call(tooltip, conf.showTime); break; default: case 'none': tooltip.show(); break; }; tooltip.addClass(conf.activeClass); conf.onShow.call(self); return self; }, hide: function () { conf.onBeforeHide.call(self); switch (conf.hideEffect) { case 'fade': tooltip.fadeOut(conf.hideTime); break; case 'slide': tooltip.slideUp(conf.hideTime); break; case 'custom': conf.hideCustom.call(tooltip, conf.hideTime); break; default: case 'none': tooltip.hide(); break; }; tooltip.removeClass(conf.activeClass); conf.onHide.call(self); return self; }, update: function (content) { tooltip.html(content); conf.content = content; return self; }, load: function (uri, data) { conf.beforeContentLoad.call(self); tooltip.load(uri, data, function () { conf.onContentLoad.call(self); }); return self; }, boundryCheck: function (posX, posY) { var newX = posX + tooltip.outerWidth(); var newY = posY + tooltip.outerHeight(); var windowWidth = jQuery(window).width() + jQuery(window).scrollLeft(); var windowHeight = jQuery(window).height() + jQuery(window).scrollTop(); return [(newX >= windowWidth), (newY >= windowHeight)]; }, updatePos: function (event) {
            var tooltipWidth = tooltip.outerWidth(); var tooltipHeight = tooltip.outerHeight(); if (!event && conf.fixed) {
                if (conf.position.constructor == Array) { posX = parseInt(conf.position[0]); posY = parseInt(conf.position[1]); } else if (jQuery(conf.position).attr('nodeType') === 1) { var offset = jQuery(conf.position).offset(); posX = offset.left; posY = offset.top; } else
                { var elemPos = elem.offset(); var elemWidth = elem.outerWidth(); var elemHeight = elem.outerHeight(); switch (conf.position) { case 'top': var posX = elemPos.left - (tooltipWidth / 2) + (elemWidth / 2); var posY = elemPos.top - tooltipHeight; break; case 'bottom': var posX = elemPos.left - (tooltipWidth / 2) + (elemWidth / 2); var posY = elemPos.top + elemHeight; break; case 'left': var posX = elemPos.left - tooltipWidth; var posY = elemPos.top - (tooltipHeight / 2) + (elemHeight / 2); break; case 'right': var posX = elemPos.left + elemWidth; var posY = elemPos.top - (tooltipHeight / 2) + (elemHeight / 2); break; default: case 'default': var posX = (elemWidth / 2) + elemPos.left + 20; var posY = elemPos.top; break; }; };
            } else
            { var posX = event.pageX; var posY = event.pageY; }; if (typeof conf.position != 'object') { posX = posX + conf.offset[0]; posY = posY + conf.offset[1]; if (conf.boundryCheck) { var overflow = self.boundryCheck(posX, posY); if (overflow[0]) posX = posX - (tooltipWidth / 2) - (2 * conf.offset[0]); if (overflow[1]) posY = posY - (tooltipHeight / 2) - (2 * conf.offset[1]); } } else
            { if (typeof conf.position[0] == "string") posX = String(posX); if (typeof conf.position[1] == "string") posY = String(posY); }; self.setPos(posX, posY); return self;
        } 
        });
    }; jQuery.fn.simpletip = function (conf) { var api = jQuery(this).eq(typeof conf == 'number' ? conf : 0).data("simpletip"); if (api) return api; var defaultConf = { content: 'A simple tooltip', persistent: false, focus: false, hidden: true, position: 'default', offset: [0, 0], boundryCheck: true, fixed: true, showEffect: 'fade', showTime: 150, showCustom: null, hideEffect: 'fade', hideTime: 150, hideCustom: null, baseClass: 'tooltip', activeClass: 'active', fixedClass: 'fixed', persistentClass: 'persistent', focusClass: 'focus', onBeforeShow: function () { }, onShow: function () { }, onBeforeHide: function () { }, onHide: function () { }, beforeContentLoad: function () { }, onContentLoad: function () { } }; jQuery.extend(defaultConf, conf); this.each(function () { var el = new Simpletip(jQuery(this), defaultConf); jQuery(this).data("simpletip", el); }); return this; };
})();

/*! http://mths.be/placeholder v2.0.7 by @mathias */
;(function(f,h,$){var a='placeholder' in h.createElement('input'),d='placeholder' in h.createElement('textarea'),i=$.fn,c=$.valHooks,k,j;if(a&&d){j=i.placeholder=function(){return this};j.input=j.textarea=true}else{j=i.placeholder=function(){var l=this;l.filter((a?'textarea':':input')+'[placeholder]').not('.placeholder').bind({'focus.placeholder':b,'blur.placeholder':e}).data('placeholder-enabled',true).trigger('blur.placeholder');return l};j.input=a;j.textarea=d;k={get:function(m){var l=$(m);return l.data('placeholder-enabled')&&l.hasClass('placeholder')?'':m.value},set:function(m,n){var l=$(m);if(!l.data('placeholder-enabled')){return m.value=n}if(n==''){m.value=n;if(m!=h.activeElement){e.call(m)}}else{if(l.hasClass('placeholder')){b.call(m,true,n)||(m.value=n)}else{m.value=n}}return l}};a||(c.input=k);d||(c.textarea=k);$(function(){$(h).delegate('form','submit.placeholder',function(){var l=$('.placeholder',this).each(b);setTimeout(function(){l.each(e)},10)})});$(f).bind('beforeunload.placeholder',function(){$('.placeholder').each(function(){this.value=''})})}function g(m){var l={},n=/^jQuery\d+$/;$.each(m.attributes,function(p,o){if(o.specified&&!n.test(o.name)){l[o.name]=o.value}});return l}function b(m,n){var l=this,o=$(l);if(l.value==o.attr('placeholder')&&o.hasClass('placeholder')){if(o.data('placeholder-password')){o=o.hide().next().show().attr('id',o.removeAttr('id').data('placeholder-id'));if(m===true){return o[0].value=n}o.focus()}else{l.value='';o.removeClass('placeholder');l==h.activeElement&&l.select()}}}function e(){var q,l=this,p=$(l),m=p,o=this.id;if(l.value==''){if(l.type=='password'){if(!p.data('placeholder-textinput')){try{q=p.clone().attr({type:'text'})}catch(n){q=$('<input>').attr($.extend(g(this),{type:'text'}))}q.removeAttr('name').data({'placeholder-password':true,'placeholder-id':o}).bind('focus.placeholder',b);p.data({'placeholder-textinput':q,'placeholder-id':o}).before(q)}p=p.removeAttr('id').hide().prev().attr('id',o).show()}p.addClass('placeholder');p[0].value=p.attr('placeholder')}else{p.removeClass('placeholder')}}}(this,document,jQuery));;

/*#region extend the Javascript String object */
String.prototype.format = function () {
    var args = arguments;
    return this.replace(/{(\d+)}/g, function (match, number) {
        return typeof args[number] != 'undefined'
      ? args[number]
      : match
        ;
    });
};

/*#endregion */



/*#region gears_init.js  */

// Copyright 2007, Google Inc.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
//  1. Redistributions of source code must retain the above copyright notice,
//     this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright notice,
//     this list of conditions and the following disclaimer in the documentation
//     and/or other materials provided with the distribution.
//  3. Neither the name of Google Inc. nor the names of its contributors may be
//     used to endorse or promote products derived from this software without
//     specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
// EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
// OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
// OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
// ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// Sets up google.gears.*, which is *the only* supported way to access Gears.
//
// Circumvent this file at your own risk!
//
// In the future, Gears may automatically define google.gears.* without this
// file. Gears may use these objects to transparently fix bugs and compatibility
// issues. Applications that use the code below will continue to work seamlessly
// when that happens.
(function () {
    // We are already defined. Hooray!
    if (window.google && google.gears) {
        return;
    }

    var factory = null;

    // Firefox
    if (typeof GearsFactory != 'undefined') {
        factory = new GearsFactory();
    } else {
        // IE
        try {
            factory = new ActiveXObject('Gears.Factory');
            // privateSetGlobalObject is only required and supported on IE Mobile on
            // WinCE.
            if (factory.getBuildInfo().indexOf('ie_mobile') != -1) {
                factory.privateSetGlobalObject(this);
            }
        } catch (e) {
            // Safari
            if ((typeof navigator.mimeTypes != 'undefined')
           && navigator.mimeTypes["application/x-googlegears"]) {
                factory = document.createElement("object");
                factory.style.display = "none";
                factory.width = 0;
                factory.height = 0;
                factory.type = "application/x-googlegears";
                document.documentElement.appendChild(factory);
            }
        }
    }

    // *Do not* define any objects if Gears is not installed. This mimics the
    // behavior of Gears defining the objects in the future.
    if (!factory) {
        return;
    }

    // Now set up the objects, being careful not to overwrite anything.
    //
    // Note: In Internet Explorer for Windows Mobile, you can't add properties to
    // the window object. However, global objects are automatically added as
    // properties of the window object in all browsers.
    if (!window.google) {
        google = {};
    }

    if (!google.gears) {
        google.gears = { factory: factory };
    }
})();

/*#endregion */



/*#region   menu-behaviors.js   */
var menuStuck = 0;
$(document).ready(function () {


    $('div.menu').click(function () {
        if (menuStuck != 2) {
            menuStuck = 1;
        } else {
            menuStuck = 0;
        }
    });
    $('.menu-items').click(function () {
        menuStuck = 1;
    });

    function resetHomeMenu() {
        if ($("div").hasClass("info")) {
            $("div.info").css("display", "none");
            $("div.button").css("background-position", "0 -447px");
            $("div.button").css("z-index", "0");
            $("div.button").css("color", "#000");
            $("div.button").css("text-decoration", "none");
        }
    }

    $("div.button").click(function () {
        if (menuStuck == 1) {
            resetHomeMenu();
        }
        $hovered = $(this)
        var carInfo = $hovered.attr("class").split('-');
        $("div#right_bigbox_box > div").fadeOut("fast");
        $("div." + carInfo[0]).fadeIn();
        $hovered.fadeIn();
        $hovered.css("background-position", "0 -388px");
        $hovered.css("z-index", "100");
        $hovered.css("color", "#E31736");
        $hovered.css("font-weight", "bold");
        $hovered.css("text-decoration", "underline");
        $("div.menu").css("z-index", "200");

    });

    $("div.button").mouseover(function () {
        if (menuStuck == 0) {
            $hovered = $(this);
            resetHomeMenu();
            var carInfo = $hovered.attr("class").split('-');
            $("div#right_bigbox_box > div").fadeOut("fast");
            $("div." + carInfo[0]).fadeIn();
            $hovered.fadeIn();
            $hovered.css("background-position", "0 -388px");
            $hovered.css("z-index", "100");
            $hovered.css("color", "#E31736");
            $hovered.css("font-weight", "bold");
            $hovered.css("text-decoration", "underline");
            $("div.menu").css("z-index", "200");
        }
    });

    $("div.menu").hover(
	    function () {
	    },
		function () {
		    if (menuStuck == 0) {
		        $("div.content > div").fadeOut("fast");
		        $("div.button").css("background-position", "0 -447px");
		        $("div.button").css("z-index", "0");
		        $("div.button").css("color", "#000");
		        $("div.menu").css("z-index", "0");
		        if (typeof ($hovered) == undefined) {
		            $hovered.css("text-decoration", "none");
		        }
		        $("div#right_bigbox_box > div").fadeIn();
		    }
		}
	);

});


function createCookie(name, value, days) {
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        var expires = "; expires=" + date.toGMTString();
    }
    else var expires = "";
    document.cookie = name + "=" + value + expires + "; path=/";
}

function readCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
}

function eraseCookie(name) {
    createCookie(name, "", -1);
}
/*#endregion */

/*#region ClearableDropDownList.ascx --------------------*/

function ClearableDropDownListBaseOnChange(dropDownList) {
    dropDownList.style.display = 'none';
    if (dropDownList.options[dropDownList.selectedIndex].value != '') {
        $(dropDownList).nextAll('input[type=hidden]').val(dropDownList.options[dropDownList.selectedIndex].value);
    }

    $(dropDownList).next().css("display", "block");
    // Strip the count portion from the read-only "selected" label once an item has been selected except on Sleeps and Slideouts
    if ($(dropDownList).attr('id').match(/(cddlSleep|cddlSlideOut)/)) {
        $(dropDownList).next().contents().siblings(".at_selectedText").text(dropDownList.options[dropDownList.selectedIndex].text);
    } else {
        $(dropDownList).next().contents().siblings(".at_selectedText").text(dropDownList.options[dropDownList.selectedIndex].value);
    }
}

function ClearableDropDownListBaseOnClose(dropDownList) {

   // if (jQuery(dropDownList).prev().attr("disabled") == "") {
        dropDownList.style.display = 'none';
        $(dropDownList).nextAll('input[type=hidden]').val('');
        $(dropDownList).prev().css("display", "block");
        $(dropDownList).prev().attr("selectedIndex", 0);
        return true;
    //} else
    //    return false;
}

function ClearableDropDownList(containerId) {
    this.Container = document.getElementById(containerId);
    this.DropDownList = document.getElementById(containerId).children[0];
    this.SelectedDiv = document.getElementById(containerId).children[1];
    this.NotSelectedDiv = document.getElementById(containerId).children[2];
}

ClearableDropDownList.prototype.show = function () {
    this.Container.style.display = 'block';    
}

ClearableDropDownList.prototype.hide = function () {
    this.Container.style.display = 'none';
}

ClearableDropDownList.prototype.setState = function (state) {
    this.DropDownList.disabled = state;
    if (state == "") {
        //this.SelectedDiv.childNodes[3].style.visibility = "visible";
        jQuery(this.SelectedDiv).children(".at_clearBox").children(".at_clearButton").css("visibility", "hidden");
    }
    else {
        //this.SelectedDiv.childNodes[3].style.visibility = "hidden";
        jQuery(this.SelectedDiv).children(".at_clearBox").children(".at_clearButton").css("visibility", "hidden");
    }
}

ClearableDropDownList.prototype.disable = function () {
    this.NotSelectedDiv.style.display = 'block';
    this.DropDownList.style.display = 'none';
    this.SelectedDiv.style.display = 'none';
}

ClearableDropDownList.prototype.enableDropDown = function () {
    this.SelectedDiv.style.display = 'none';
    this.DropDownList.style.display = 'block';
    this.NotSelectedDiv.style.display = 'none';
}

ClearableDropDownList.prototype.enableInfo = function (selectedText) {
    this.SelectedDiv.style.display = 'block';
    this.DropDownList.style.display = 'none';
    this.NotSelectedDiv.style.display = 'none';

    if (String.IsNullOrEmpty(selectedText)) {
        return;
    }

    var span = $(this.DropDownList).next().contents().siblings(".at_selectedText");

    if ($(this.DropDownList).attr('id').match( /(cddlSleep|cddlSlideOut)/ )) {
        span.text(this.DropDownList.options[this.DropDownList.selectedIndex].text);
    } else {
        span.text(selectedText);
    }


    //Trim long strings to fit in the available space (space not used by the clear button).
    
    var outerDiv = $(this.SelectedDiv);
    var outerDivHeight = outerDiv.height();
    var outerDivWidth = outerDiv.innerWidth();
    var clearDiv = span.next();

    //If the text is too long either the span containing the text or the div containing the clear button will wrap or, in case neither wraps,
    // the sum of their widths should be greater then the width of the containing div.
    if (span.height() > outerDivHeight || clearDiv.height() > outerDivHeight || span.outerWidth() + clearDiv.outerWidth() >= outerDivWidth) {
        span.text(selectedText.concat('...'));
        while ((span.height() > outerDivHeight || clearDiv.height() > outerDivHeight || span.outerWidth() + clearDiv.outerWidth() >= outerDivWidth) && selectedText.length > 3) {
            selectedText = selectedText.substr(0, selectedText.length - 4).concat('...');
            span.text(selectedText);
        }
    }
}

//Currently only able to handle items of type RefinementItem. i.e. with properties Display & Value
ClearableDropDownList.prototype.populate = function (items, removeFirstItem, selected, topRefinement) {
    this.clearOptions(removeFirstItem);
    this.loadOptions(items, selected, topRefinement);
}

ClearableDropDownList.prototype.clearOptions = function (removeFirstItem) {
    if (typeof (removeFirstItem) != 'undefined' && removeFirstItem != null && removeFirstItem == false) {
        this.DropDownList.options.length = 1;
    } else {
        this.DropDownList.options.length = 0;
    }

    var currentOptGroups = this.DropDownList.getElementsByTagName("optgroup");
    for (var currentOptGroupIndex = (currentOptGroups.length - 1) ; currentOptGroupIndex >= 0; currentOptGroupIndex--) {
        this.DropDownList.removeChild(currentOptGroups[currentOptGroupIndex]);
    }
}

ClearableDropDownList.prototype.loadOptions = function (items, selected, topRefinement) {
    if (typeof (items) != 'undefined' && items != null && items.length > 0) {
        var checkTopItems = false;
        if (typeof (topRefinement) != 'undefined' && topRefinement != null && topRefinement.Items.length > 0) {
            checkTopItems = items.length >= topRefinement.MinItems;
        }

        var optionsData = this.getOptionsData(items, selected, checkTopItems, topRefinement);

        if (checkTopItems) {
            this.loadWithGroups(optionsData, topRefinement);
        } else {
            this.loadSingleList(optionsData);
        }
    }
}

ClearableDropDownList.prototype.loadSingleList = function (optionsData) {
    for (var optionIndex = 0; optionIndex < optionsData.options.length; optionIndex++) {
        this.DropDownList.options.add(optionsData.options[optionIndex]);
    }
}

ClearableDropDownList.prototype.loadGroupedList = function (options, optionLabel) {
    var topOptionGroup = document.createElement('optgroup');
    topOptionGroup.label = optionLabel;
    for (var selectedOptionIndex = 0; selectedOptionIndex < options.length; selectedOptionIndex++) {
        topOptionGroup.appendChild(options[selectedOptionIndex]);
    }
    this.DropDownList.appendChild(topOptionGroup);
}

ClearableDropDownList.prototype.loadWithGroups = function (optionsData, topRefinement) {
    if (optionsData.selectedOptions.length > 0 && typeof (topRefinement) != 'undefined' && topRefinement != null && topRefinement.Items.length > 0) {
        this.loadGroupedList(optionsData.selectedOptions, topRefinement.TopOptionLabel);
        this.loadGroupedList(optionsData.options, topRefinement.AllOptionLabel);
    } else {
        this.loadSingleList(optionsData);
    }
}

ClearableDropDownList.prototype.getOptionsData = function (items, selected, checkTopItems, topRefinement) {
    var options = [];
    var selectedOptions = [];
    var isSelected;

    for (var itemIndex = 0; itemIndex < items.length; itemIndex++) {
        isSelected = false;
        if (items[itemIndex].Value == selected)
            isSelected = true;

        var itemValue = items[itemIndex].Value;
        var itemDisplay = items[itemIndex].Display;
        var newOption = new Option(itemDisplay, itemValue, false, isSelected);

        if (checkTopItems && topRefinement.Items.indexOf(itemValue) >= 0) {
            selectedOptions.push(new Option(itemDisplay, itemValue, false, false));
        }

        options.push(newOption);
    }

    return {
        options: options,
        selectedOptions: selectedOptions
    };
}

ClearableDropDownList.prototype.getDropDownList = function () {
    return this.DropDownList;
}

ClearableDropDownList.prototype.value = function () {
    return (typeof(this.DropDownList.value) == "undefined" ? null : this.DropDownList.value);
}

ClearableDropDownList.prototype.setValue = function (value) {
    this.DropDownList.value = value;
}

function SetClearableDropDownList(cddl, list, selectedItem, enableList, topRefinement) {

    if (cddl != null) {
        cddl.populate(list, false, selectedItem, topRefinement);

        if (!enableList)
            cddl.disable();
        else if (selectedItem == null)
            cddl.enableDropDown();
        else
            cddl.enableInfo(selectedItem);
    }
}

function GetListValue(cddl) {
    return (cddl != null && !String.IsNullOrEmpty(cddl.value()) ? cddl.value() : null);
}


function ClearList(cddl) {

    cddl.setValue('');
    RefinementsChanged(null, cddl.Container, '');
}

function DisableOnNull(cddl, value) {
    
    if (cddl != null && value == null)
        cddl.setState("disabled");
}

function SetSelectedValue(cddl, selectedValue) {
    if (cddl != null && selectedValue != "" && selectedValue != null) {
        cddl.setValue(selectedValue);
        ClearableDropDownListBaseOnChange(cddl.DropDownList);
    }
    
}


/*#endregion */


/*#region String Extensions-----------------------*/

String.prototype.trim = function () {
    return this.replace(/^\s+|\s+$/g, "");
}

String.IsNullOrEmpty = function (value) {
    var isNullOrEmpty = true;
    if (value) {
        value = "" + value;
        if (value.trim().length > 0)
            isNullOrEmpty = false;

    }
    return isNullOrEmpty;
}

/*#endregion*/


/*#region SearchBox--------------------*/

// Keep a reference to the postal code and proximity labels in the header control.
// (assigned in header.ascx)
var postalCodeHeader = null;
var proximityHeader = null;
var hfPostalCode = null;

function UpdateHeaderLocation(userSearchLocation, seoSearchLocation, proximity) {

    if (postalCodeHeader != null) {
        postalCodeHeader.title = (!String.IsNullOrEmpty(userSearchLocation) ? userSearchLocation : '');
        postalCodeHeader.innerHTML = (!String.IsNullOrEmpty(seoSearchLocation) ? seoSearchLocation : (postalCodeHeader.title.length <= 25 ? postalCodeHeader.title : postalCodeHeader.title.substring(0, 25) + '...'));
    }

    if (hfPostalCode != null)
        hfPostalCode.value = (!String.IsNullOrEmpty(userSearchLocation) ? userSearchLocation : '');

    // Only show the proximity field if the postal code is filled.
    if (proximityHeader != null) {
        if (!String.IsNullOrEmpty(userSearchLocation)) {
            if (proximity == "-1")
                proximityHeader.innerHTML = "National";
            else if (proximity == "-2")
                proximityHeader.innerHTML = "Provincial";
            else
                proximityHeader.innerHTML = '+' + proximity + ' km';
        } else {
            proximityListItem.style.display = "none";
        }
    }
}

function FormatPostalCode(postalCode) {

    // If we call this function it is assumed the postal code is valid already (UpdateHeaderLocation function called "OnSuccess" only).
    // Grab the raw postal code and make it UPPERCASE.
    var raw = postalCode.replace('-', '').replace(' ', '').toUpperCase();

    if (raw.length == 6)
        return raw.substring(0, 3) + ' ' + raw.substring(3);
    else
        return '';
}

// key by key postal code validation
function realTimePostalCodeValidation(mytextbox) {

    var currentPostalCodeValue;
    currentPostalCodeValue = mytextbox.value.replace(" ", "");
    currentPostalCodeValue = currentPostalCodeValue.replace("-", "");

    if (currentPostalCodeValue.length >= 6) // If textbox MaxLenght is properly set, cannot be longer than 7...
    {
        checkPostalCode(mytextbox);
    }
}



var textIn = null;      // Holds the original value on focus in of a textbox.
var textOut = null;     // Holds the textbox value as the user focuses out of a textbox.


// Change the font color of an input element to #000
function ApplyEnteredTextStyle(ctrl) {
    var element = jQuery(ctrl);

    if (element.is("input")) {
        element.css("color", "#000");
    }
}

// Set the cursor position to end of text field when on focus
function setCursorToEndOnFocus(elem) {
    var elemLen = elem.value.length;
    // For IE Only
    if (document.selection) {
        // Set focus
        elem.focus();
        // Use IE Ranges
        var oSel = document.selection.createRange();
        // Reset position to 0 & then set at end
        oSel.moveStart('character', -elemLen);
        oSel.moveStart('character', elemLen);
        oSel.moveEnd('character', 0);
        oSel.select();
    }
    else if (elem.selectionStart || elem.selectionStart == '0') {
        // Firefox/Chrome
        elem.selectionStart = elemLen;
        elem.selectionEnd = elemLen;
        elem.focus();
    }     
}

// Store the original value as the user focuses into a textbox.
function TextFocusInNumber(ctrl) {
    textIn = ctrl.numberFormatter.value();
}

// Compare the original "textIn" value to the value entered as we step out of a textbox.
// If they are different, we will call the searchbox "RefinementsChanged()" function
// to execute and refresh the result count according to the updated criteria.
function TextFocusOutNumber(ctrl) {
    textOut = ctrl.numberFormatter.value();
    
    if (textIn != textOut) {
        RefinementsChanged(null, ctrl, textOut);
    }
}

// Store the original value as the user focuses into a textbox.
function TextFocusInString(ctrl, watermarkText) {
    if (ctrl.value == watermarkText)
        ctrl.value = "";
    textIn = ctrl.value;
}

// Compare the original "textIn" value to the value entered as we step out of a textbox.
// If they are different, we will call the searchbox "RefinementsChanged()" function
// to execute and refresh the result count according to the updated criteria.
function TextFocusOutString(ctrl, watermarkText) {
    if(ctrl.value == watermarkText)
        ctrl.value = "";
    textOut = ctrl.value;

    if (textIn != textOut) {
        RefinementsChanged(null, ctrl, textOut);
        textIn = textOut;
    }
}


// Store the original value as the user focuses into a textbox.
function TextFocusInPostalCode(ctrl) {
    textIn = ctrl.value;

    $('#lblSearchLocationContainer').children().css("display", "none");
    $('#lblSearchLocationValidationContainer').hide();
}

// called from webpage. First we check the postal code then we allow validation to be seen. 
// if there is no value in the textbox we do not allow the validation to be seen
function TextFocusOutPostalCode(ctrl){ 
    checkPostalCode(ctrl);

    if (ctrl.value == "") {
        jQuery(ctrl).siblings(".at_validators").css("display", "none");

        $('#lblSearchLocationContainer').children().css("display", "inline");
    } else {
        jQuery(ctrl).siblings(".at_validators").css("display", "block");
    }
}


// Compare the original "textIn" value to the value entered as we step out of a textbox.
// If they are different, we will call the searchbox "RefinementsChanged()" function
// to execute and refresh the result count according to the updated criteria.
function checkPostalCode(ctrl) {
    textOut = ctrl.value;

    var regex = /^[A-Za-z][0-9][A-Za-z](\ |-)?[0-9*][A-Za-z*][0-9*]$/;
    var strippedTextout = textOut;
    if (regex.test(textOut)) {
        strippedTextout = textOut.replace(" ", "");
        strippedTextout = strippedTextout.replace("-", "");
    }

    var strippedTextin = textIn;
    if (regex.test(textIn)) {
        strippedTextin = textIn.replace(" ", "");
        strippedTextin = strippedTextin.replace("-", "");
    }

    if (strippedTextout != strippedTextin) {
        var customMessage = document.getElementById(ctrl.id.replace("textBox", "customMessage"));
        if (customMessage) {
            customMessage.style.visibility = "hidden";
        }
        RefinementsChanged(null, ctrl, textOut);
        textIn = textOut;
    }
}

// Without this, a watermarked AutoTextBox would return the watermark as the value when control is empty.
function GetAutoTextBoxValue(txtClientID, watermarkText) {
    //if (document.getElementById(txtClientID) != null)
    var objTextbox = document.getElementById(txtClientID);
    if (objTextbox != null) {
        if (objTextbox.value == watermarkText)
            return "";
        else
            return objTextbox.value;
    }
    else
        return null;
}

// Without this, a watermarked AutoTextBox would lose its watermark if setting the text value client-side.
function SetAutoTextBoxValue(txtClientID, value, watermarkText) {
    var objTextbox = document.getElementById(txtClientID);
    if (objTextbox != null) {
        var browser = navigator.appName;
        if (browser == "Microsoft Internet Explorer" && value == "")
            jQuery("#" + txtClientID).val(watermarkText).addClass('at_fontGray');
        else
            objTextbox.AjaxControlToolkitTextBoxWrapper.set_Value(value);   // Helps keep the watermark intact while clearing the textbox.
    }
}

// Private/Dealer checkboxes (and maybe more in the future) cannot be both false, ever. This prevents that from happening.
function CheckboxKeepAlive2Box(chkChanged, chkKeepAliveID) {
    if (chkChanged.checked == false)
        document.getElementById(chkKeepAliveID).checked = true;
    RefinementsChanged();
}

// New/Used checkboxes (and maybe more in the future) cannot be both false, ever. This prevents that from happening.
function CheckboxKeepAlive(chkChanged, newCB, usedCB, cpoCB, mode) {

    function isCheckedOrNotNull(id) {
        var chkBox = document.getElementById(id);
        if (chkBox != null) {
            return chkBox.checked;
        } else {
        return false;
         }
    }

    function changeCheck(id, chk) {
        var chkBox = document.getElementById(id);
        chkBox.checked = chk;
        dl_trackSearchUpdates(chkBox, chk + "");
    }

    // if new is unchecked and CPO is unchecked, used will be checked
    if (chkChanged.checked == false && mode == 'New') {
        if (!isCheckedOrNotNull(cpoCB)) {
            changeCheck(usedCB, true)
        }
    }
    // if used is unchecked and cpo is not checked, new will be checked
    if (chkChanged.checked == false && mode == 'Used') {
        if (!isCheckedOrNotNull(cpoCB)) 
        {
            changeCheck(newCB, true);
        }
    }
    // if CPO is unchecked and new is not checked, used will be checked 
    if (chkChanged.checked == false && mode == 'CPO') {
        if (!isCheckedOrNotNull(newCB)) {
            changeCheck(usedCB, true);
        }
    }
    RefinementsChanged(null, chkChanged, chkChanged.checked + "");
}

function TrackDistanceChange(newValue) {
    if (newValue == "-1")
        newValue = "National";

    if (newValue == "-2")
        newValue = "Provincial";

    wa_trackDistanceChange(newValue);

    dl_trackSearchUpdatesByName('proximity', newValue);
}

function ChangeSelectedAttribute(obj) {
    var optionSelector = '[value="' + $(obj).val() + '"]';
    $('[selected]', obj).removeAttr('selected');
    $(optionSelector, obj).attr('selected', 'selected');
}

function TrackDisplayPageSize(objectId) {
    TriggerSpecialValueChange(objectId, function (oldValue, newValue) {
        wa_trackDisplayPageSize(oldValue + '|' + newValue);
        if (oldValue !== newValue)
            dl_trackPageSizeSelectionChange(oldValue + '|' + newValue);
    });
}

function TrackSortOrder(objectId) {
    eraseCookie("SortOrderChangeKey");
    TriggerSpecialTextChange(objectId, function (oldText, newText) {
        createCookie("SortOrderChangeKey", oldText + '|' + newText, 1);

        if (typeof oldText != "undefined" && typeof newText != "undefined" && oldText != newText) {
            dl_trackSortSelectionChange(oldText + '|' + newText);
            wa_trackSortSelectionChange(oldText + '|' + newText);
        }
    });
}

/*#endregion */

/*#region Get Url Parameters by name--------------------*/
function getParameterByName(name) {
    var match = RegExp('[?&]' + name + '=([^&]*)')
                    .exec(window.location.search);

    return match && decodeURIComponent(match[1].replace(/\+/g, ' '));

}
/*#endregion */

Array.prototype.clean = function (to_delete) {
    var a;
    for (a = 0; a < this.length; a++) {
        if (this[a] == to_delete) {
            this.splice(a, 1);
            a--;
        }
    }
    return this;
};

/*#region Utility functions --------------------*/

// cookie functions
function createCookieWithDomain(name, value, days, domain) {
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        var expires = "; expires=" + date.toGMTString();
    }
    else var expires = "";
    document.cookie = name + "=" + value + expires + ";domain=." + domain + "; path=/";
}

function eraseCookieWithDomain(name, domain) {
    createCookieWithDomain(name, "", -1, domain);
}

// function handling TextBox MaxLength in Multiline-Mode
function checkTextAreaMaxLength(textBox, e, mLen) {
    var maxLength = parseInt(mLen);

    if (!checkSpecialKeys(e)) {
        if (textBox.value.length > maxLength -1) {
            if (window.event)//IE
                e.returnValue = false;
            else//Firefox & chrome
                e.preventDefault();
        }
    }
}

function checkSpecialKeys(e) {
    if (e.keyCode != 8 && e.keyCode != 46 && e.keyCode != 37 && e.keyCode != 38 && e.keyCode != 39 && e.keyCode != 40)
        return false;
    else
        return true;
}

// function parsing querystring parameters in javascript
function getParameterByName(name) {
    name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
    var regexS = "[\\?&]" + name + "=([^&#]*)";
    var regex = new RegExp(regexS);
    var results = regex.exec(window.location.search);
    if (results == null)
        return "";
    else
        return decodeURIComponent(results[1].replace(/\+/g, " "));
}
/*#endregion */

/*#region Start Owner Reviews functions ------------*/
// set up the custom owner reviews filter jQuery plugin
// the jQuery plugin controls the behaviors of the owner reviews by years filter
// see ReviewByYearFilter user control

function setupOwnerReviewsFilterPlugin() {
   
    (function ($) {
           $.fn.reviewsfilter = function (options) {

            if (!this.length) {
                if (options && options.debug && window.console) {
                    console.warn("Nothing selected, can't set up owner reviews filter, return nothing");
                }
                return;
            }

            if (!(options.maxYearId && options.minYearId && options.showResultButtonId && options.make && options.model))
                return;

            var settings = $.extend({
                url: "/WebServices/Reviews.svc/GetReviewsByYearsRefinements",
                type: "POST",
                buttonDisabledStyle: "disabled",
                success: successEventHandler
            }, options);


            var ddlMinYear = $("#" + settings.minYearId),
                ddlMaxYear = $("#" + settings.maxYearId),
                hlShowResults = $("#" + settings.showResultButtonId);



            function yearChangeEventHandler(event) {
                hlShowResults.addClass(settings.buttonDisabledStyle).on("click.reviewsfilter",
                  function (event) {
                      event.preventDefault();
                  });
                getRefinements();
            }

            function init() {
                ddlMinYear.on("change", yearChangeEventHandler);
                ddlMaxYear.on("change", yearChangeEventHandler);
                getRefinements();
            }

            function successEventHandler(data) {
                var minYearVal = ddlMinYear.val();
                var maxYearVal = ddlMaxYear.val();

                ddlMinYear.children("option").slice(1).remove();
                ddlMaxYear.children("option").slice(1).remove();

                $.each(data.FromYears, function (index, item) {
                    ddlMinYear.append($("<option></option>").attr("value", item.Value).text(item.Display));
                });
                ddlMinYear.val(minYearVal);

                $.each(data.ToYears, function (index, item) {
                    ddlMaxYear.append($("<option></option>").attr("value", item.Value).text(item.Display));
                });
                ddlMaxYear.val(maxYearVal);

                hlShowResults.attr("href", data.ResultPageUrl).removeClass(settings.buttonDisabledStyle).off("click.reviewsfilter");
            }

            function GetSearchOptions() {
                var searchOptions = new Object();
                var searchOption = new Object();
                searchOptions.Make = settings.make;
                searchOptions.Model = settings.model;
                searchOptions.MinYear = ddlMinYear.val();
                searchOptions.MaxYear = ddlMaxYear.val();
                searchOption.searchOption = searchOptions;
                return JSON.stringify(searchOption);
            }

            function getRefinements() {
                $.ajax({
                    url: settings.url,
                    contentType: "application/json; charset=UTF-8",
                    data: GetSearchOptions(),
                    dataType: "json",
                    cache: false,
                    type: settings.type
                }).done(function (data, textStatus, jqXhr) {
                    settings.success(data.d);
                });
            }

            init();

            return this;
        };
    })(jQuery);
}
/*#endregion */

/*#region BodyTypeIcon */
// Options for body type icon
function BodyTypeIconOptions() {
    this.key;
    this.iconText;
    this.iconImageUrl;
    this.iconHighlightImageUrl;
    this.containerControlID;
    this.imageControlID;
    this.labelControlID;
}

// Body type icon constructor
function BodyTypeIcon(options) {
    var _self = this;

    // Set options for less typing
    this.options = options;
    this.key = this.options.key;
    this.iconText = this.options.iconText;
    this.iconImageUrl = this.options.iconImageUrl;
    this.iconHighlightImageUrl = this.options.iconHighlightImageUrl;
    this.containerControlID = "#" + this.options.containerControlID;
    this.imageControlID = "#" + this.options.imageControlID;
    this.labelControlID = "#" + this.options.labelControlID;
    this.allContainers = "[group='icon-container']";
    this.allImages = "[group='icon-image']";
    this.allLabels = "[group='icon-label']";

    this.Init = function () {
        jQuery(document).ready(function () {
            $(_self.containerControlID).mouseenter(function ()
            {
                //$(_self.imageControlID).attr("src", _self.iconHighlightImageUrl);
            }).mouseleave(function () {
                if ($(_self.containerControlID).attr("is-clicked") == "false")
                {
                    $(_self.imageControlID).attr("src", _self.iconImageUrl);
                }
            }).click(function () {
                ClickBodyTypeIcon(_self.key);
            });
        });
    };
}

// Unclick all body type icons
function UnclickAllBodyTypeIcons() {
    var allContainers = "[group='icon-container']";
    var allImages = "[group='icon-image']";
    $(allContainers).attr("is-clicked", "false");
    $(allImages).each(function (index, value) {
        $("#" + this.id).attr("src", $("#" + this.id).attr("default-src"));
    });
    $(allContainers).removeClass("activeIcon");
}

// Click body type icon by key
function ClickBodyTypeIcon(key) {
    UnclickAllBodyTypeIcons();

    var container = "[icon-container-key='" + key + "']";
    var image = "[icon-image-key='" + key + "']";
    $(container).attr("is-clicked", "true");
    $(image).attr("src", $(image).attr("highlight-src"));
    $(container).addClass("activeIcon");
}
/*#endregion*/


/*#region expandable mislist banner code*/

    // immediatly opens the banner
    function openButton(myButton) {
        thebanner = $(myButton).closest(".expandableResultMidList");
        var delay = 0;
        //sets the time for the animation to start
        $(thebanner).data("openQueueTime", $.now() + delay);
        //resets the time for any open animation triggers
        $(thebanner).data("closeQueueTime", 0);

        //calls open function
        openBanner(thebanner, delay);
    }

// immediatly closes the banner
    function closeButton(myButton) {

        thebanner = $(myButton).closest(".expandableResultMidList");
        var delay = 0;
        //prevents from banner from opening immediatly after close
        $(thebanner).data("preventOpen", true);
        //sets the time for the animation to start
        $(thebanner).data("openQueueTime", $.now() + delay);
        //resets the time for any close animation triggers
        $(thebanner).data("closeQueueTime", 0);

        //calls close function
        closeBanner(thebanner, delay);
    }

    // opens the banner
    function openBanner(theBanner, delay) {
        //animation duration in milliseconds
        var animationDuration = 500;
        if ($(theBanner).find("iframe") != null) {
            setTimeout(function () {
                if (($(theBanner).data("openQueueTime") <= $.now() && $(theBanner).data("mouseInBanner") == true) || delay == 0) {

                    $(theBanner).data("openQueueTime", 0);
                    $(theBanner).find("iframe").contents().find("#ATsmallimage").fadeOut();
                    $(theBanner).find("iframe").contents().find("#ATlargeimage").fadeIn();
                    $(theBanner).find(".openButton").hide();
                    $(theBanner).find("iframe").delay(200).animate({
                        //banner opened Height
                        height: '250px'
                    }, animationDuration, function () {
                        //shows the close hotspot
                        $(theBanner).find(".closeButton").show();

                        $(theBanner).data("closeQueueTime", 0);
                        $(theBanner).data("openQueueTime", 1);
                        if ($(theBanner).data("triggerGA") == true) {
                            // put ga tag cose here
                            var bannerID = $(theBanner).attr("id").replace(/_/g, " ");

                            wa_trackEvent("LocalEdge", "Banner Expanded", bannerID);
                            $(theBanner).data("triggerGA", false);
                        }
                        
                    });

                }
            }, delay, theBanner);
        }
    }

    // closes the banner
    function closeBanner(theBanner, delay) {
        //animation duration in milliseconds
        var animationDuration = 500;
        setTimeout(function () {

            if (($(theBanner).data("closeQueueTime") <= $.now() && $(theBanner).data("mouseInBanner") == false) || delay == 0) {
                $(theBanner).data("closeQueueTime", 0);
                $(theBanner).find(".closeButton").hide();

                $(theBanner).find("iframe").animate({
                    //banner closed Height
                    height: '100px'
                }, animationDuration, function () {
                    $(theBanner).find("iframe").contents().find("#ATsmallimage").show();
                    $(theBanner).find("iframe").contents().find("#ATlargeimage").fadeOut();

                    $(theBanner).find(".openButton").show();
                });
                $(theBanner).data("closeQueueTime", 1);
                $(theBanner).data("openQueueTime", 0);
            }
        }, delay, theBanner);

    }



 function expandablebanners(){

                                                       //Result midlist banner code
                                                       //
                                                       //and element with the class "expandableResultMidList" will be converted into an expandable banner given there is an iframe in it.


     // gets the amount of expandable banners on the page
     var expandableBannerCount = $(".expandableResultMidList").size();

// triggers when the mouse moves on the banner
$(".expandableResultMidList").mouseover(function () {
 
    // animation delay

    if ($("#results").hasClass("localEdge3"))
    {
        var delay = 250;
    }
    else
    {
        var delay = 1000;
    }
    

    //prevents multiple mouseover actions from triggering
    if ($(this).data("mouseInBanner") != true && $(this).height() >=100) {
        $(this).data("mouseInBanner", true);


        if ($(this).data("preventOpen") == null) {
            // this makes sure a call to google analytics is triggered if the banner opens
            $(this).data("triggerGA", true);
            //Adds a close button to the banner
            $(this).prepend('<div class="closeButton" onclick="closeButton(this)" style="display:none"></div>');
            //Adds an open button to the banner
            $(this).prepend('<div class="openButton" onclick="openButton(this)" style="display:block"></div>');
            //use to prevent the banner from opening in the case that the user clicks close but lingers the most on the ad
            $(this).data("preventOpen", false);
        }

        if ($(this).data("preventOpen") == true) {
            $(this).data("preventOpen", false);
        } else {
            $(this).data("openQueueTime", $.now() + delay);
            $(this).data("closeQueueTime", 0);
            openBanner(this, delay);
        }

        //console.log('onmousover: openQueuetime: ' + $(this).data("openQueueTime") + " closeQueueTime: " + $(this).data("closeQueueTime") + " preventOpen: " + $(this).data("preventOpen") + "mouseInBanner: " + $(this).data("mouseInBanner"));
    }

});

// triggers when the mouse moves off the banner
$(".expandableResultMidList").mouseleave(function () {
    // animation delay
    var delay = 2000;
    if ($(this).data("mouseInBanner") != false && $(this).find("iframe").contents().find("#bannerURL").attr('class') != "startExpanded" && $(this).height() >= 100) {
        $(this).data("mouseInBanner", false);

        $(this).data("openQueueTime", 0);
        $(this).data("closeQueueTime", $.now() + delay);
        closeBanner(this, delay);
        //console.log('onmousout: openQueuetime: ' + $(this).data("openQueueTime") + " closeQueueTime: " + $(this).data("closeQueueTime") + " preventOpen: " + $(this).data("preventOpen") + "mouseInBanner: " + $(this).data("mouseInBanner"));
    }
});
                                                       

}


/*#endregion*/

/*#region Function to Hide all landing items with same class */
function toggle_visibility(id) {
    var e = document.getElementById(id);
    if (e.style.display == 'block') {
        e.style.display = 'none';
    }
    else {
        e.style.display = 'block';
    }
}

function ShowHiddentText(divHiddenTextId, showGroup) {
    var allElements = document.getElementsByTagName("*");
    for (var i = 0; i < allElements.length; i++) {
        if ((allElements[i].getAttribute('showgroup') != null) && (allElements[i].getAttribute('showgroup') == showGroup)) {
            allElements[i].style.display = 'none';
        }
    }
    document.getElementById(divHiddenTextId).style.display = 'block';
}

/*#endregion*/


/*#region iPad functions ---------- */

var isIPadBrowser = navigator.userAgent != null && navigator.userAgent.toLowerCase().indexOf('ipad') >= 0;

var ipadOrientation = Math.abs(window.orientation) == 90 ? 'landscape' : 'portrait';

/* Set available viewport height = height - browswer chrome height (of 97px)
    Used in doOnOrientationChange_Modal and openColorboxModal functions
*/
var availHeightLand = 768 - 97;
var availHeightPort = 1024 - 97;

/*#region  Orientation change for colorbox modals */
function doOnOrientationChange_Modal(modalWidth, modalHeight)
{
    // Get current orientation
    ipadOrientation = Math.abs(window.orientation) == 90 ? 'landscape' : 'portrait';

    // Reposition modal
    if (ipadOrientation.toString() == 'portrait')
    {
        adjModalTop = Math.round($(document).scrollTop() + (((availHeightPort - modalHeight) / 0.774) / 2) + 75.078);   // 75.078 = 97px browser chrome height, scaled by 0.774 for portrait mode
    }
    else
    {
        adjModalTop = $('#colorbox').position().top + 97;   // Push modal down by 97px to accomodate for 97px browser chrome
    }

    $('body').css({ 'position': 'static' });

    $('body').scrollTop(0);

    /* Adjust modal position on orientation change in relation to modal type, document body & iPad keyboard state */
    // Reposition postalCodeColorbox modal and dropdown suggestion list when keyboard is open 
    if ($('#colorbox.postalCodeColorbox input[type="text"]:focus').length != 0)  
    {
        // Reposition the colorbox now that keyboard is open & orientation has changed
        $('#colorbox.postalCodeColorbox').animate({ top: '0' }, 300).css({ 'position': 'absolute', 'margin-top': '-210px' });
        
        // Add .postalCodeModalSuggestion class to position suggestion dropdown in relation to new position of the Location colorbox 
        $('.suggestionCompletionListElement').addClass('postalCodeModalSuggestion');
    }
    // Reset position of postalCodeColorbox modal and suggestion dropdown list when the keyboard is closed
    else if ($('#colorbox.postalCodeColorbox input[type="text"]:focus').length == 0)    // Required Location modal - keyboard closed)
    {
        // Reposition modal back to the position it was in prior to opening the keyboard
        $('#colorbox.postalCodeColorbox').animate({ top: adjModalTop }, 300).css({ 'position': 'static', 'margin-top': '0px' });
        
        // Remove .postalCodeModalSuggestion class to reset dropdown 
        $('.suggestionCompletionListElement').removeClass('postalCodeModalSuggestion');
    }
    // All other modals
    else
    {
        $('#colorbox').animate({ top: adjModalTop }, 300);
    }
}
/*#endregion */

/*#region Detect ipad safari 6 */
function isiPadSafari6OrBelow() {
    if (navigator.userAgent.toLowerCase().indexOf('ipad') < 0)
        return false;

    var userAgent = navigator.userAgent.toLowerCase();

    if (userAgent == null)
        return false;

    var indexOfVersion = userAgent.indexOf("version/");

    if (indexOfVersion < 0)
        return false;

    var version = userAgent.substr(indexOfVersion + 8, 1);

    //If browser is Chrome on iPad, the userAgent contains string "crios"
    return ((userAgent.indexOf('safari') >= 0) && (version < "7") && (userAgent.indexOf('crios') < 0));
}
/*#endregion */

/*#endregion*/

/*#region SEO Nav Bar */

function seoNavBar()
{
    $(".seoNav > li > a").click(function (e)
    { // binding onclick
        if ($(this).parent().hasClass('selected'))
        {
            $(".seoNav .selected div div").slideUp(100); // If clicked item is already open, close the dropdown
            $(".seoNav .selected").removeClass("selected");
        } 
        else
        {
            $(".seoNav .selected div div").slideUp(100); // Close all open dropdowns
            $(".seoNav .selected").removeClass("selected");

            if ($(this).next(".subs").length)
            {
                $(this).parent().addClass("selected"); // Open the clicked on dropdown

                // Set width of dropdown
                var parentWidth = $(this).parent().width();
                var childWidth = $(this).next(".subs").children().width();

                if (childWidth > parentWidth)
                {
                    var maxWidth = childWidth;
                }
                else
                {
                    var maxWidth = parentWidth;
                }
                // Show dropdown & adjust width
                $(this).next(".subs").children().slideDown(200).css("width", maxWidth);
                $(".seoNav .selected .subs div ul").css("width", maxWidth).css("left", "-10px");
            }
            return false;
        }
        e.stopPropagation();
    });

    $("body").click(function ()
    { // binding onclick to body to hide dropdown when user clicks away from dropdown
        $(".seoNav .selected div div").slideUp(100); // hiding popups
        $(".seoNav .selected").removeClass("selected");
    });
}

/*#endregion */

/*#region .: GA */

/*#region .: Top Bar Navigator */

function trackCompareToolNavigatorClick() {
    var period = 'Clicked on Compared Vehicles' + getCurrentPagePhrase(' on ');

    var compareNumber = $('.compareNumber:first').text();

    wa_trackEventNoInteraction('Compare Tool', period, 'Top Bar', compareNumber * 1);
    wa_trackEventNoInteraction('Compare Tool', compareNumber, 'Number of Cars Compared', null);
}

/*#endregion */

/*#region GA Content for Incentives */

function GetIncentiveTypesOnResultItem(link) {
    var incentiveTypes = [];
    var resultItem = $(link).parents('.resultItem:first');
    var incentives = $('.at_dealerIncentive:first .at_incentive', resultItem);
    $.each(incentives, function (index, item) {
        incentiveTypes.push($(item).attr('data-type'));
    });
    return incentiveTypes;
}

function GetIncentiveTypesOnAdDetails() {
    var incentiveTypes = [];
    var incentives = $('.detailsIncentive table tr[data-type]');
    $.each(incentives, function (index, item) {
        incentiveTypes.push($(item).attr('data-type'));
    });
    return incentiveTypes;
}

function GetAdDetailsIncentive(incentiveTypes) {
    if (incentiveTypes.length > 0) {
        var incentiveTypeAbbreviations = [];
        incentiveTypeAbbreviations.push(GetIncentiveTypeAbbreviation(incentiveTypes[0]));
        return '|inc|' + incentiveTypeAbbreviations.join(',');
    }
    return '||';
}

function GetIncentiveTypeAbbreviation(type) {
    switch (type) {
        case "Cash":
            return "cash";
        case "Lease":
            return "lease";
        case "Finance":
            return "fin";
        case "CashOrFinance":
            return "cashorfin";
        case "CashAndFinance":
            return "cashandfin";
        case "Promo":
            return "promo";
        default:
            return "";
    }
}

/*#endregion */

/*#region GA Content for TDI Services */

function GetAdDetailsTdiInfos() {
    var vehicleHighlightCount = $("#vehicleHighlightsListContainer").attr('data-count');
    var packageCount = $("#packageListContainer").attr('data-count');
    var optionCount = $("#optionListContainer").attr('data-count');

    vehicleHighlightCount = vehicleHighlightCount === undefined ? '' : vehicleHighlightCount;
    packageCount = packageCount === undefined ? '' : packageCount;
    optionCount = optionCount === undefined ? '' : optionCount;

    return '|' + optionCount + '|' + packageCount + '|' + vehicleHighlightCount;
}

/*#endregion */

function getCurrentPagePhrase(prefix) {
    if (WaData) {
        if (prefix == undefined) {
            prefix = '';
        }

        if (WaData.isDetailPage === true) {
            return prefix + 'Ad Details page';
        } else if (WaData.resultPageType) {
            return prefix + WaData.resultPageType;
        } 
    } 
    return '';
}

/*#endregion */

/*#region Get Old and New values for a select */

function TriggerSpecialValueChange(objectId, callback) {
    var $this = $(objectId);
    $this.data('last-value', 0);
    $this.data('last-event', '');

    $this
    .focus(function () {
        $this.data('old-value', $this.val());
    })
    .click(function () {
        if ($this.data('last-event') != 'change') {
            if ($this.data('last-value') > 0) {
                callback($this.data('last-value'), $this.val());
                $this.data('last-value', 0);
            } else {
                $this.data('last-value', $this.val());
            }
        } else {
            $this.data('last-value', 0);
        }
        $this.data('last-event', 'click');
        $this.data('old-value', $this.val());
    })
    .change(function () {
        callback($this.data('old-value'), $this.val());
        $this.data('last-event', 'change');
        $this.data('old-value', $this.val());
    });
}

function TriggerSpecialTextChange(objectId, callback) {
    var $this = $(objectId);
    $this.data('last-text', '');
    $this.data('last-event', '');

    $this
    .focus(function () {
        $this.data('old-text', $this.children("option:selected").text());
    })
    .click(function () {
        if ($this.data('last-event') != 'change') {
            if ($this.data('last-text') != '') {
                callback($this.data('last-text'), $this.children("option:selected").text());
                $this.data('last-text', '');
            } else {
                $this.data('last-text', $this.children("option:selected").text());
            }
        } else {
            $this.data('last-text', '');
        }
        $this.data('last-event', 'click');
        $this.data('old-text', $this.children("option:selected").text());
    })
    .change(function () {
        callback($this.data('old-text'), $this.children("option:selected").text());
        $this.data('last-event', 'change');
        $this.data('old-text', $this.children("option:selected").text());
    });
}

/*#endregion */

/*#region AutoTextbox.acx */
function CheckMaxLength(text, maximumLength) {
    var maxlength = new Number(maximumLength);
    if (maxlength > 0 && text.value.length > maxlength) {
        text.value = text.value.substring(0, maxlength);
    }
}
/*#endregion */


/*#region Colorbox Modals */

/*  Open colorbox modals.  
    INSTRUCTIONS FOR USE:
    EXAMPLE: /Reviews/WriteReview.aspx
    REQUIRED: Replace MODAL_NAME with the name of your modal in steps below.  NOTE: Must be identical in all instances!
    1.) Add this to page or user control where modal is to be called:
            <script type="text/javascript">        
                // MODAL_NAME - setup and open
                $(document).ready(function ()
                {
                    // Options for colorbox modal 
                    var modalWidth = 670;
                    var modalHeight = 410;
                    var hrefPrefix = 'MODAL_NAME';
                    var linkClientID = '<%=lnkMODAL_NAME.ClientID%>';

                    // Call colorbox open function
                    openColorboxModal(modalWidth, modalHeight, hrefPrefix, linkClientID);

                    // Add event listener for orientaiton change
                    if (isIPadBrowser)
                    {
                        window.addEventListener('orientationchange',
                            function ()
                            {
                                doOnOrientationChange_Modal(modalWidth, modalHeight);
                            },
                            false
                        );
                        // Initial execution if needed
                        doOnOrientationChange_Modal(modalWidth, modalHeight);
                    }
                });
            </script>
    2.) Link to open the modal should have ID = lnkMODAL_NAME
    3.) Div for modal needs to be formatted as follows:
            <div id="MODAL_NAMEPopupContainer" style="display: none;">
                <div id="MODAL_NAMEPopup" class="cssClassNames">
                    CONTENT OF MODAL HERE
                </div>
            </div> 
    4.) Set/Adjust alignment of close button in mainRefresh.css 
        Example:
            .MODAL_NAMEColorbox #cboxClose {
                top: 0px !important;
                left: 646px !important;
            }     
*/
function openColorboxModal(modalWidth, modalHeight, hrefPrefix, linkID) {
    $('#' + linkID).on('click', function() {
        showColorboxModal(modalWidth, modalHeight, hrefPrefix);
        return false;
    });
}

function showColorboxModal(modalWidth, modalHeight, hrefPrefix, href, closeCallback) {
    var options = {
        transition: 'none',
        reposition: true,
        scrolling: false,
        overlayClose: true,
        escKey: true,
        width: modalWidth + 'px',
        height: modalHeight + 'px'
    };

    var timeoutLength;

    if (href)
    {
        options = $.extend(options, {
            iframe: true,
            fixed: true,
            href: href
        });
        // Set longer timeout length for iframe modal, to prevent white box appearing until iframe content loads
        timeoutLength = 1000;
    } else {
        options = $.extend(options, {
            inline: true,
            fixed: !isIPadBrowser,
            href: '#' + hrefPrefix + 'Popup'
        });
        timeoutLength = 1;
    }

    // Open Colorbox Modal
    if (isIPadBrowser) {
        var ipadOrientation = Math.abs(window.orientation) == 90 ? 'landscape' : 'portrait';

        //  Offset modal to accomodate for close button, which sits inside the modal div
        var modalLeftOffset;
        if (ipadOrientation.toString() == 'portrait') {
            modalLeftOffset = Math.round((((768 - modalWidth) / 0.774) / 2) + 12);
        }
        else {
            modalLeftOffset = Math.round(((768 - modalWidth) / 2) + 12);
        }

        options = $.extend(options, {
            left: modalLeftOffset,
            onOpen: function () {
                // Disable background scrolling right before modal begins to open. This addresses iPad hardware acceleration overscrolling bug 
                $('body').bind('touchmove', function (e) { e.preventDefault(); e.stopPropagation(); });

                // Remove all previously applied classes from colorbox, and add class identifying this specific colorbox
                $('#colorbox').removeClass().addClass(hrefPrefix + 'Colorbox');
            },
            onComplete: function () {
                // Set top position of modal to center in viewport
                var adjModalTop;
                if (ipadOrientation.toString() == 'portrait') {
                    adjModalTop = Math.round($(document).scrollTop() + (((availHeightPort - modalHeight) / 0.774) / 2) + 75.078);   // 75.078 = 97px browser chrome height, scaled by 0.774 for portrait mode
                }
                else {
                    adjModalTop = $('#colorbox').position().top;
                }

                $('body').scrollTop(0);
                $('#colorbox.' + hrefPrefix + 'Colorbox').css({ 'top': adjModalTop, 'left': modalLeftOffset });

                // After a pause to allow body to shift back to proper location, then return body position to static to keep everything in viewport visible
                setTimeout(function ()
                {
                    $('body').css({ 'position': 'static' });
                }, 1);
            },
            onClosed: function () {
                // Reset body position to absolute to prevent page from getting cut off on right, & adjust left to ensure modal centers
                $('body').css({ 'position': 'absolute'});

                // After a pause to allow body to shift back to proper location, then return body position to static to keep everything in viewport visible
                setTimeout(function ()
                {
                    $('body').css({ 'position': 'static'});
                }, 1);

                // Re-enable page scrolling on colorbox modal close
                $('body').unbind('touchmove');

                // Reset colorbox for reuse - remove class identifying this specific colorbox 
                $('#colorbox').removeClass();

                if (typeof closeCallback == "function") {
                    closeCallback();
                }
            }
        });
    }
    else {
        options = $.extend(options, {
            onOpen: function () {
                // Remove all previously applied classes from colorbox, and add class identifying this specific colorbox
                $('#colorbox').removeClass().addClass(hrefPrefix + 'Colorbox').hide();

                // Prevent elements in modal from displaying before colorbox opens fully
                $('#cboxClose').css({ 'display': 'none' });
                $('#' + hrefPrefix + 'Popup').hide();
            },
            onComplete: function () {
                // Show modal & close button once the colorbox has been opened
                setTimeout(function () {
                    $('#cboxClose').css({ 'display': 'block' });
                    $('#' + hrefPrefix + 'Popup').show();

                    $('#colorbox').show();
                }, timeoutLength);
            },
            onClosed: function () {
                // Reset colorbox for reuse - remove class identifying this specific colorbox 
                $('#colorbox').removeClass();

                if (typeof closeCallback == "function") {
                    closeCallback();
                }
            }
        });
    }

    $.colorbox(options);
}

function showColorboxModalCustom(modalContentId, modalWidth, modalHeight, href) {
    // Options for colorbox modal 
    var hrefPrefix = modalContentId;

    // Prevent elements in modal from displaying before colorbox opens
    $('.' + modalContentId + 'Colorbox #cboxClose').css({ 'display': 'none' });
    $('#' + modalContentId + 'Popup').hide();

    // Call colorbox open function
    showColorboxModal(modalWidth, modalHeight, hrefPrefix, href);

    // Add event listener for orientaiton change
    if (isIPadBrowser) {
        window.addEventListener('orientationchange',
            function () {
                doOnOrientationChange_Modal(modalWidth, modalHeight);
            },
            false
        );
        // Initial execution if needed
        doOnOrientationChange_Modal(modalWidth, modalHeight);
    }

    // Simulate button/link click to open modal on page load
    $('#' + modalContentId).trigger('click');

    // Show modal now that colorbox has been opened
    $('#' + modalContentId + 'Popup').show();
}

/*#endregion */

/*#region Initialize Contact Seller Modal Trigger */

// Applied to iPads only
function doOnOrientationChange_ContactSeller() {
    // Get current iPad orientation
    ipadOrientation = Math.abs(window.orientation) == 90 ? 'landscape' : 'portrait';

    // Detect if Google Chrome on iPad & if colorbox is open 
    if (navigator.userAgent.match('CriOS') && $('#colorbox').css('display') == 'block' && ipadOrientation == 'landscape') {
        // Set position to fixed to prevent modal from shifting around to different locations
        $('body').css({ 'position': 'fixed' });

        // Specify top & left to make modal appear in correct location
        $('#colorbox').css({ 'left': '207px', 'top': '20px' });


        // Add noscroll class to ensure colorbox position is correct when user closes iPad keyboard
        $('body').addClass('noscroll');

        /*  Scroll to y= 230 to ensure that all fields and Send button are visible 
            regardless of field focused or after single or multiple orientation changes */
        window.scroll(0, 230);

    }
    else if (navigator.userAgent.match('CriOS') && $('#colorbox').css('display') == 'block' && ipadOrientation == 'portrait') {
        // Reset body position to absolute to prevent page from getting cut off on right, & adjust left to ensure modal centers
        $('body').css({ 'position': 'absolute' });

        // After a pause to allow body to shift back to proper location, then return body position to static to keep everything in viewport visible
        setTimeout(function ()
        {
            $('body').css({ 'position': 'static' });
        }, 1);

        // Add noscroll class to ensure colorbox position is correct when user closes iPad keyboard
        $('body').addClass('noscroll');

    }
    else // Safari
    {
        /*  If colorbox is already open, reset body position to absolute to prevent page from getting cut off on right
            and add noscroll class to ensure colorbox position is correct when user closes iPad keyboard */
        if ($('#colorbox').css('display') == 'block') {
            //$('body').css({ 'position': 'absolute' });
            $('body').addClass('noscroll');
        }

        // Set positioning for contact seller modal, dependent on current orientation and original orientation
        if (ipadOrientation.toString() == 'portrait')       // If in portrait mode
        {
            if (initPos == 'portrait') {
                $('.iPad #colorbox.resultsContactSeller').css({ 'position': 'absolute !important', 'top': '0px !important', 'left': '0px !important', 'margin': '125px 0px 0px 95px' });
            }
            else if (initPos == 'landscape') {
                $('.iPad #colorbox.resultsContactSeller').css({ 'position': 'absolute !important', 'top': '0px !important', 'left': '0px !important', 'margin': '125px 0px 0px -35px' });
            }
            else {
                // Do nothing - initial page load
            }
        }
        else    // else if in landscape mode
        {
            if (initPos == 'portrait') {
                $('.iPad #colorbox.resultsContactSeller').css({ 'top': '0px !important', 'left': '0px !important', 'margin': '45px 0px 0px 110px' });
            }
            else if (initPos == 'landscape') {
                $('.iPad #colorbox.resultsContactSeller').css({ 'top': '0px !important', 'left': '0px !important', 'margin': '45px 0px 0px -15px' });
            }
            else {
                // Do nothing - initial page load
            }
        }
    }
}

function InitContactSellerModalTrigger() {
    $("[group='contact_seller_modal_trigger']").on("click", function () {
        var modalWidth = 620;
        var modalHeight = 525;

        // Open Colorbox Modal
        if (isIPadBrowser) {
            $(this).colorbox({
                iframe: true,
                fixed: true,
                reposition: true,
                scrolling: false,
                overlayClose: false,
                width: modalWidth + 'px',
                height: modalHeight + 'px',
                onOpen: function () {
                    // Disable background scrolling right before modal begins to open. This addresses iPad hardware acceleration overscrolling bug 
                    $('body').bind('touchmove', function (e) { e.preventDefault(); e.stopPropagation(); });

                    // Remove all previously applied classes from colorbox, and add class identifying this specific colorbox
                    $('#colorbox').removeClass().addClass('contactSellerColorbox');
                },
                onComplete: function () {
                    $('body').scrollTop(0);
                },
                onClosed: function () {
                    // Re-enable page scrolling on colorbox modal close
                    $('body').unbind('touchmove');
                    $('body').removeAttr('style');

                    // Reset colorbox for reuse - remove class identifying this specific colorbox 
                    $('#colorbox').removeClass();
                }
            });
        }
        else {
            $(this).colorbox({
                iframe: true,
                fixed: true,
                reposition: true,
                scrolling: false,
                overlayClose: false,
                width: modalWidth + 'px',
                height: modalHeight + 'px',
                onOpen: function () {
                    // Remove all previously applied classes from colorbox, and add class identifying this specific colorbox
                    $('#colorbox').removeClass().addClass('contactSellerColorbox');
                },
                onComplete: function () {
                },
                onClosed: function () {
                    // Reset colorbox for reuse - remove class identifying this specific colorbox 
                    $('#colorbox').removeClass()
                }
            });
        }
    });

}

/*#endregion */

/*#region IE10 bug fix for " 'MutationObserver' is undefined" error*/
// mutationobserver-shim v0.3.1 (github.com/megawac/MutationObserver.js) - http://cdn.jsdelivr.net/g/mutationobserver/
// Authors: Graeme Yeates (github.com/megawac) 
window.MutationObserver = window.MutationObserver || window.WebKitMutationObserver || function (r) {
    function w(a) { this.g = []; this.k = a } function H(a) { (function c() { var d = a.takeRecords(); d.length && a.k(d, a); a.f = setTimeout(c, w._period) })() } function t(a) { var b = { type: null, target: null, addedNodes: [], removedNodes: [], previousSibling: null, nextSibling: null, attributeName: null, attributeNamespace: null, oldValue: null }, c; for (c in a) b[c] !== r && a[c] !== r && (b[c] = a[c]); return b } function I(a, b) {
        var c = B(a, b); return function (d) {
            var g =
            d.length, n; b.a && c.a && A(d, a, c.a, b.d); if (b.b || b.e) n = J(d, a, c, b); if (n || d.length !== g) c = B(a, b)
        }
    } function A(a, b, c, d) { for (var g = {}, n = b.attributes, h, m, C = n.length; C--;) h = n[C], m = h.name, d && d[m] === r || (h.value !== c[m] && a.push(t({ type: "attributes", target: b, attributeName: m, oldValue: c[m], attributeNamespace: h.namespaceURI })), g[m] = !0); for (m in c) g[m] || a.push(t({ target: b, type: "attributes", attributeName: m, oldValue: c[m] })) } function J(a, b, c, d) {
        function g(b, c, g, h, y) {
            var r = b.length - 1; y = -~((r - y) / 2); for (var f, k, e; e = b.pop() ;) f =
            g[e.h], k = h[e.i], d.b && y && Math.abs(e.h - e.i) >= r && (a.push(t({ type: "childList", target: c, addedNodes: [f], removedNodes: [f], nextSibling: f.nextSibling, previousSibling: f.previousSibling })), y--), d.a && k.a && A(a, f, k.a, d.d), d.c && 3 === f.nodeType && f.nodeValue !== k.c && a.push(t({ type: "characterData", target: f })), d.e && n(f, k)
        } function n(b, c) {
            for (var x = b.childNodes, p = c.b, y = x.length, w = p ? p.length : 0, f, k, e, l, u, z = 0, v = 0, q = 0; v < y || q < w;) l = x[v], u = (e = p[q]) && e.j, l === u ? (d.a && e.a && A(a, l, e.a, d.d), d.c && e.c !== r && l.nodeValue !== e.c && a.push(t({
                type: "characterData",
                target: l
            })), k && g(k, b, x, p, z), d.e && (l.childNodes.length || e.b && e.b.length) && n(l, e), v++, q++) : (h = !0, f || (f = {}, k = []), l && (f[e = D(l)] || (f[e] = !0, -1 === (e = E(p, l, q, "j")) ? d.b && (a.push(t({ type: "childList", target: b, addedNodes: [l], nextSibling: l.nextSibling, previousSibling: l.previousSibling })), z++) : k.push({ h: v, i: e })), v++), u && u !== x[v] && (f[e = D(u)] || (f[e] = !0, -1 === (e = E(x, u, v)) ? d.b && (a.push(t({ type: "childList", target: c.j, removedNodes: [u], nextSibling: p[q + 1], previousSibling: p[q - 1] })), z--) : k.push({ h: e, i: q })), q++)); k && g(k, b,
            x, p, z)
        } var h; n(b, c); return h
    } function B(a, b) { var c = !0; return function g(a) { var h = { j: a }; !b.c || 3 !== a.nodeType && 8 !== a.nodeType ? (b.a && c && 1 === a.nodeType && (h.a = F(a.attributes, function (a, c) { if (!b.d || b.d[c.name]) a[c.name] = c.value; return a })), c && (b.b || b.c || b.a && b.e) && (h.b = K(a.childNodes, g)), c = b.e) : h.c = a.nodeValue; return h }(a) } function D(a) { try { return a.id || (a.mo_id = a.mo_id || G++) } catch (b) { try { return a.nodeValue } catch (c) { return G++ } } } function K(a, b) { for (var c = [], d = 0; d < a.length; d++) c[d] = b(a[d], d, a); return c }
    function F(a, b) { for (var c = {}, d = 0; d < a.length; d++) c = b(c, a[d], d, a); return c } function E(a, b, c, d) { for (; c < a.length; c++) if ((d ? a[c][d] : a[c]) === b) return c; return -1 } w._period = 30; w.prototype = {
        observe: function (a, b) {
            for (var c = { a: !!(b.attributes || b.attributeFilter || b.attributeOldValue), b: !!b.childList, e: !!b.subtree, c: !(!b.characterData && !b.characterDataOldValue) }, d = this.g, g = 0; g < d.length; g++) d[g].m === a && d.splice(g, 1); b.attributeFilter && (c.d = F(b.attributeFilter, function (a, b) { a[b] = !0; return a })); d.push({
                m: a, l: I(a,
                c)
            }); this.f || H(this)
        }, takeRecords: function () { for (var a = [], b = this.g, c = 0; c < b.length; c++) b[c].l(a); return a }, disconnect: function () { this.g = []; clearTimeout(this.f); this.f = null }
    }; var G = 1; return w
}(void 0);

/*#endregion */;
/* @version 2.1 fixedMenu
 * @author Lucas Forchino
 * @webSite: http://www.jqueryload.com
 * jquery top fixed menu
 */
(function($){
    $.fn.fixedMenu=function(){
        return this.each(function(){
			var linkClicked= false;
            var menu= $(this);
            $('body').bind('click', function (e) {
                if ($(e.target).attr('id') === 'MyAccount') {
                    var myAccount = $(e.target);
                    if (!myAccount.hasClass()) {
                        myAccount.addClass('active');
                        myAccount.find('ul').one('mouseleave', function () {
                            myAccount.removeClass('active');
                        });
                    }
                } else if(menu.find('.active').size()>0 && !linkClicked) {
					menu.find('.active').removeClass('active');
				} else {
					linkClicked = false; 
				}
			});
			
            menu.find('ul li > a').bind('click',function(){
//            menu.find('ul li > a').bind('mouseover', function () {
				linkClicked = true;
				if ($(this).parent().hasClass('active')){
					$(this).parent().removeClass('active');
				}
				else{
					$(this).parent().parent().find('.active').removeClass('active');
					$(this).parent().addClass('active');

                    var active = $(this).parent();
                    menu.find('ul li ul').one('mouseleave', function () {
                        $(active).removeClass('active');
});
				}
            })
        });
    }
})(jQuery);

;
/*!
 * Globalize
 *
 * http://github.com/jquery/globalize
 *
 * Copyright Software Freedom Conservancy, Inc.
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 */

(function( window, undefined ) {

var Globalize,
	// private variables
	regexHex,
	regexInfinity,
	regexParseFloat,
	regexTrim,
	// private JavaScript utility functions
	arrayIndexOf,
	endsWith,
	extend,
	isArray,
	isFunction,
	isObject,
	startsWith,
	trim,
	truncate,
	zeroPad,
	// private Globalization utility functions
	appendPreOrPostMatch,
	expandFormat,
	formatDate,
	formatNumber,
	getTokenRegExp,
	getEra,
	getEraYear,
	parseExact,
	parseNegativePattern;

// Global variable (Globalize) or CommonJS module (globalize)
Globalize = function( cultureSelector ) {
	return new Globalize.prototype.init( cultureSelector );
};

if ( typeof require !== "undefined" &&
	typeof exports !== "undefined" &&
	typeof module !== "undefined" ) {
	// Assume CommonJS
	module.exports = Globalize;
} else {
	// Export as global variable
	window.Globalize = Globalize;
}

Globalize.cultures = {};

Globalize.prototype = {
	constructor: Globalize,
	init: function( cultureSelector ) {
		this.cultures = Globalize.cultures;
		this.cultureSelector = cultureSelector;

		return this;
	}
};
Globalize.prototype.init.prototype = Globalize.prototype;

// 1. When defining a culture, all fields are required except the ones stated as optional.
// 2. Each culture should have a ".calendars" object with at least one calendar named "standard"
//    which serves as the default calendar in use by that culture.
// 3. Each culture should have a ".calendar" object which is the current calendar being used,
//    it may be dynamically changed at any time to one of the calendars in ".calendars".
Globalize.cultures[ "default" ] = {
	// A unique name for the culture in the form <language code>-<country/region code>
	name: "en",
	// the name of the culture in the english language
	englishName: "English",
	// the name of the culture in its own language
	nativeName: "English",
	// whether the culture uses right-to-left text
	isRTL: false,
	// "language" is used for so-called "specific" cultures.
	// For example, the culture "es-CL" means "Spanish, in Chili".
	// It represents the Spanish-speaking culture as it is in Chili,
	// which might have different formatting rules or even translations
	// than Spanish in Spain. A "neutral" culture is one that is not
	// specific to a region. For example, the culture "es" is the generic
	// Spanish culture, which may be a more generalized version of the language
	// that may or may not be what a specific culture expects.
	// For a specific culture like "es-CL", the "language" field refers to the
	// neutral, generic culture information for the language it is using.
	// This is not always a simple matter of the string before the dash.
	// For example, the "zh-Hans" culture is netural (Simplified Chinese).
	// And the "zh-SG" culture is Simplified Chinese in Singapore, whose lanugage
	// field is "zh-CHS", not "zh".
	// This field should be used to navigate from a specific culture to it's
	// more general, neutral culture. If a culture is already as general as it
	// can get, the language may refer to itself.
	language: "en",
	// numberFormat defines general number formatting rules, like the digits in
	// each grouping, the group separator, and how negative numbers are displayed.
	numberFormat: {
		// [negativePattern]
		// Note, numberFormat.pattern has no "positivePattern" unlike percent and currency,
		// but is still defined as an array for consistency with them.
		//   negativePattern: one of "(n)|-n|- n|n-|n -"
		pattern: [ "-n" ],
		// number of decimal places normally shown
		decimals: 2,
		// string that separates number groups, as in 1,000,000
		",": ",",
		// string that separates a number from the fractional portion, as in 1.99
		".": ".",
		// array of numbers indicating the size of each number group.
		// TODO: more detailed description and example
		groupSizes: [ 3 ],
		// symbol used for positive numbers
		"+": "+",
		// symbol used for negative numbers
		"-": "-",
		// symbol used for NaN (Not-A-Number)
		"NaN": "NaN",
		// symbol used for Negative Infinity
		negativeInfinity: "-Infinity",
		// symbol used for Positive Infinity
		positiveInfinity: "Infinity",
		percent: {
			// [negativePattern, positivePattern]
			//   negativePattern: one of "-n %|-n%|-%n|%-n|%n-|n-%|n%-|-% n|n %-|% n-|% -n|n- %"
			//   positivePattern: one of "n %|n%|%n|% n"
			pattern: [ "-n %", "n %" ],
			// number of decimal places normally shown
			decimals: 2,
			// array of numbers indicating the size of each number group.
			// TODO: more detailed description and example
			groupSizes: [ 3 ],
			// string that separates number groups, as in 1,000,000
			",": ",",
			// string that separates a number from the fractional portion, as in 1.99
			".": ".",
			// symbol used to represent a percentage
			symbol: "%"
		},
		currency: {
			// [negativePattern, positivePattern]
			//   negativePattern: one of "($n)|-$n|$-n|$n-|(n$)|-n$|n-$|n$-|-n $|-$ n|n $-|$ n-|$ -n|n- $|($ n)|(n $)"
			//   positivePattern: one of "$n|n$|$ n|n $"
			pattern: [ "($n)", "$n" ],
			// number of decimal places normally shown
			decimals: 2,
			// array of numbers indicating the size of each number group.
			// TODO: more detailed description and example
			groupSizes: [ 3 ],
			// string that separates number groups, as in 1,000,000
			",": ",",
			// string that separates a number from the fractional portion, as in 1.99
			".": ".",
			// symbol used to represent currency
			symbol: "$"
		}
	},
	// calendars defines all the possible calendars used by this culture.
	// There should be at least one defined with name "standard", and is the default
	// calendar used by the culture.
	// A calendar contains information about how dates are formatted, information about
	// the calendar's eras, a standard set of the date formats,
	// translations for day and month names, and if the calendar is not based on the Gregorian
	// calendar, conversion functions to and from the Gregorian calendar.
	calendars: {
		standard: {
			// name that identifies the type of calendar this is
			name: "Gregorian_USEnglish",
			// separator of parts of a date (e.g. "/" in 11/05/1955)
			"/": "/",
			// separator of parts of a time (e.g. ":" in 05:44 PM)
			":": ":",
			// the first day of the week (0 = Sunday, 1 = Monday, etc)
			firstDay: 0,
			days: {
				// full day names
				names: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ],
				// abbreviated day names
				namesAbbr: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
				// shortest day names
				namesShort: [ "Su", "Mo", "Tu", "We", "Th", "Fr", "Sa" ]
			},
			months: {
				// full month names (13 months for lunar calendards -- 13th month should be "" if not lunar)
				names: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", "" ],
				// abbreviated month names
				namesAbbr: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "" ]
			},
			// AM and PM designators in one of these forms:
			// The usual view, and the upper and lower case versions
			//   [ standard, lowercase, uppercase ]
			// The culture does not use AM or PM (likely all standard date formats use 24 hour time)
			//   null
			AM: [ "AM", "am", "AM" ],
			PM: [ "PM", "pm", "PM" ],
			eras: [
				// eras in reverse chronological order.
				// name: the name of the era in this culture (e.g. A.D., C.E.)
				// start: when the era starts in ticks (gregorian, gmt), null if it is the earliest supported era.
				// offset: offset in years from gregorian calendar
				{
					"name": "A.D.",
					"start": null,
					"offset": 0
				}
			],
			// when a two digit year is given, it will never be parsed as a four digit
			// year greater than this year (in the appropriate era for the culture)
			// Set it as a full year (e.g. 2029) or use an offset format starting from
			// the current year: "+19" would correspond to 2029 if the current year 2010.
			twoDigitYearMax: 2029,
			// set of predefined date and time patterns used by the culture
			// these represent the format someone in this culture would expect
			// to see given the portions of the date that are shown.
			patterns: {
				// short date pattern
				d: "M/d/yyyy",
				// long date pattern
				D: "dddd, MMMM dd, yyyy",
				// short time pattern
				t: "h:mm tt",
				// long time pattern
				T: "h:mm:ss tt",
				// long date, short time pattern
				f: "dddd, MMMM dd, yyyy h:mm tt",
				// long date, long time pattern
				F: "dddd, MMMM dd, yyyy h:mm:ss tt",
				// month/day pattern
				M: "MMMM dd",
				// month/year pattern
				Y: "yyyy MMMM",
				// S is a sortable format that does not vary by culture
				S: "yyyy\u0027-\u0027MM\u0027-\u0027dd\u0027T\u0027HH\u0027:\u0027mm\u0027:\u0027ss"
			}
			// optional fields for each calendar:
			/*
			monthsGenitive:
				Same as months but used when the day preceeds the month.
				Omit if the culture has no genitive distinction in month names.
				For an explaination of genitive months, see http://blogs.msdn.com/michkap/archive/2004/12/25/332259.aspx
			convert:
				Allows for the support of non-gregorian based calendars. This convert object is used to
				to convert a date to and from a gregorian calendar date to handle parsing and formatting.
				The two functions:
					fromGregorian( date )
						Given the date as a parameter, return an array with parts [ year, month, day ]
						corresponding to the non-gregorian based year, month, and day for the calendar.
					toGregorian( year, month, day )
						Given the non-gregorian year, month, and day, return a new Date() object
						set to the corresponding date in the gregorian calendar.
			*/
		}
	},
	// For localized strings
	messages: {}
};

Globalize.cultures[ "default" ].calendar = Globalize.cultures[ "default" ].calendars.standard;

Globalize.cultures.en = Globalize.cultures[ "default" ];

Globalize.cultureSelector = "en";

//
// private variables
//

regexHex = /^0x[a-f0-9]+$/i;
regexInfinity = /^[+\-]?infinity$/i;
regexParseFloat = /^[+\-]?\d*\.?\d*(e[+\-]?\d+)?$/;
regexTrim = /^\s+|\s+$/g;

//
// private JavaScript utility functions
//

arrayIndexOf = function( array, item ) {
	if ( array.indexOf ) {
		return array.indexOf( item );
	}
	for ( var i = 0, length = array.length; i < length; i++ ) {
		if ( array[i] === item ) {
			return i;
		}
	}
	return -1;
};

endsWith = function( value, pattern ) {
	return value.substr( value.length - pattern.length ) === pattern;
};

extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction(target) ) {
		target = {};
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( isObject(copy) || (copyIsArray = isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && isArray(src) ? src : [];

					} else {
						clone = src && isObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

isArray = Array.isArray || function( obj ) {
	return Object.prototype.toString.call( obj ) === "[object Array]";
};

isFunction = function( obj ) {
	return Object.prototype.toString.call( obj ) === "[object Function]";
};

isObject = function( obj ) {
	return Object.prototype.toString.call( obj ) === "[object Object]";
};

startsWith = function( value, pattern ) {
	return value.indexOf( pattern ) === 0;
};

trim = function( value ) {
	return ( value + "" ).replace( regexTrim, "" );
};

truncate = function( value ) {
	if ( isNaN( value ) ) {
		return NaN;
	}
	return Math[ value < 0 ? "ceil" : "floor" ]( value );
};

zeroPad = function( str, count, left ) {
	var l;
	for ( l = str.length; l < count; l += 1 ) {
		str = ( left ? ("0" + str) : (str + "0") );
	}
	return str;
};

//
// private Globalization utility functions
//

appendPreOrPostMatch = function( preMatch, strings ) {
	// appends pre- and post- token match strings while removing escaped characters.
	// Returns a single quote count which is used to determine if the token occurs
	// in a string literal.
	var quoteCount = 0,
		escaped = false;
	for ( var i = 0, il = preMatch.length; i < il; i++ ) {
		var c = preMatch.charAt( i );
		switch ( c ) {
			case "\'":
				if ( escaped ) {
					strings.push( "\'" );
				}
				else {
					quoteCount++;
				}
				escaped = false;
				break;
			case "\\":
				if ( escaped ) {
					strings.push( "\\" );
				}
				escaped = !escaped;
				break;
			default:
				strings.push( c );
				escaped = false;
				break;
		}
	}
	return quoteCount;
};

expandFormat = function( cal, format ) {
	// expands unspecified or single character date formats into the full pattern.
	format = format || "F";
	var pattern,
		patterns = cal.patterns,
		len = format.length;
	if ( len === 1 ) {
		pattern = patterns[ format ];
		if ( !pattern ) {
			throw "Invalid date format string \'" + format + "\'.";
		}
		format = pattern;
	}
	else if ( len === 2 && format.charAt(0) === "%" ) {
		// %X escape format -- intended as a custom format string that is only one character, not a built-in format.
		format = format.charAt( 1 );
	}
	return format;
};

formatDate = function( value, format, culture ) {
	var cal = culture.calendar,
		convert = cal.convert,
		ret;

	if ( !format || !format.length || format === "i" ) {
		if ( culture && culture.name.length ) {
			if ( convert ) {
				// non-gregorian calendar, so we cannot use built-in toLocaleString()
				ret = formatDate( value, cal.patterns.F, culture );
			}
			else {
				var eraDate = new Date( value.getTime() ),
					era = getEra( value, cal.eras );
				eraDate.setFullYear( getEraYear(value, cal, era) );
				ret = eraDate.toLocaleString();
			}
		}
		else {
			ret = value.toString();
		}
		return ret;
	}

	var eras = cal.eras,
		sortable = format === "s";
	format = expandFormat( cal, format );

	// Start with an empty string
	ret = [];
	var hour,
		zeros = [ "0", "00", "000" ],
		foundDay,
		checkedDay,
		dayPartRegExp = /([^d]|^)(d|dd)([^d]|$)/g,
		quoteCount = 0,
		tokenRegExp = getTokenRegExp(),
		converted;

	function padZeros( num, c ) {
		var r, s = num + "";
		if ( c > 1 && s.length < c ) {
			r = ( zeros[c - 2] + s);
			return r.substr( r.length - c, c );
		}
		else {
			r = s;
		}
		return r;
	}

	function hasDay() {
		if ( foundDay || checkedDay ) {
			return foundDay;
		}
		foundDay = dayPartRegExp.test( format );
		checkedDay = true;
		return foundDay;
	}

	function getPart( date, part ) {
		if ( converted ) {
			return converted[ part ];
		}
		switch ( part ) {
			case 0:
				return date.getFullYear();
			case 1:
				return date.getMonth();
			case 2:
				return date.getDate();
			default:
				throw "Invalid part value " + part;
		}
	}

	if ( !sortable && convert ) {
		converted = convert.fromGregorian( value );
	}

	for ( ; ; ) {
		// Save the current index
		var index = tokenRegExp.lastIndex,
			// Look for the next pattern
			ar = tokenRegExp.exec( format );

		// Append the text before the pattern (or the end of the string if not found)
		var preMatch = format.slice( index, ar ? ar.index : format.length );
		quoteCount += appendPreOrPostMatch( preMatch, ret );

		if ( !ar ) {
			break;
		}

		// do not replace any matches that occur inside a string literal.
		if ( quoteCount % 2 ) {
			ret.push( ar[0] );
			continue;
		}

		var current = ar[ 0 ],
			clength = current.length;

		switch ( current ) {
			case "ddd":
				//Day of the week, as a three-letter abbreviation
			case "dddd":
				// Day of the week, using the full name
				var names = ( clength === 3 ) ? cal.days.namesAbbr : cal.days.names;
				ret.push( names[value.getDay()] );
				break;
			case "d":
				// Day of month, without leading zero for single-digit days
			case "dd":
				// Day of month, with leading zero for single-digit days
				foundDay = true;
				ret.push(
					padZeros( getPart(value, 2), clength )
				);
				break;
			case "MMM":
				// Month, as a three-letter abbreviation
			case "MMMM":
				// Month, using the full name
				var part = getPart( value, 1 );
				ret.push(
					( cal.monthsGenitive && hasDay() ) ?
					( cal.monthsGenitive[ clength === 3 ? "namesAbbr" : "names" ][ part ] ) :
					( cal.months[ clength === 3 ? "namesAbbr" : "names" ][ part ] )
				);
				break;
			case "M":
				// Month, as digits, with no leading zero for single-digit months
			case "MM":
				// Month, as digits, with leading zero for single-digit months
				ret.push(
					padZeros( getPart(value, 1) + 1, clength )
				);
				break;
			case "y":
				// Year, as two digits, but with no leading zero for years less than 10
			case "yy":
				// Year, as two digits, with leading zero for years less than 10
			case "yyyy":
				// Year represented by four full digits
				part = converted ? converted[ 0 ] : getEraYear( value, cal, getEra(value, eras), sortable );
				if ( clength < 4 ) {
					part = part % 100;
				}
				ret.push(
					padZeros( part, clength )
				);
				break;
			case "h":
				// Hours with no leading zero for single-digit hours, using 12-hour clock
			case "hh":
				// Hours with leading zero for single-digit hours, using 12-hour clock
				hour = value.getHours() % 12;
				if ( hour === 0 ) hour = 12;
				ret.push(
					padZeros( hour, clength )
				);
				break;
			case "H":
				// Hours with no leading zero for single-digit hours, using 24-hour clock
			case "HH":
				// Hours with leading zero for single-digit hours, using 24-hour clock
				ret.push(
					padZeros( value.getHours(), clength )
				);
				break;
			case "m":
				// Minutes with no leading zero for single-digit minutes
			case "mm":
				// Minutes with leading zero for single-digit minutes
				ret.push(
					padZeros( value.getMinutes(), clength )
				);
				break;
			case "s":
				// Seconds with no leading zero for single-digit seconds
			case "ss":
				// Seconds with leading zero for single-digit seconds
				ret.push(
					padZeros( value.getSeconds(), clength )
				);
				break;
			case "t":
				// One character am/pm indicator ("a" or "p")
			case "tt":
				// Multicharacter am/pm indicator
				part = value.getHours() < 12 ? ( cal.AM ? cal.AM[0] : " " ) : ( cal.PM ? cal.PM[0] : " " );
				ret.push( clength === 1 ? part.charAt(0) : part );
				break;
			case "f":
				// Deciseconds
			case "ff":
				// Centiseconds
			case "fff":
				// Milliseconds
				ret.push(
					padZeros( value.getMilliseconds(), 3 ).substr( 0, clength )
				);
				break;
			case "z":
				// Time zone offset, no leading zero
			case "zz":
				// Time zone offset with leading zero
				hour = value.getTimezoneOffset() / 60;
				ret.push(
					( hour <= 0 ? "+" : "-" ) + padZeros( Math.floor(Math.abs(hour)), clength )
				);
				break;
			case "zzz":
				// Time zone offset with leading zero
				hour = value.getTimezoneOffset() / 60;
				ret.push(
					( hour <= 0 ? "+" : "-" ) + padZeros( Math.floor(Math.abs(hour)), 2 ) +
					// Hard coded ":" separator, rather than using cal.TimeSeparator
					// Repeated here for consistency, plus ":" was already assumed in date parsing.
					":" + padZeros( Math.abs(value.getTimezoneOffset() % 60), 2 )
				);
				break;
			case "g":
			case "gg":
				if ( cal.eras ) {
					ret.push(
						cal.eras[ getEra(value, eras) ].name
					);
				}
				break;
		case "/":
			ret.push( cal["/"] );
			break;
		default:
			throw "Invalid date format pattern \'" + current + "\'.";
		}
	}
	return ret.join( "" );
};

// formatNumber
(function() {
	var expandNumber;

	expandNumber = function( number, precision, formatInfo ) {
		var groupSizes = formatInfo.groupSizes,
			curSize = groupSizes[ 0 ],
			curGroupIndex = 1,
			factor = Math.pow( 10, precision ),
			rounded = Math.round( number * factor ) / factor;

		if ( !isFinite(rounded) ) {
			rounded = number;
		}
		number = rounded;

		var numberString = number+"",
			right = "",
			split = numberString.split( /e/i ),
			exponent = split.length > 1 ? parseInt( split[1], 10 ) : 0;
		numberString = split[ 0 ];
		split = numberString.split( "." );
		numberString = split[ 0 ];
		right = split.length > 1 ? split[ 1 ] : "";

		var l;
		if ( exponent > 0 ) {
			right = zeroPad( right, exponent, false );
			numberString += right.slice( 0, exponent );
			right = right.substr( exponent );
		}
		else if ( exponent < 0 ) {
			exponent = -exponent;
			numberString = zeroPad( numberString, exponent + 1, true );
			right = numberString.slice( -exponent, numberString.length ) + right;
			numberString = numberString.slice( 0, -exponent );
		}

		if ( precision > 0 ) {
			right = formatInfo[ "." ] +
				( (right.length > precision) ? right.slice(0, precision) : zeroPad(right, precision) );
		}
		else {
			right = "";
		}

		var stringIndex = numberString.length - 1,
			sep = formatInfo[ "," ],
			ret = "";

		while ( stringIndex >= 0 ) {
			if ( curSize === 0 || curSize > stringIndex ) {
				return numberString.slice( 0, stringIndex + 1 ) + ( ret.length ? (sep + ret + right) : right );
			}
			ret = numberString.slice( stringIndex - curSize + 1, stringIndex + 1 ) + ( ret.length ? (sep + ret) : "" );

			stringIndex -= curSize;

			if ( curGroupIndex < groupSizes.length ) {
				curSize = groupSizes[ curGroupIndex ];
				curGroupIndex++;
			}
		}

		return numberString.slice( 0, stringIndex + 1 ) + sep + ret + right;
	};

	formatNumber = function( value, format, culture ) {
		if ( !isFinite(value) ) {
			if ( value === Infinity ) {
				return culture.numberFormat.positiveInfinity;
			}
			if ( value === -Infinity ) {
				return culture.numberFormat.negativeInfinity;
			}
			return culture.numberFormat[ "NaN" ];
		}
		if ( !format || format === "i" ) {
			return culture.name.length ? value.toLocaleString() : value.toString();
		}
		format = format || "D";

		var nf = culture.numberFormat,
			number = Math.abs( value ),
			precision = -1,
			pattern;
		if ( format.length > 1 ) precision = parseInt( format.slice(1), 10 );

		var current = format.charAt( 0 ).toUpperCase(),
			formatInfo;

		switch ( current ) {
			case "D":
				pattern = "n";
				number = truncate( number );
				if ( precision !== -1 ) {
					number = zeroPad( "" + number, precision, true );
				}
				if ( value < 0 ) number = "-" + number;
				break;
			case "N":
				formatInfo = nf;
				/* falls through */
			case "C":
				formatInfo = formatInfo || nf.currency;
				/* falls through */
			case "P":
				formatInfo = formatInfo || nf.percent;
				pattern = value < 0 ? formatInfo.pattern[ 0 ] : ( formatInfo.pattern[1] || "n" );
				if ( precision === -1 ) precision = formatInfo.decimals;
				number = expandNumber( number * (current === "P" ? 100 : 1), precision, formatInfo );
				break;
			default:
				throw "Bad number format specifier: " + current;
		}

		var patternParts = /n|\$|-|%/g,
			ret = "";
		for ( ; ; ) {
			var index = patternParts.lastIndex,
				ar = patternParts.exec( pattern );

			ret += pattern.slice( index, ar ? ar.index : pattern.length );

			if ( !ar ) {
				break;
			}

			switch ( ar[0] ) {
				case "n":
					ret += number;
					break;
				case "$":
					ret += nf.currency.symbol;
					break;
				case "-":
					// don't make 0 negative
					if ( /[1-9]/.test(number) ) {
						ret += nf[ "-" ];
					}
					break;
				case "%":
					ret += nf.percent.symbol;
					break;
			}
		}

		return ret;
	};

}());

getTokenRegExp = function() {
	// regular expression for matching date and time tokens in format strings.
	return (/\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z|gg|g/g);
};

getEra = function( date, eras ) {
	if ( !eras ) return 0;
	var start, ticks = date.getTime();
	for ( var i = 0, l = eras.length; i < l; i++ ) {
		start = eras[ i ].start;
		if ( start === null || ticks >= start ) {
			return i;
		}
	}
	return 0;
};

getEraYear = function( date, cal, era, sortable ) {
	var year = date.getFullYear();
	if ( !sortable && cal.eras ) {
		// convert normal gregorian year to era-shifted gregorian
		// year by subtracting the era offset
		year -= cal.eras[ era ].offset;
	}
	return year;
};

// parseExact
(function() {
	var expandYear,
		getDayIndex,
		getMonthIndex,
		getParseRegExp,
		outOfRange,
		toUpper,
		toUpperArray;

	expandYear = function( cal, year ) {
		// expands 2-digit year into 4 digits.
		if ( year < 100 ) {
			var now = new Date(),
				era = getEra( now ),
				curr = getEraYear( now, cal, era ),
				twoDigitYearMax = cal.twoDigitYearMax;
			twoDigitYearMax = typeof twoDigitYearMax === "string" ? new Date().getFullYear() % 100 + parseInt( twoDigitYearMax, 10 ) : twoDigitYearMax;
			year += curr - ( curr % 100 );
			if ( year > twoDigitYearMax ) {
				year -= 100;
			}
		}
		return year;
	};

	getDayIndex = function	( cal, value, abbr ) {
		var ret,
			days = cal.days,
			upperDays = cal._upperDays;
		if ( !upperDays ) {
			cal._upperDays = upperDays = [
				toUpperArray( days.names ),
				toUpperArray( days.namesAbbr ),
				toUpperArray( days.namesShort )
			];
		}
		value = toUpper( value );
		if ( abbr ) {
			ret = arrayIndexOf( upperDays[1], value );
			if ( ret === -1 ) {
				ret = arrayIndexOf( upperDays[2], value );
			}
		}
		else {
			ret = arrayIndexOf( upperDays[0], value );
		}
		return ret;
	};

	getMonthIndex = function( cal, value, abbr ) {
		var months = cal.months,
			monthsGen = cal.monthsGenitive || cal.months,
			upperMonths = cal._upperMonths,
			upperMonthsGen = cal._upperMonthsGen;
		if ( !upperMonths ) {
			cal._upperMonths = upperMonths = [
				toUpperArray( months.names ),
				toUpperArray( months.namesAbbr )
			];
			cal._upperMonthsGen = upperMonthsGen = [
				toUpperArray( monthsGen.names ),
				toUpperArray( monthsGen.namesAbbr )
			];
		}
		value = toUpper( value );
		var i = arrayIndexOf( abbr ? upperMonths[1] : upperMonths[0], value );
		if ( i < 0 ) {
			i = arrayIndexOf( abbr ? upperMonthsGen[1] : upperMonthsGen[0], value );
		}
		return i;
	};

	getParseRegExp = function( cal, format ) {
		// converts a format string into a regular expression with groups that
		// can be used to extract date fields from a date string.
		// check for a cached parse regex.
		var re = cal._parseRegExp;
		if ( !re ) {
			cal._parseRegExp = re = {};
		}
		else {
			var reFormat = re[ format ];
			if ( reFormat ) {
				return reFormat;
			}
		}

		// expand single digit formats, then escape regular expression characters.
		var expFormat = expandFormat( cal, format ).replace( /([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g, "\\\\$1" ),
			regexp = [ "^" ],
			groups = [],
			index = 0,
			quoteCount = 0,
			tokenRegExp = getTokenRegExp(),
			match;

		// iterate through each date token found.
		while ( (match = tokenRegExp.exec(expFormat)) !== null ) {
			var preMatch = expFormat.slice( index, match.index );
			index = tokenRegExp.lastIndex;

			// don't replace any matches that occur inside a string literal.
			quoteCount += appendPreOrPostMatch( preMatch, regexp );
			if ( quoteCount % 2 ) {
				regexp.push( match[0] );
				continue;
			}

			// add a regex group for the token.
			var m = match[ 0 ],
				len = m.length,
				add;
			switch ( m ) {
				case "dddd": case "ddd":
				case "MMMM": case "MMM":
				case "gg": case "g":
					add = "(\\D+)";
					break;
				case "tt": case "t":
					add = "(\\D*)";
					break;
				case "yyyy":
				case "fff":
				case "ff":
				case "f":
					add = "(\\d{" + len + "})";
					break;
				case "dd": case "d":
				case "MM": case "M":
				case "yy": case "y":
				case "HH": case "H":
				case "hh": case "h":
				case "mm": case "m":
				case "ss": case "s":
					add = "(\\d\\d?)";
					break;
				case "zzz":
					add = "([+-]?\\d\\d?:\\d{2})";
					break;
				case "zz": case "z":
					add = "([+-]?\\d\\d?)";
					break;
				case "/":
					add = "(\\/)";
					break;
				default:
					throw "Invalid date format pattern \'" + m + "\'.";
			}
			if ( add ) {
				regexp.push( add );
			}
			groups.push( match[0] );
		}
		appendPreOrPostMatch( expFormat.slice(index), regexp );
		regexp.push( "$" );

		// allow whitespace to differ when matching formats.
		var regexpStr = regexp.join( "" ).replace( /\s+/g, "\\s+" ),
			parseRegExp = { "regExp": regexpStr, "groups": groups };

		// cache the regex for this format.
		return re[ format ] = parseRegExp;
	};

	outOfRange = function( value, low, high ) {
		return value < low || value > high;
	};

	toUpper = function( value ) {
		// "he-IL" has non-breaking space in weekday names.
		return value.split( "\u00A0" ).join( " " ).toUpperCase();
	};

	toUpperArray = function( arr ) {
		var results = [];
		for ( var i = 0, l = arr.length; i < l; i++ ) {
			results[ i ] = toUpper( arr[i] );
		}
		return results;
	};

	parseExact = function( value, format, culture ) {
		// try to parse the date string by matching against the format string
		// while using the specified culture for date field names.
		value = trim( value );
		var cal = culture.calendar,
			// convert date formats into regular expressions with groupings.
			// use the regexp to determine the input format and extract the date fields.
			parseInfo = getParseRegExp( cal, format ),
			match = new RegExp( parseInfo.regExp ).exec( value );
		if ( match === null ) {
			return null;
		}
		// found a date format that matches the input.
		var groups = parseInfo.groups,
			era = null, year = null, month = null, date = null, weekDay = null,
			hour = 0, hourOffset, min = 0, sec = 0, msec = 0, tzMinOffset = null,
			pmHour = false;
		// iterate the format groups to extract and set the date fields.
		for ( var j = 0, jl = groups.length; j < jl; j++ ) {
			var matchGroup = match[ j + 1 ];
			if ( matchGroup ) {
				var current = groups[ j ],
					clength = current.length,
					matchInt = parseInt( matchGroup, 10 );
				switch ( current ) {
					case "dd": case "d":
						// Day of month.
						date = matchInt;
						// check that date is generally in valid range, also checking overflow below.
						if ( outOfRange(date, 1, 31) ) return null;
						break;
					case "MMM": case "MMMM":
						month = getMonthIndex( cal, matchGroup, clength === 3 );
						if ( outOfRange(month, 0, 11) ) return null;
						break;
					case "M": case "MM":
						// Month.
						month = matchInt - 1;
						if ( outOfRange(month, 0, 11) ) return null;
						break;
					case "y": case "yy":
					case "yyyy":
						year = clength < 4 ? expandYear( cal, matchInt ) : matchInt;
						if ( outOfRange(year, 0, 9999) ) return null;
						break;
					case "h": case "hh":
						// Hours (12-hour clock).
						hour = matchInt;
						if ( hour === 12 ) hour = 0;
						if ( outOfRange(hour, 0, 11) ) return null;
						break;
					case "H": case "HH":
						// Hours (24-hour clock).
						hour = matchInt;
						if ( outOfRange(hour, 0, 23) ) return null;
						break;
					case "m": case "mm":
						// Minutes.
						min = matchInt;
						if ( outOfRange(min, 0, 59) ) return null;
						break;
					case "s": case "ss":
						// Seconds.
						sec = matchInt;
						if ( outOfRange(sec, 0, 59) ) return null;
						break;
					case "tt": case "t":
						// AM/PM designator.
						// see if it is standard, upper, or lower case PM. If not, ensure it is at least one of
						// the AM tokens. If not, fail the parse for this format.
						pmHour = cal.PM && ( matchGroup === cal.PM[0] || matchGroup === cal.PM[1] || matchGroup === cal.PM[2] );
						if (
							!pmHour && (
								!cal.AM || ( matchGroup !== cal.AM[0] && matchGroup !== cal.AM[1] && matchGroup !== cal.AM[2] )
							)
						) return null;
						break;
					case "f":
						// Deciseconds.
					case "ff":
						// Centiseconds.
					case "fff":
						// Milliseconds.
						msec = matchInt * Math.pow( 10, 3 - clength );
						if ( outOfRange(msec, 0, 999) ) return null;
						break;
					case "ddd":
						// Day of week.
					case "dddd":
						// Day of week.
						weekDay = getDayIndex( cal, matchGroup, clength === 3 );
						if ( outOfRange(weekDay, 0, 6) ) return null;
						break;
					case "zzz":
						// Time zone offset in +/- hours:min.
						var offsets = matchGroup.split( /:/ );
						if ( offsets.length !== 2 ) return null;
						hourOffset = parseInt( offsets[0], 10 );
						if ( outOfRange(hourOffset, -12, 13) ) return null;
						var minOffset = parseInt( offsets[1], 10 );
						if ( outOfRange(minOffset, 0, 59) ) return null;
						tzMinOffset = ( hourOffset * 60 ) + ( startsWith(matchGroup, "-") ? -minOffset : minOffset );
						break;
					case "z": case "zz":
						// Time zone offset in +/- hours.
						hourOffset = matchInt;
						if ( outOfRange(hourOffset, -12, 13) ) return null;
						tzMinOffset = hourOffset * 60;
						break;
					case "g": case "gg":
						var eraName = matchGroup;
						if ( !eraName || !cal.eras ) return null;
						eraName = trim( eraName.toLowerCase() );
						for ( var i = 0, l = cal.eras.length; i < l; i++ ) {
							if ( eraName === cal.eras[i].name.toLowerCase() ) {
								era = i;
								break;
							}
						}
						// could not find an era with that name
						if ( era === null ) return null;
						break;
				}
			}
		}
		var result = new Date(), defaultYear, convert = cal.convert;
		defaultYear = convert ? convert.fromGregorian( result )[ 0 ] : result.getFullYear();
		if ( year === null ) {
			year = defaultYear;
		}
		else if ( cal.eras ) {
			// year must be shifted to normal gregorian year
			// but not if year was not specified, its already normal gregorian
			// per the main if clause above.
			year += cal.eras[( era || 0 )].offset;
		}
		// set default day and month to 1 and January, so if unspecified, these are the defaults
		// instead of the current day/month.
		if ( month === null ) {
			month = 0;
		}
		if ( date === null ) {
			date = 1;
		}
		// now have year, month, and date, but in the culture's calendar.
		// convert to gregorian if necessary
		if ( convert ) {
			result = convert.toGregorian( year, month, date );
			// conversion failed, must be an invalid match
			if ( result === null ) return null;
		}
		else {
			// have to set year, month and date together to avoid overflow based on current date.
			result.setFullYear( year, month, date );
			// check to see if date overflowed for specified month (only checked 1-31 above).
			if ( result.getDate() !== date ) return null;
			// invalid day of week.
			if ( weekDay !== null && result.getDay() !== weekDay ) {
				return null;
			}
		}
		// if pm designator token was found make sure the hours fit the 24-hour clock.
		if ( pmHour && hour < 12 ) {
			hour += 12;
		}
		result.setHours( hour, min, sec, msec );
		if ( tzMinOffset !== null ) {
			// adjust timezone to utc before applying local offset.
			var adjustedMin = result.getMinutes() - ( tzMinOffset + result.getTimezoneOffset() );
			// Safari limits hours and minutes to the range of -127 to 127.  We need to use setHours
			// to ensure both these fields will not exceed this range.	adjustedMin will range
			// somewhere between -1440 and 1500, so we only need to split this into hours.
			result.setHours( result.getHours() + parseInt(adjustedMin / 60, 10), adjustedMin % 60 );
		}
		return result;
	};
}());

parseNegativePattern = function( value, nf, negativePattern ) {
	var neg = nf[ "-" ],
		pos = nf[ "+" ],
		ret;
	switch ( negativePattern ) {
		case "n -":
			neg = " " + neg;
			pos = " " + pos;
			/* falls through */
		case "n-":
			if ( endsWith(value, neg) ) {
				ret = [ "-", value.substr(0, value.length - neg.length) ];
			}
			else if ( endsWith(value, pos) ) {
				ret = [ "+", value.substr(0, value.length - pos.length) ];
			}
			break;
		case "- n":
			neg += " ";
			pos += " ";
			/* falls through */
		case "-n":
			if ( startsWith(value, neg) ) {
				ret = [ "-", value.substr(neg.length) ];
			}
			else if ( startsWith(value, pos) ) {
				ret = [ "+", value.substr(pos.length) ];
			}
			break;
		case "(n)":
			if ( startsWith(value, "(") && endsWith(value, ")") ) {
				ret = [ "-", value.substr(1, value.length - 2) ];
			}
			break;
	}
	return ret || [ "", value ];
};

//
// public instance functions
//

Globalize.prototype.findClosestCulture = function( cultureSelector ) {
	return Globalize.findClosestCulture.call( this, cultureSelector );
};

Globalize.prototype.format = function( value, format, cultureSelector ) {
	return Globalize.format.call( this, value, format, cultureSelector );
};

Globalize.prototype.localize = function( key, cultureSelector ) {
	return Globalize.localize.call( this, key, cultureSelector );
};

Globalize.prototype.parseInt = function( value, radix, cultureSelector ) {
	return Globalize.parseInt.call( this, value, radix, cultureSelector );
};

Globalize.prototype.parseFloat = function( value, radix, cultureSelector ) {
	return Globalize.parseFloat.call( this, value, radix, cultureSelector );
};

Globalize.prototype.culture = function( cultureSelector ) {
	return Globalize.culture.call( this, cultureSelector );
};

//
// public singleton functions
//

Globalize.addCultureInfo = function( cultureName, baseCultureName, info ) {

	var base = {},
		isNew = false;

	if ( typeof cultureName !== "string" ) {
		// cultureName argument is optional string. If not specified, assume info is first
		// and only argument. Specified info deep-extends current culture.
		info = cultureName;
		cultureName = this.culture().name;
		base = this.cultures[ cultureName ];
	} else if ( typeof baseCultureName !== "string" ) {
		// baseCultureName argument is optional string. If not specified, assume info is second
		// argument. Specified info deep-extends specified culture.
		// If specified culture does not exist, create by deep-extending default
		info = baseCultureName;
		isNew = ( this.cultures[ cultureName ] == null );
		base = this.cultures[ cultureName ] || this.cultures[ "default" ];
	} else {
		// cultureName and baseCultureName specified. Assume a new culture is being created
		// by deep-extending an specified base culture
		isNew = true;
		base = this.cultures[ baseCultureName ];
	}

	this.cultures[ cultureName ] = extend(true, {},
		base,
		info
	);
	// Make the standard calendar the current culture if it's a new culture
	if ( isNew ) {
		this.cultures[ cultureName ].calendar = this.cultures[ cultureName ].calendars.standard;
	}
};

Globalize.findClosestCulture = function( name ) {
	var match;
	if ( !name ) {
		return this.findClosestCulture( this.cultureSelector ) || this.cultures[ "default" ];
	}
	if ( typeof name === "string" ) {
		name = name.split( "," );
	}
	if ( isArray(name) ) {
		var lang,
			cultures = this.cultures,
			list = name,
			i, l = list.length,
			prioritized = [];
		for ( i = 0; i < l; i++ ) {
			name = trim( list[i] );
			var pri, parts = name.split( ";" );
			lang = trim( parts[0] );
			if ( parts.length === 1 ) {
				pri = 1;
			}
			else {
				name = trim( parts[1] );
				if ( name.indexOf("q=") === 0 ) {
					name = name.substr( 2 );
					pri = parseFloat( name );
					pri = isNaN( pri ) ? 0 : pri;
				}
				else {
					pri = 1;
				}
			}
			prioritized.push({ lang: lang, pri: pri });
		}
		prioritized.sort(function( a, b ) {
			if ( a.pri < b.pri ) {
				return 1;
			} else if ( a.pri > b.pri ) {
				return -1;
			}
			return 0;
		});
		// exact match
		for ( i = 0; i < l; i++ ) {
			lang = prioritized[ i ].lang;
			match = cultures[ lang ];
			if ( match ) {
				return match;
			}
		}

		// neutral language match
		for ( i = 0; i < l; i++ ) {
			lang = prioritized[ i ].lang;
			do {
				var index = lang.lastIndexOf( "-" );
				if ( index === -1 ) {
					break;
				}
				// strip off the last part. e.g. en-US => en
				lang = lang.substr( 0, index );
				match = cultures[ lang ];
				if ( match ) {
					return match;
				}
			}
			while ( 1 );
		}

		// last resort: match first culture using that language
		for ( i = 0; i < l; i++ ) {
			lang = prioritized[ i ].lang;
			for ( var cultureKey in cultures ) {
				var culture = cultures[ cultureKey ];
				if ( culture.language == lang ) {
					return culture;
				}
			}
		}
	}
	else if ( typeof name === "object" ) {
		return name;
	}
	return match || null;
};

Globalize.format = function( value, format, cultureSelector ) {
	var culture = this.findClosestCulture( cultureSelector );
	if ( value instanceof Date ) {
		value = formatDate( value, format, culture );
	}
	else if ( typeof value === "number" ) {
		value = formatNumber( value, format, culture );
	}
	return value;
};

Globalize.localize = function( key, cultureSelector ) {
	return this.findClosestCulture( cultureSelector ).messages[ key ] ||
		this.cultures[ "default" ].messages[ key ];
};

Globalize.parseDate = function( value, formats, culture ) {
	culture = this.findClosestCulture( culture );

	var date, prop, patterns;
	if ( formats ) {
		if ( typeof formats === "string" ) {
			formats = [ formats ];
		}
		if ( formats.length ) {
			for ( var i = 0, l = formats.length; i < l; i++ ) {
				var format = formats[ i ];
				if ( format ) {
					date = parseExact( value, format, culture );
					if ( date ) {
						break;
					}
				}
			}
		}
	} else {
		patterns = culture.calendar.patterns;
		for ( prop in patterns ) {
			date = parseExact( value, patterns[prop], culture );
			if ( date ) {
				break;
			}
		}
	}

	return date || null;
};

Globalize.parseInt = function( value, radix, cultureSelector ) {
	return truncate( Globalize.parseFloat(value, radix, cultureSelector) );
};

Globalize.parseFloat = function( value, radix, cultureSelector ) {
	// radix argument is optional
	if ( typeof radix !== "number" ) {
		cultureSelector = radix;
		radix = 10;
	}

	var culture = this.findClosestCulture( cultureSelector );
	var ret = NaN,
		nf = culture.numberFormat;

	if ( value.indexOf(culture.numberFormat.currency.symbol) > -1 ) {
		// remove currency symbol
		value = value.replace( culture.numberFormat.currency.symbol, "" );
		// replace decimal seperator
		value = value.replace( culture.numberFormat.currency["."], culture.numberFormat["."] );
	}

	// trim leading and trailing whitespace
	value = trim( value );

	// allow infinity or hexidecimal
	if ( regexInfinity.test(value) ) {
		ret = parseFloat( value );
	}
	else if ( !radix && regexHex.test(value) ) {
		ret = parseInt( value, 16 );
	}
	else {

		// determine sign and number
		var signInfo = parseNegativePattern( value, nf, nf.pattern[0] ),
			sign = signInfo[ 0 ],
			num = signInfo[ 1 ];

		// #44 - try parsing as "(n)"
		if ( sign === "" && nf.pattern[0] !== "(n)" ) {
			signInfo = parseNegativePattern( value, nf, "(n)" );
			sign = signInfo[ 0 ];
			num = signInfo[ 1 ];
		}

		// try parsing as "-n"
		if ( sign === "" && nf.pattern[0] !== "-n" ) {
			signInfo = parseNegativePattern( value, nf, "-n" );
			sign = signInfo[ 0 ];
			num = signInfo[ 1 ];
		}

		sign = sign || "+";

		// determine exponent and number
		var exponent,
			intAndFraction,
			exponentPos = num.indexOf( "e" );
		if ( exponentPos < 0 ) exponentPos = num.indexOf( "E" );
		if ( exponentPos < 0 ) {
			intAndFraction = num;
			exponent = null;
		}
		else {
			intAndFraction = num.substr( 0, exponentPos );
			exponent = num.substr( exponentPos + 1 );
		}
		// determine decimal position
		var integer,
			fraction,
			decSep = nf[ "." ],
			decimalPos = intAndFraction.indexOf( decSep );
		if ( decimalPos < 0 ) {
			integer = intAndFraction;
			fraction = null;
		}
		else {
			integer = intAndFraction.substr( 0, decimalPos );
			fraction = intAndFraction.substr( decimalPos + decSep.length );
		}
		// handle groups (e.g. 1,000,000)
		var groupSep = nf[ "," ];
		integer = integer.split( groupSep ).join( "" );
		var altGroupSep = groupSep.replace( /\u00A0/g, " " );
		if ( groupSep !== altGroupSep ) {
			integer = integer.split( altGroupSep ).join( "" );
		}
		// build a natively parsable number string
		var p = sign + integer;
		if ( fraction !== null ) {
			p += "." + fraction;
		}
		if ( exponent !== null ) {
			// exponent itself may have a number patternd
			var expSignInfo = parseNegativePattern( exponent, nf, "-n" );
			p += "e" + ( expSignInfo[0] || "+" ) + expSignInfo[ 1 ];
		}
		if ( regexParseFloat.test(p) ) {
			ret = parseFloat( p );
		}
	}
	return ret;
};

Globalize.culture = function( cultureSelector ) {
	// setter
	if ( typeof cultureSelector !== "undefined" ) {
		this.cultureSelector = cultureSelector;
	}
	// getter
	return this.findClosestCulture( cultureSelector ) || this.cultures[ "default" ];
};

}( this ));
;
/*
 * Globalize Culture en-CA
 *
 * http://github.com/jquery/globalize
 *
 * Copyright Software Freedom Conservancy, Inc.
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * This file was generated by the Globalize Culture Generator
 * Translation: bugs found in this file need to be fixed in the generator
 */

(function( window, undefined ) {

var Globalize;

if ( typeof require !== "undefined" &&
	typeof exports !== "undefined" &&
	typeof module !== "undefined" ) {
	// Assume CommonJS
	Globalize = require( "globalize" );
} else {
	// Global variable
	Globalize = window.Globalize;
}

Globalize.addCultureInfo( "en-CA", "default", {
	name: "en-CA",
	englishName: "English (Canada)",
	nativeName: "English (Canada)",
	numberFormat: {
		currency: {
			pattern: ["-$n","$n"]
		}
	},
	calendars: {
		standard: {
			patterns: {
				d: "dd/MM/yyyy",
				D: "MMMM-dd-yy",
				f: "MMMM-dd-yy h:mm tt",
				F: "MMMM-dd-yy h:mm:ss tt"
			}
		}
	}
});

}( this ));
;
function inIframe() {
    try {
        return window.self !== window.top;
    } catch (e) {
        return true;
    }
}

function getParentDomain() {
    var isInIframe = (parent !== window), parentDomain = '';

    if (isInIframe && document.referrer) {
        try {
            parentDomain = document.referrer.match(/:\/\/(.[^/|:]+)/)[1];;
        } catch (e) {} 
    }
    return parentDomain;
}

function isParentATDomain() {
    var parentDomain = getParentDomain().toLowerCase();
    return parentDomain.endsWith('.autotrader.ca')
        || parentDomain.endsWith('.autohebdo.net')
        || parentDomain.endsWith('shops.autos.ca');
}

function isWidgetPage() {
    var path = window.location.pathname.toLowerCase();
    
    return path.endsWith('autossearchvehicles.aspx')
        || path.endsWith('browsevehicles.aspx')
        || path.endsWith('searchadsiframe.aspx')
        || path.endsWith('autosavailablelistings.aspx');
}

function preventOverScroll(scrollPane) {
    // Bug fix for content in iframe scrolling on iPads

    // See http://www.quirksmode.org/js/events_order.html
    var CAPTURE_PHASE = true;  // happens first, outside to inside
    var BUBBLE_PHASE = false; // happens second, inside to outside

    // These variables will be captured by the closures below
    var allowScrollUp = true, allowScrollDown = true, lastY = 0;

    scrollPane.addEventListener
    ('touchstart',
     function (e)
     {

         // See http://www.w3.org/TR/cssom-view/#dom-element-scrolltop
         allowScrollUp = (this.scrollTop > 0);
         allowScrollDown = (this.scrollTop < this.scrollHeight - this.clientHeight);

         // Remember where the touch started
         lastY = e.pageY;
     },
     CAPTURE_PHASE);

    // If the touch is on the scroll pane, don't let it get to the
    // body object which will cancel it
    scrollPane.addEventListener
    ('touchmove',
     function (e)
     {
         var up = (e.pageY > lastY);
         var down = !up;
         lastY = event.pageY;

         // Trying to start past scroller bounds
         if ((up && allowScrollUp) || (down && allowScrollDown))
         {
             // Stop this event from propagating, lest 
             // another object cancel it.
             e.stopPropagation();
         } else
         {
             // Cancel this event
             e.preventDefault();
         }
     },
     CAPTURE_PHASE);
}


window.onload = function () {
    //alert("InIFrame: " + inIframe() + " | isParentATDomain: " + isParentATDomain() + " | Is widget: " + isWidgetPage() +  " | location: " + window.location.href);
    if (inIframe() && !isParentATDomain() && !isWidgetPage())
        window.top.location.replace("http://www.autotrader.ca");
};
/*
 * SimpleModal 1.4.4 - jQuery Plugin
 * http://simplemodal.com/
 * Copyright (c) 2013 Eric Martin
 * Licensed under MIT and GPL
 * Date: Sun, Jan 20 2013 15:58:56 -0800
 */
(function(b){"function"===typeof define&&define.amd?define(["jquery"],b):b(jQuery)})(function(b){var j=[],n=b(document),k=navigator.userAgent.toLowerCase(),l=b(window),g=[],o=null,p=/msie/.test(k)&&!/opera/.test(k),q=/opera/.test(k),m,r;m=p&&/msie 6./.test(k)&&"object"!==typeof window.XMLHttpRequest;r=p&&/msie 7.0/.test(k);b.modal=function(a,h){return b.modal.impl.init(a,h)};b.modal.close=function(){b.modal.impl.close()};b.modal.focus=function(a){b.modal.impl.focus(a)};b.modal.setContainerDimensions=
function(){b.modal.impl.setContainerDimensions()};b.modal.setPosition=function(){b.modal.impl.setPosition()};b.modal.update=function(a,h){b.modal.impl.update(a,h)};b.fn.modal=function(a){return b.modal.impl.init(this,a)};b.modal.defaults={appendTo:"body",focus:!0,opacity:50,overlayId:"simplemodal-overlay",overlayCss:{},containerId:"simplemodal-container",containerCss:{},dataId:"simplemodal-data",dataCss:{},minHeight:null,minWidth:null,maxHeight:null,maxWidth:null,autoResize:!1,autoPosition:!0,zIndex:1E3,
close:!0,closeHTML:'<a class="modalCloseImg" title="Close"></a>',closeClass:"simplemodal-close",escClose:!0,overlayClose:!1,fixed:!0,position:null,persist:!1,modal:!0,onOpen:null,onShow:null,onClose:null};b.modal.impl={d:{},init:function(a,h){if(this.d.data)return!1;o=p&&!b.support.boxModel;this.o=b.extend({},b.modal.defaults,h);this.zIndex=this.o.zIndex;this.occb=!1;if("object"===typeof a){if(a=a instanceof b?a:b(a),this.d.placeholder=!1,0<a.parent().parent().size()&&(a.before(b("<span></span>").attr("id",
"simplemodal-placeholder").css({display:"none"})),this.d.placeholder=!0,this.display=a.css("display"),!this.o.persist))this.d.orig=a.clone(!0)}else if("string"===typeof a||"number"===typeof a)a=b("<div></div>").html(a);else return alert("SimpleModal Error: Unsupported data type: "+typeof a),this;this.create(a);this.open();b.isFunction(this.o.onShow)&&this.o.onShow.apply(this,[this.d]);return this},create:function(a){this.getDimensions();if(this.o.modal&&m)this.d.iframe=b('<iframe src="javascript:false;"></iframe>').css(b.extend(this.o.iframeCss,
{display:"none",opacity:0,position:"fixed",height:g[0],width:g[1],zIndex:this.o.zIndex,top:0,left:0})).appendTo(this.o.appendTo);this.d.overlay=b("<div></div>").attr("id",this.o.overlayId).addClass("simplemodal-overlay").css(b.extend(this.o.overlayCss,{display:"none",opacity:this.o.opacity/100,height:this.o.modal?j[0]:0,width:this.o.modal?j[1]:0,position:"fixed",left:0,top:0,zIndex:this.o.zIndex+1})).appendTo(this.o.appendTo);this.d.container=b("<div></div>").attr("id",this.o.containerId).addClass("simplemodal-container").css(b.extend({position:this.o.fixed?
"fixed":"absolute"},this.o.containerCss,{display:"none",zIndex:this.o.zIndex+2})).append(this.o.close&&this.o.closeHTML?b(this.o.closeHTML).addClass(this.o.closeClass):"").appendTo(this.o.appendTo);this.d.wrap=b("<div></div>").attr("tabIndex",-1).addClass("simplemodal-wrap").css({height:"100%",outline:0,width:"100%"}).appendTo(this.d.container);this.d.data=a.attr("id",a.attr("id")||this.o.dataId).addClass("simplemodal-data").css(b.extend(this.o.dataCss,{display:"none"})).appendTo("body");this.setContainerDimensions();
this.d.data.appendTo(this.d.wrap);(m||o)&&this.fixIE()},bindEvents:function(){var a=this;b("."+a.o.closeClass).bind("click.simplemodal",function(b){b.preventDefault();a.close()});a.o.modal&&a.o.close&&a.o.overlayClose&&a.d.overlay.bind("click.simplemodal",function(b){b.preventDefault();a.close()});n.bind("keydown.simplemodal",function(b){a.o.modal&&9===b.keyCode?a.watchTab(b):a.o.close&&a.o.escClose&&27===b.keyCode&&(b.preventDefault(),a.close())});l.bind("resize.simplemodal orientationchange.simplemodal",
function(){a.getDimensions();a.o.autoResize?a.setContainerDimensions():a.o.autoPosition&&a.setPosition();m||o?a.fixIE():a.o.modal&&(a.d.iframe&&a.d.iframe.css({height:g[0],width:g[1]}),a.d.overlay.css({height:j[0],width:j[1]}))})},unbindEvents:function(){b("."+this.o.closeClass).unbind("click.simplemodal");n.unbind("keydown.simplemodal");l.unbind(".simplemodal");this.d.overlay.unbind("click.simplemodal")},fixIE:function(){var a=this.o.position;b.each([this.d.iframe||null,!this.o.modal?null:this.d.overlay,
"fixed"===this.d.container.css("position")?this.d.container:null],function(b,e){if(e){var f=e[0].style;f.position="absolute";if(2>b)f.removeExpression("height"),f.removeExpression("width"),f.setExpression("height",'document.body.scrollHeight > document.body.clientHeight ? document.body.scrollHeight : document.body.clientHeight + "px"'),f.setExpression("width",'document.body.scrollWidth > document.body.clientWidth ? document.body.scrollWidth : document.body.clientWidth + "px"');else{var c,d;a&&a.constructor===
Array?(c=a[0]?"number"===typeof a[0]?a[0].toString():a[0].replace(/px/,""):e.css("top").replace(/px/,""),c=-1===c.indexOf("%")?c+' + (t = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"':parseInt(c.replace(/%/,""))+' * ((document.documentElement.clientHeight || document.body.clientHeight) / 100) + (t = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"',a[1]&&(d="number"===typeof a[1]?
a[1].toString():a[1].replace(/px/,""),d=-1===d.indexOf("%")?d+' + (t = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft) + "px"':parseInt(d.replace(/%/,""))+' * ((document.documentElement.clientWidth || document.body.clientWidth) / 100) + (t = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft) + "px"')):(c='(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (t = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"',
d='(document.documentElement.clientWidth || document.body.clientWidth) / 2 - (this.offsetWidth / 2) + (t = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft) + "px"');f.removeExpression("top");f.removeExpression("left");f.setExpression("top",c);f.setExpression("left",d)}}})},focus:function(a){var h=this,a=a&&-1!==b.inArray(a,["first","last"])?a:"first",e=b(":input:enabled:visible:"+a,h.d.wrap);setTimeout(function(){0<e.length?e.focus():h.d.wrap.focus()},
10)},getDimensions:function(){var a="undefined"===typeof window.innerHeight?l.height():window.innerHeight;j=[n.height(),n.width()];g=[a,l.width()]},getVal:function(a,b){return a?"number"===typeof a?a:"auto"===a?0:0<a.indexOf("%")?parseInt(a.replace(/%/,""))/100*("h"===b?g[0]:g[1]):parseInt(a.replace(/px/,"")):null},update:function(a,b){if(!this.d.data)return!1;this.d.origHeight=this.getVal(a,"h");this.d.origWidth=this.getVal(b,"w");this.d.data.hide();a&&this.d.container.css("height",a);b&&this.d.container.css("width",
b);this.setContainerDimensions();this.d.data.show();this.o.focus&&this.focus();this.unbindEvents();this.bindEvents()},setContainerDimensions:function(){var a=m||r,b=this.d.origHeight?this.d.origHeight:q?this.d.container.height():this.getVal(a?this.d.container[0].currentStyle.height:this.d.container.css("height"),"h"),a=this.d.origWidth?this.d.origWidth:q?this.d.container.width():this.getVal(a?this.d.container[0].currentStyle.width:this.d.container.css("width"),"w"),e=this.d.data.outerHeight(!0),f=
this.d.data.outerWidth(!0);this.d.origHeight=this.d.origHeight||b;this.d.origWidth=this.d.origWidth||a;var c=this.o.maxHeight?this.getVal(this.o.maxHeight,"h"):null,d=this.o.maxWidth?this.getVal(this.o.maxWidth,"w"):null,c=c&&c<g[0]?c:g[0],d=d&&d<g[1]?d:g[1],i=this.o.minHeight?this.getVal(this.o.minHeight,"h"):"auto",b=b?this.o.autoResize&&b>c?c:b<i?i:b:e?e>c?c:this.o.minHeight&&"auto"!==i&&e<i?i:e:i,c=this.o.minWidth?this.getVal(this.o.minWidth,"w"):"auto",a=a?this.o.autoResize&&a>d?d:a<c?c:a:f?
f>d?d:this.o.minWidth&&"auto"!==c&&f<c?c:f:c;this.d.container.css({height:b,width:a});this.d.wrap.css({overflow:e>b||f>a?"auto":"visible"});this.o.autoPosition&&this.setPosition()},setPosition:function(){var a,b;a=g[0]/2-this.d.container.outerHeight(!0)/2;b=g[1]/2-this.d.container.outerWidth(!0)/2;var e="fixed"!==this.d.container.css("position")?l.scrollTop():0;this.o.position&&"[object Array]"===Object.prototype.toString.call(this.o.position)?(a=e+(this.o.position[0]||a),b=this.o.position[1]||b):
a=e+a;this.d.container.css({left:b,top:a})},watchTab:function(a){if(0<b(a.target).parents(".simplemodal-container").length){if(this.inputs=b(":input:enabled:visible:first, :input:enabled:visible:last",this.d.data[0]),!a.shiftKey&&a.target===this.inputs[this.inputs.length-1]||a.shiftKey&&a.target===this.inputs[0]||0===this.inputs.length)a.preventDefault(),this.focus(a.shiftKey?"last":"first")}else a.preventDefault(),this.focus()},open:function(){this.d.iframe&&this.d.iframe.show();b.isFunction(this.o.onOpen)?
this.o.onOpen.apply(this,[this.d]):(this.d.overlay.show(),this.d.container.show(),this.d.data.show());this.o.focus&&this.focus();this.bindEvents()},close:function(){if(!this.d.data)return!1;this.unbindEvents();if(b.isFunction(this.o.onClose)&&!this.occb)this.occb=!0,this.o.onClose.apply(this,[this.d]);else{if(this.d.placeholder){var a=b("#simplemodal-placeholder");this.o.persist?a.replaceWith(this.d.data.removeClass("simplemodal-data").css("display",this.display)):(this.d.data.hide().remove(),a.replaceWith(this.d.orig))}else this.d.data.hide().remove();
this.d.container.hide().remove();this.d.overlay.hide();this.d.iframe&&this.d.iframe.hide().remove();this.d.overlay.remove();this.d={}}}}});
;
/*!
	Colorbox v1.4.28 - 2013-09-04
	jQuery lightbox and modal window plugin
	(c) 2013 Jack Moore - http://www.jacklmoore.com/colorbox
	license: http://www.opensource.org/licenses/mit-license.php
*/
(function ($, document, window) {
	var
	// Default settings object.
	// See http://jacklmoore.com/colorbox for details.
	defaults = {
		transition: "elastic",
		speed: 300,
		fadeOut: 300,
		width: false,
		initialWidth: "600",
		innerWidth: false,
		maxWidth: false,
		height: false,
		initialHeight: "450",
		innerHeight: false,
		maxHeight: false,
		scalePhotos: true,
		scrolling: true,
		inline: false,
		html: false,
		iframe: false,
		fastIframe: true,
		photo: false,
		href: false,
		title: false,
		rel: false,
		opacity: 0.9,
		preloading: true,
		className: false,

		// alternate image paths for high-res displays
		retinaImage: false,
		retinaUrl: false,
		retinaSuffix: '@2x.$1',

		// internationalization
		current: "image {current} of {total}",
		previous: "previous",
		next: "next",
		close: "close",
		xhrError: "This content failed to load.",
		imgError: "This image failed to load.",

		open: false,
		returnFocus: true,
		trapFocus: true,
		reposition: true,
		loop: true,
		slideshow: false,
		slideshowAuto: true,
		slideshowSpeed: 2500,
		slideshowStart: "start slideshow",
		slideshowStop: "stop slideshow",
		photoRegex: /\.(gif|png|jp(e|g|eg)|bmp|ico|webp)((#|\?).*)?$/i,

		onOpen: false,
		onLoad: false,
		onComplete: false,
		onCleanup: false,
		onClosed: false,

		overlayClose: true,
		escKey: true,
		arrowKey: true,
		top: false,
		bottom: false,
		left: false,
		right: false,
		fixed: false,
		data: undefined,
		closeButton: true
	},
	
	// Abstracting the HTML and event identifiers for easy rebranding
	colorbox = 'colorbox',
	prefix = 'cbox',
	boxElement = prefix + 'Element',
	
	// Events
	event_open = prefix + '_open',
	event_load = prefix + '_load',
	event_complete = prefix + '_complete',
	event_cleanup = prefix + '_cleanup',
	event_closed = prefix + '_closed',
	event_purge = prefix + '_purge',

	// Cached jQuery Object Variables
	$overlay,
	$box,
	$wrap,
	$content,
	$topBorder,
	$leftBorder,
	$rightBorder,
	$bottomBorder,
	$related,
	$window,
	$loaded,
	$loadingBay,
	$loadingOverlay,
	$title,
	$current,
	$slideshow,
	$next,
	$prev,
	$close,
	$groupControls,
	$events = $('<a/>'),
	
	// Variables for cached values or use across multiple functions
	settings,
	interfaceHeight,
	interfaceWidth,
	loadedHeight,
	loadedWidth,
	element,
	index,
	photo,
	open,
	active,
	closing,
	loadingTimer,
	publicMethod,
	div = "div",
	className,
	requests = 0,
	previousCSS = {},
	init;

	// ****************
	// HELPER FUNCTIONS
	// ****************
	
	// Convenience function for creating new jQuery objects
	function $tag(tag, id, css) {
		var element = document.createElement(tag);

		if (id) {
			element.id = prefix + id;
		}

		if (css) {
			element.style.cssText = css;
		}

		return $(element);
	}
	
	// Get the window height using innerHeight when available to avoid an issue with iOS
	// http://bugs.jquery.com/ticket/6724
	function winheight() {
		return window.innerHeight ? window.innerHeight : $(window).height();
	}

	// Determine the next and previous members in a group.
	function getIndex(increment) {
		var
		max = $related.length,
		newIndex = (index + increment) % max;
		
		return (newIndex < 0) ? max + newIndex : newIndex;
	}

	// Convert '%' and 'px' values to integers
	function setSize(size, dimension) {
		return Math.round((/%/.test(size) ? ((dimension === 'x' ? $window.width() : winheight()) / 100) : 1) * parseInt(size, 10));
	}
	
	// Checks an href to see if it is a photo.
	// There is a force photo option (photo: true) for hrefs that cannot be matched by the regex.
	function isImage(settings, url) {
		return settings.photo || settings.photoRegex.test(url);
	}

	function retinaUrl(settings, url) {
		return settings.retinaUrl && window.devicePixelRatio > 1 ? url.replace(settings.photoRegex, settings.retinaSuffix) : url;
	}

	function trapFocus(e) {
		if ('contains' in $box[0] && !$box[0].contains(e.target)) {
			e.stopPropagation();
			$box.focus();
		}
	}

	// Assigns function results to their respective properties
	function makeSettings() {
		var i,
			data = $.data(element, colorbox);
		
		if (data == null) {
			settings = $.extend({}, defaults);
			if (console && console.log) {
				console.log('Error: cboxElement missing settings object');
			}
		} else {
			settings = $.extend({}, data);
		}
		
		for (i in settings) {
			if ($.isFunction(settings[i]) && i.slice(0, 2) !== 'on') { // checks to make sure the function isn't one of the callbacks, they will be handled at the appropriate time.
				settings[i] = settings[i].call(element);
			}
		}
		
		settings.rel = settings.rel || element.rel || $(element).data('rel') || 'nofollow';
		settings.href = settings.href || $(element).attr('href');
		settings.title = settings.title || element.title;
		
		if (typeof settings.href === "string") {
			settings.href = $.trim(settings.href);
		}
	}

	function trigger(event, callback) {
		// for external use
		$(document).trigger(event);

		// for internal use
		$events.trigger(event);

		if ($.isFunction(callback)) {
			callback.call(element);
		}
	}

	// Slideshow functionality
	var slideshow = (function(){
		var
		className = prefix + "Slideshow_",
		click = "click." + prefix,
		ssActive = false,
		timeOut;

		function clear () {
			clearTimeout(timeOut);
		}

		function set() {
			if (settings.loop || $related[index + 1]) {
				clear();
				timeOut = setTimeout(publicMethod.next, settings.slideshowSpeed);
			}
		}

		function start() {
			//$slideshow
			//	.html(settings.slideshowStop)
			//	.unbind(click)
			//	.one(click, stop);

			$events
				.bind(event_complete, set)
				.bind(event_load, clear)
				.bind(event_cleanup, stop);

			$box.removeClass(className + "off").addClass(className + "on");
		}
		
		function stop() {
			clear();
			
			$events
				.unbind(event_complete, set)
				.unbind(event_load, clear)
				.unbind(event_cleanup, stop);
			
			//$slideshow
			//	.html(settings.slideshowStart)
			//	.unbind(click)
			//	.one(click, function () {
			//		publicMethod.next();
			//		start();
			//	});

			$box.removeClass(className + "on").addClass(className + "off");
		}

		return function() {
			if (ssActive) {
				if (settings.slideshow) {
					return;
				} else {
					ssActive = false;
					$slideshow.hide();
					clear();
					$events
						.unbind(event_complete, set)
						.unbind(event_load, clear)
						.unbind(event_cleanup, stop);
					$box.removeClass(className + "off " + className + "on");
				}
			} else if (settings.slideshow && $related[1]) {
				ssActive = true;

				if (settings.slideshowAuto) {
					start();
				} else {
					stop();
				}

				$slideshow.show();
			}
		};
	}());


	function launch(target) {
		if (!closing) {
			
			element = target;
			
			makeSettings();
			
			$related = $(element);
			
			index = 0;
			
			if (settings.rel !== 'nofollow') {
				$related = $('.' + boxElement).filter(function () {
					var data = $.data(this, colorbox),
						relRelated;

					if (data) {
						relRelated =  $(this).data('rel') || data.rel || this.rel;
					}
					
					return (relRelated === settings.rel);
				});
				index = $related.index(element);
				
				// Check direct calls to Colorbox.
				if (index === -1) {
					$related = $related.add(element);
					index = $related.length - 1;
				}
			}
			
			$overlay.css({
				opacity: parseFloat(settings.opacity),
				cursor: settings.overlayClose ? "pointer" : "auto",
				visibility: 'visible'
			}).show();
			

			if (className) {
				$box.add($overlay).removeClass(className);
			}
			if (settings.className) {
				$box.add($overlay).addClass(settings.className);
			}
			className = settings.className;

			if (settings.closeButton) {

			} else {
				$close.appendTo('<div/>');
			}

			if (!open) {
				open = active = true; // Prevents the page-change action from queuing up if the visitor holds down the left or right keys.
				
				// Show colorbox so the sizes can be calculated in older versions of jQuery
				$box.css({visibility:'hidden', display:'block'});
				
				$loaded = $tag(div, 'LoadedContent', 'width:0; height:0; overflow:hidden');
				$content.css({width:'', height:''}).append($loaded);

				// Cache values needed for size calculations
				interfaceHeight = $topBorder.height() + $bottomBorder.height() + $content.outerHeight(true) - $content.height();
				interfaceWidth = $leftBorder.width() + $rightBorder.width() + $content.outerWidth(true) - $content.width();
				loadedHeight = $loaded.outerHeight(true);
				loadedWidth = $loaded.outerWidth(true);
				
				// Opens inital empty Colorbox prior to content being loaded.
				settings.w = setSize(settings.initialWidth, 'x');
				settings.h = setSize(settings.initialHeight, 'y');
				publicMethod.position();

				trigger(event_open, settings.onOpen);
				
				//$groupControls.add($title).hide();

				$box.focus();
				
				if (settings.trapFocus) {
					// Confine focus to the modal
					// Uses event capturing that is not supported in IE8-
					if (document.addEventListener) {

						document.addEventListener('focus', trapFocus, true);
						
						$events.one(event_closed, function () {
							document.removeEventListener('focus', trapFocus, true);
						});
					}
				}

				// Return focus on closing
				if (settings.returnFocus) {
					$events.one(event_closed, function () {
						$(element).focus();
					});
				}
			}
			
			load();
		}
	}

	// Colorbox's markup needs to be added to the DOM prior to being called
	// so that the browser will go ahead and load the CSS background images.
	function appendHTML() {
	    //if (!$box && document.body) {
	    if (!$box && document.forms[0]) {
			init = false;
			$window = $(window);
			$box = $tag(div).attr({
				id: colorbox,
				'class': $.support.opacity === false ? prefix + 'IE' : '', // class for optional IE8 & lower targeted CSS.
				role: 'dialog',
				tabindex: '-1'
			}).hide();
			$overlay = $tag(div, "Overlay").hide();
			$loadingOverlay = $([$tag(div, "LoadingOverlay")[0],$tag(div, "LoadingGraphic")[0]]);
			$wrap = $tag(div, "Wrapper");
			$content = $tag(div, "Content").append(
				$title = $tag(div, "Title"),
				$current = $tag(div, "Current"),
				//$prev = $('<button type="button"/>').attr({id:prefix+'Previous'}),
				//$next = $('<button type="button"/>').attr({id:prefix+'Next'}),
				//$slideshow = $tag('button', "Slideshow"),
				$loadingOverlay,
                $close = $('<button type="button"/>').attr({ id: prefix + 'Close' })
			);

			$content = $tag(div, "body").append(
                $close = $tag(div, "Close")
            );
			
			$wrap.append( // The 3x3 Grid that makes up Colorbox
				$tag(div).append(
					$tag(div, "TopLeft"),
					$topBorder = $tag(div, "TopCenter"),
					$tag(div, "TopRight")
				),
				$tag(div, false, 'clear:left').append(
					$leftBorder = $tag(div, "MiddleLeft"),
					$content,
					$rightBorder = $tag(div, "MiddleRight")
				),
				$tag(div, false, 'clear:left').append(
					$tag(div, "BottomLeft"),
					$bottomBorder = $tag(div, "BottomCenter"),
					$tag(div, "BottomRight")
				)
			).find('div div').css({'float': 'left'});
			
			$loadingBay = $tag(div, false, 'position:absolute; width:9999px; visibility:hidden; display:none');
			
			//$groupControls = $next.add($prev).add($current).add($slideshow);

	        //$(document.body).append($overlay, $box.append($wrap, $loadingBay));
			$(document.forms[0]).append($overlay, $box.append($wrap, $loadingBay));
		}
	}

	// Add Colorbox's event bindings
	function addBindings() {
		function clickHandler(e) {
			// ignore non-left-mouse-clicks and clicks modified with ctrl / command, shift, or alt.
			// See: http://jacklmoore.com/notes/click-events/
			if (!(e.which > 1 || e.shiftKey || e.altKey || e.metaKey || e.ctrlKey)) {
				e.preventDefault();
				launch(this);
			}
		}

		if ($box) {
			if (!init) {
				init = true;

				// Anonymous functions here keep the public method from being cached, thereby allowing them to be redefined on the fly.
				//$next.click(function () {
				//	publicMethod.next();
				//});
				//$prev.click(function () {
				//	publicMethod.prev();
				//});
				$close.click(function () {
					publicMethod.close();
				});
				$overlay.click(function () {
					if (settings.overlayClose) {
						publicMethod.close();
					}
				});
				
				// Key Bindings
				$(document).bind('keydown.' + prefix, function (e) {
					var key = e.keyCode;
					if (open && settings.escKey && key === 27) {
						e.preventDefault();
						publicMethod.close();
					}
					if (open && settings.arrowKey && $related[1] && !e.altKey) {
						//if (key === 37) {
						//	e.preventDefault();
						//	$prev.click();
						//} else if (key === 39) {
						//	e.preventDefault();
						//	$next.click();
						//}
						}
				});

				if ($.isFunction($.fn.on)) {
					// For jQuery 1.7+
					$(document).on('click.'+prefix, '.'+boxElement, clickHandler);
				} else {
					// For jQuery 1.3.x -> 1.6.x
					// This code is never reached in jQuery 1.9, so do not contact me about 'live' being removed.
					// This is not here for jQuery 1.9, it's here for legacy users.
					$('.'+boxElement).live('click.'+prefix, clickHandler);
				}
			}
			return true;
		}
		return false;
	}

	// Don't do anything if Colorbox already exists.
	if ($.colorbox) {
		return;
	}

	// Append the HTML when the DOM loads
	$(appendHTML);


	// ****************
	// PUBLIC FUNCTIONS
	// Usage format: $.colorbox.close();
	// Usage from within an iframe: parent.jQuery.colorbox.close();
	// ****************
	
	publicMethod = $.fn[colorbox] = $[colorbox] = function (options, callback) {
		var $this = this;
		
		options = options || {};
		
		appendHTML();

		if (addBindings()) {
			if ($.isFunction($this)) { // assume a call to $.colorbox
				$this = $('<a/>');
				options.open = true;
			} else if (!$this[0]) { // colorbox being applied to empty collection
				return $this;
			}
			
			if (callback) {
				options.onComplete = callback;
			}
			
			$this.each(function () {
				$.data(this, colorbox, $.extend({}, $.data(this, colorbox) || defaults, options));
			}).addClass(boxElement);
			
			if (($.isFunction(options.open) && options.open.call($this)) || options.open) {
				launch($this[0]);
			}
		}
		
		return $this;
	};

	publicMethod.position = function (speed, loadedCallback) {
		var
		css,
		top = 0,
		left = 0,
		offset = $box.offset(),
		scrollTop,
		scrollLeft;
		
		$window.unbind('resize.' + prefix);

		// remove the modal so that it doesn't influence the document width/height
		$box.css({top: -9e4, left: -9e4});

		scrollTop = $window.scrollTop();
		scrollLeft = $window.scrollLeft();

		if (settings.fixed) {
			offset.top -= scrollTop;
			offset.left -= scrollLeft;
			$box.css({position: 'fixed'});
		} else {
			top = scrollTop;
			left = scrollLeft;
			$box.css({position: 'absolute'});
		}

		// keeps the top and left positions within the browser's viewport.
		if (settings.right !== false) {
			left += Math.max($window.width() - settings.w - loadedWidth - interfaceWidth - setSize(settings.right, 'x'), 0);
		} else if (settings.left !== false) {
			left += setSize(settings.left, 'x');
		} else {
			left += Math.round(Math.max($window.width() - settings.w - loadedWidth - interfaceWidth, 0) / 2);
		}
		
		if (settings.bottom !== false) {
			top += Math.max(winheight() - settings.h - loadedHeight - interfaceHeight - setSize(settings.bottom, 'y'), 0);
		} else if (settings.top !== false) {
			top += setSize(settings.top, 'y');
		} else {
			top += Math.round(Math.max(winheight() - settings.h - loadedHeight - interfaceHeight, 0) / 2);
		}

		$box.css({top: offset.top, left: offset.left, visibility:'visible'});
		
		// this gives the wrapper plenty of breathing room so it's floated contents can move around smoothly,
		// but it has to be shrank down around the size of div#colorbox when it's done.  If not,
		// it can invoke an obscure IE bug when using iframes.
		$wrap[0].style.width = $wrap[0].style.height = "9999px";
		
		function modalDimensions() {
			$topBorder[0].style.width = $bottomBorder[0].style.width = $content[0].style.width = (parseInt($box[0].style.width,10) - interfaceWidth)+'px';
			$content[0].style.height = $leftBorder[0].style.height = $rightBorder[0].style.height = (parseInt($box[0].style.height,10) - interfaceHeight)+'px';
		}

		css = {width: settings.w + loadedWidth + interfaceWidth, height: settings.h + loadedHeight + interfaceHeight, top: top, left: left};

		// setting the speed to 0 if the content hasn't changed size or position
		if (speed) {
			var tempSpeed = 0;
			$.each(css, function(i){
				if (css[i] !== previousCSS[i]) {
					tempSpeed = speed;
					return;
				}
			});
			speed = tempSpeed;
		}

		previousCSS = css;

		if (!speed) {
			$box.css(css);
		}

		$box.dequeue().animate(css, {
			duration: speed || 0,
			complete: function () {
				modalDimensions();
				
				active = false;
				
				// shrink the wrapper down to exactly the size of colorbox to avoid a bug in IE's iframe implementation.
				$wrap[0].style.width = (settings.w + loadedWidth + interfaceWidth) + "px";
				$wrap[0].style.height = (settings.h + loadedHeight + interfaceHeight) + "px";
				
				if (settings.reposition) {
					setTimeout(function () {  // small delay before binding onresize due to an IE8 bug.
						$window.bind('resize.' + prefix, publicMethod.position);
					}, 1);
				}

				if (loadedCallback) {
					loadedCallback();
				}
			},
			step: modalDimensions
		});
	};

	publicMethod.resize = function (options) {
		var scrolltop;
		
		if (open) {
			options = options || {};
			
			if (options.width) {
				settings.w = setSize(options.width, 'x') - loadedWidth - interfaceWidth;
			}

			if (options.innerWidth) {
				settings.w = setSize(options.innerWidth, 'x');
			}

			$loaded.css({width: settings.w});
			
			if (options.height) {
				settings.h = setSize(options.height, 'y') - loadedHeight - interfaceHeight;
			}

			if (options.innerHeight) {
				settings.h = setSize(options.innerHeight, 'y');
			}

			if (!options.innerHeight && !options.height) {
				scrolltop = $loaded.scrollTop();
				$loaded.css({height: "auto"});
				settings.h = $loaded.height();
			}

			$loaded.css({height: settings.h});

			if(scrolltop) {
				$loaded.scrollTop(scrolltop);
			}
			
			publicMethod.position(settings.transition === "none" ? 0 : settings.speed);
		}
	};

	publicMethod.prep = function (object) {
		if (!open) {
			return;
		}
		
		var callback, speed = settings.transition === "none" ? 0 : settings.speed;

		$loaded.empty().remove(); // Using empty first may prevent some IE7 issues.

		$loaded = $tag(div, 'LoadedContent').append(object);
		
		function getWidth() {
			settings.w = settings.w || $loaded.width();
			settings.w = settings.mw && settings.mw < settings.w ? settings.mw : settings.w;
			return settings.w;
		}
		function getHeight() {
			settings.h = settings.h || $loaded.height();
			settings.h = settings.mh && settings.mh < settings.h ? settings.mh : settings.h;
			return settings.h;
		}
		
		$loaded.hide()
		.appendTo($loadingBay.show())// content has to be appended to the DOM for accurate size calculations.
		.css({width: getWidth(), overflow: settings.scrolling ? 'auto' : 'hidden'})
		.css({height: getHeight()})// sets the height independently from the width in case the new width influences the value of height.
		.prependTo($content);
		
		$loadingBay.hide();
		
		// floating the IMG removes the bottom line-height and fixed a problem where IE miscalculates the width of the parent element as 100% of the document width.
		
		$(photo).css({'float': 'none'});

		callback = function () {
			var total = $related.length,
				iframe,
				frameBorder = 'frameBorder',
				allowTransparency = 'allowTransparency',
				complete;
			
			if (!open) {
				return;
			}
			
			function removeFilter() { // Needed for IE7 & IE8 in versions of jQuery prior to 1.7.2
				if ($.support.opacity === false) {
					$box[0].style.removeAttribute('filter');
				}
			}
			
			complete = function () {
				clearTimeout(loadingTimer);
				$loadingOverlay.hide();
				trigger(event_complete, settings.onComplete);
			};

			
			$title.html(settings.title).add($loaded).show();
			
			//if (total > 1) { // handle grouping
			//	if (typeof settings.current === "string") {
			//		$current.html(settings.current.replace('{current}', index + 1).replace('{total}', total)).show();
			//	}
				
			//	$next[(settings.loop || index < total - 1) ? "show" : "hide"]().html(settings.next);
			//	$prev[(settings.loop || index) ? "show" : "hide"]().html(settings.previous);
				
			//	slideshow();
				
			//	// Preloads images within a rel group
			//	if (settings.preloading) {
			//		$.each([getIndex(-1), getIndex(1)], function(){
			//			var src,
			//				img,
			//				i = $related[this],
			//				data = $.data(i, colorbox);

			//			if (data && data.href) {
			//				src = data.href;
			//				if ($.isFunction(src)) {
			//					src = src.call(i);
			//				}
			//			} else {
			//				src = $(i).attr('href');
			//			}

			//			if (src && isImage(data, src)) {
			//				src = retinaUrl(data, src);
			//				img = document.createElement('img');
			//				img.src = src;
			//			}
			//		});
			//	}
			//} else {
			//	$groupControls.hide();
			//}

			if (settings.iframe) {
				iframe = $tag('iframe')[0];
				
				if (frameBorder in iframe) {
					iframe[frameBorder] = 0;
				}
				
				if (allowTransparency in iframe) {
					iframe[allowTransparency] = "true";
				}

				if (!settings.scrolling) {
					iframe.scrolling = "no";
				}
				
				$(iframe)
					.attr({
						src: settings.href,
						name: (new Date()).getTime(), // give the iframe a unique name to prevent caching
						'class': prefix + 'Iframe',
						allowFullScreen : true, // allow HTML5 video to go fullscreen
						webkitAllowFullScreen : true,
						mozallowfullscreen : true
					})
					.one('load', complete)
					.appendTo($loaded);
				
				$events.one(event_purge, function () {
					iframe.src = "//about:blank";
				});

				if (settings.fastIframe) {
					$(iframe).trigger('load');
				}
			} else {
				complete();
			}
			
			if (settings.transition === 'fade') {
				$box.fadeTo(speed, 1, removeFilter);
			} else {
				removeFilter();
			}
		};
		
		if (settings.transition === 'fade') {
			$box.fadeTo(speed, 0, function () {
				publicMethod.position(0, callback);
			});
		} else {
			publicMethod.position(speed, callback);
		}
	};

	function load () {
		var href, setResize, prep = publicMethod.prep, $inline, request = ++requests;
		
		active = true;
		
		photo = false;
		
		element = $related[index];
		
		makeSettings();
		
		trigger(event_purge);
		
		trigger(event_load, settings.onLoad);
		
		settings.h = settings.height ?
				setSize(settings.height, 'y') - loadedHeight - interfaceHeight :
				settings.innerHeight && setSize(settings.innerHeight, 'y');
		
		settings.w = settings.width ?
				setSize(settings.width, 'x') - loadedWidth - interfaceWidth :
				settings.innerWidth && setSize(settings.innerWidth, 'x');
		
		// Sets the minimum dimensions for use in image scaling
		settings.mw = settings.w;
		settings.mh = settings.h;
		
		// Re-evaluate the minimum width and height based on maxWidth and maxHeight values.
		// If the width or height exceed the maxWidth or maxHeight, use the maximum values instead.
		if (settings.maxWidth) {
			settings.mw = setSize(settings.maxWidth, 'x') - loadedWidth - interfaceWidth;
			settings.mw = settings.w && settings.w < settings.mw ? settings.w : settings.mw;
		}
		if (settings.maxHeight) {
			settings.mh = setSize(settings.maxHeight, 'y') - loadedHeight - interfaceHeight;
			settings.mh = settings.h && settings.h < settings.mh ? settings.h : settings.mh;
		}
		
		href = settings.href;
		
		loadingTimer = setTimeout(function () {
			$loadingOverlay.show();
		}, 100);
		
		if (settings.inline) {
			// Inserts an empty placeholder where inline content is being pulled from.
			// An event is bound to put inline content back when Colorbox closes or loads new content.
			$inline = $tag(div).hide().insertBefore($(href)[0]);

			$events.one(event_purge, function () {
				$inline.replaceWith($loaded.children());
			});

			prep($(href));
		} else if (settings.iframe) {
			// IFrame element won't be added to the DOM until it is ready to be displayed,
			// to avoid problems with DOM-ready JS that might be trying to run in that iframe.
			prep(" ");
		} else if (settings.html) {
			prep(settings.html);
		} else if (isImage(settings, href)) {

			href = retinaUrl(settings, href);

			photo = document.createElement('img');

			$(photo)
			.addClass(prefix + 'Photo')
			.bind('error',function () {
				settings.title = false;
				prep($tag(div, 'Error').html(settings.imgError));
			})
			.one('load', function () {
				var percent;

				if (request !== requests) {
					return;
				}

				photo.alt = $(element).attr('alt') || $(element).attr('data-alt') || '';

				if (settings.retinaImage && window.devicePixelRatio > 1) {
					photo.height = photo.height / window.devicePixelRatio;
					photo.width = photo.width / window.devicePixelRatio;
				}

				if (settings.scalePhotos) {
					setResize = function () {
						photo.height -= photo.height * percent;
						photo.width -= photo.width * percent;
					};
					if (settings.mw && photo.width > settings.mw) {
						percent = (photo.width - settings.mw) / photo.width;
						setResize();
					}
					if (settings.mh && photo.height > settings.mh) {
						percent = (photo.height - settings.mh) / photo.height;
						setResize();
					}
				}
				
				if (settings.h) {
					photo.style.marginTop = Math.max(settings.mh - photo.height, 0) / 2 + 'px';
				}
				
				if ($related[1] && (settings.loop || $related[index + 1])) {
					photo.style.cursor = 'pointer';
					photo.onclick = function () {
						publicMethod.next();
					};
				}

				photo.style.width = photo.width + 'px';
				photo.style.height = photo.height + 'px';

				setTimeout(function () { // A pause because Chrome will sometimes report a 0 by 0 size otherwise.
					prep(photo);
				}, 1);
			});
			
			setTimeout(function () { // A pause because Opera 10.6+ will sometimes not run the onload function otherwise.
				photo.src = href;
			}, 1);
		} else if (href) {
			$loadingBay.load(href, settings.data, function (data, status) {
				if (request === requests) {
					prep(status === 'error' ? $tag(div, 'Error').html(settings.xhrError) : $(this).contents());
				}
			});
		}
	}
		
	// Navigates to the next page/image in a set.
	publicMethod.next = function () {
		if (!active && $related[1] && (settings.loop || $related[index + 1])) {
			index = getIndex(1);
			launch($related[index]);
		}
	};
	
	publicMethod.prev = function () {
		if (!active && $related[1] && (settings.loop || index)) {
			index = getIndex(-1);
			launch($related[index]);
		}
	};

	// Note: to use this within an iframe use the following format: parent.jQuery.colorbox.close();
	publicMethod.close = function () {
		if (open && !closing) {
			
			closing = true;
			
			open = false;
			
			trigger(event_cleanup, settings.onCleanup);
			
			$window.unbind('.' + prefix);
			
			$overlay.fadeTo(settings.fadeOut || 0, 0);
			
			$box.stop().fadeTo(settings.fadeOut || 0, 0, function () {
			
				$box.add($overlay).css({'opacity': 1, cursor: 'auto'}).hide();
				
				trigger(event_purge);
				
				$loaded.empty().remove(); // Using empty first may prevent some IE7 issues.
				
				setTimeout(function () {
					closing = false;
					trigger(event_closed, settings.onClosed);
				}, 1);
			});
		}
	};

	// Removes changes Colorbox made to the document, but does not remove the plugin.
	publicMethod.remove = function () {
		if (!$box) { return; }

		$box.stop();
		$.colorbox.close();
		$box.stop().remove();
		$overlay.remove();
		closing = false;
		$box = null;
		$('.' + boxElement)
			.removeData(colorbox)
			.removeClass(boxElement);

		$(document).unbind('click.'+prefix);
	};

	// A method for fetching the current element Colorbox is referencing.
	// returns a jQuery object.
	publicMethod.element = function () {
		return $(element);
	};

	publicMethod.settings = defaults;

}(jQuery, document, window));
;
/* Canadian-French initialisation for the jQuery UI date picker plugin. */
(function (factory)
{
    if (typeof define === "function" && define.amd)
    {
        // AMD. Register as an anonymous module.
        define(["/datepicker"], factory);
    } else
    {
        // Browser globals
        factory(jQuery.datepicker);
    }
}(function (datepicker)
{
    datepicker.regional['fr-CA'] = {
        closeText: 'Fermer',
        prevText: 'Précédent',
        nextText: 'Suivant',
        currentText: 'Aujourd\'hui',
        monthNames: ['janvier', 'février', 'mars', 'avril', 'mai', 'juin',
        'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'],
        monthNamesShort: ['janv.', 'févr.', 'mars', 'avril', 'mai', 'juin',
        'juil.', 'août', 'sept.', 'oct.', 'nov.', 'déc.'],
        dayNames: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],
        dayNamesShort: ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.'],
        dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],
        weekHeader: 'Sem.',
        dateFormat: 'yy-mm-dd',
        firstDay: 0,
        isRTL: false,
        showMonthAfterYear: false,
        yearSuffix: ''
    };
    datepicker.setDefaults(datepicker.regional['fr-CA']);
    return datepicker.regional['fr-CA'];
}));
;
//******************************************************************
//**  Culture specific phrases for use in informational/error messages
//*******************************************************************/
//Define namespaces
var amw = amw || {};

amw.phrases = {
    //backfill save to garage
    RemoveToolTipMessage: "<div class=\"compareToolHelperText\"><a href=\"{0}\">Remove from garage</a></div>",
    AddToolTipMessage: "<div class=\"compareToolHelperText\"><a href=\"{0}\">Save to garage</a></div>",
    ToolTipMessage: "<div class=\"compareToolHelperText\">You need to</br><a href=\"javascript:signInOutControl.doLoginAndSave({ sourceId: {0}, foreignId: \'{1}\' })\">sign in</a> / <a href=\"javascript:doRegister()\">register</a></br>to save your vehicle</div>",
    Save: "Save",
    Saved: "Saved",

    //backfill compare car
    ToolTipAddLinkText: "Add to compare",
    ToolTipCompareLinkText: "Compare now",
    ToolTipMessageSave: "<div class=\"compareToolHelperText\"><b><span id=\"compareNumber\">0</span>/4</b> vehicles added.<br />Compare now</div>",
    ToolTipMessageCompare: "<div class=\"compareToolHelperText\"><b><span class=\"compareNumber\">{0}</span>/4</b> vehicles added.<br /><a href=\"{1}\">#TextLink#</a></div>",
    ToolTipMessageCompared: "<div class=\"compareToolHelperText\"><b><span class=\"compareNumber\">{0}</span>/4</b> vehicles added.<br /><a href=\"{1}\">#TextLink#</a></div>",
    Compare: "Compare",
    Compared: "Compared"
};
;
var aew = aew || {};

aew.SignInOutControlParameters = function () {
    var loginPageUrl;
    var registerPageUrl;
    var lnkSignInClientID;
};

aew.SignInOutControl = function(parameters) {
    var self = this;
    this.loginPageUrl = parameters.loginPageUrl;
    this.registerPageUrl = parameters.registerPageUrl;
    this.lnkSignInClientID = parameters.lnkSignInClientID;


    var isIPadBrowser = navigator.userAgent != null && navigator.userAgent.toLowerCase().indexOf('ipad') >= 0;
    var currentModalName;

    this.modalResize =  function (resizeWidth, resizeHeight) {
        // After a pause to allow modal to shift back to proper location, then return body position to static to keep everything in viewport visible
        setTimeout(function () {
            $('body').css({ 'position': 'static' });
        }, 1);

        $("#colorbox.ssoModalColorbox").colorbox.resize({ width: resizeWidth, height: resizeHeight });
    }


    this.iPadReposition = function (modalName) {

        if (isIPadBrowser) {
            var ipadOrientation = Math.abs(window.orientation) == 90 ? 'landscape' : 'portrait';

            // Set currentModalName for future repositioning - e.g. when orientation is changed
            currentModalName = modalName;

            if (modalName == 'Register') {
                if (ipadOrientation == 'landscape')
                {
                    $('#colorbox.ssoModalColorbox').attr('class', 'ssoModalColorbox ssoRegisterLandscape');
                    $('.ssoRegisterLandscape').css({ 'top' : '25px', 'left' : '100px' });
                }
                else
                    $('#colorbox.ssoModalColorbox').attr('class', 'ssoModalColorbox ssoRegisterPortrait');
            }
            else {
                if (ipadOrientation == 'landscape')
                {
                    $('#colorbox.ssoModalColorbox').attr('class', 'ssoModalColorbox ssoLoginLandscape');
                    $('.ssoLoginLandscape').css({ 'top' : '158px', 'left' : '100px' });
                }
                else
                    $('#colorbox.ssoModalColorbox').attr('class', 'ssoModalColorbox ssoLoginPortrait');
            }
        }
    }

    this.doLoginAndSave = function(settings) {
        wa_trackEventNoInteraction('Tool Bar', 'Sign In', 'Save Vehicle' + getCurrentPagePhrase(' on '), null);

        var hrefUrl = myGarageOptions.saveLoginReturnUrl;
        hrefUrl = hrefUrl.replace(/SourceIDValue/g, settings.sourceId);
        hrefUrl = hrefUrl.replace(/ForeignIDValue/g, settings.foreignId);
        this.doLogin(hrefUrl);
    }

    this.doLogin = function (newHref) {
        var modalWidth = 822;
        var modalHeight = 365;
        var hrefPrefix = 'ssoModal';
        var href = newHref == undefined ? self.loginPageUrl : newHref;
        this.controlOrientation(modalWidth, modalHeight);

        showColorboxModal(modalWidth, modalHeight, hrefPrefix, href);
    }

    this.CompareLink = function () {
        wa_trackEventNoInteraction('Tool Bar', 'Register', 'Save Vehicle' + getCurrentPagePhrase(' on '), null);

        var modalWidth = 822;
        var modalHeight = 640;
        var hrefPrefix = 'ssoModal';
        var href = self.registerPageUrl;
        this.controlOrientation(modalWidth, modalHeight);

        showColorboxModal(modalWidth, modalHeight, hrefPrefix, href);
    }

    this.controlOrientation = function(modalWidth, modalHeight) {
        // Add event listener for orientaiton change
        if (isIPadBrowser) {
            // ORIENTATION CHANGE LISTENER MOVED TO DOCUMENT READY TO FIX ISSUE WHERE IPAD REPOSITION IS NOT CALLED FOR LINK YOUR ACCOUNT MODAL

            // Initial execution if needed
            doOnOrientationChange_Modal(modalWidth, modalHeight);
        }
    }

    // ssoModal - setup and open
    $(document).ready(function () {
        // Call colorbox open function
        $('#'+ self.lnkSignInClientID).click(function () {
            self.doLogin();

            // Hide Colorbox & Close Button until available
            $(document).bind('cbox_open', function () {
                $('#cboxClose').css({ 'display': 'none' }).hide();
                $('#colorbox').css({ 'display': 'none' }).hide();
            });

            // Show modal & close button once the colorbox has been opened
            $(document).bind('cbox_complete', function () {
                // Set timeout to allow time for Colorbox to complete opening
                setTimeout(function () {
                    $('#cboxClose').css({ 'display': 'block' }).show();
                    $('#colorbox').css({ 'display': 'block' }).show();
                }, 2000);
            });                   

        });

        if (isIPadBrowser) {
            window.addEventListener('orientationchange',
                function () {
                    if (currentModalName == 'Register') {
                        self.iPadReposition('Register');
                    } else {
                        self.iPadReposition('Login');
                    }
                },
                false
            );
        }

    });
}

;
var aew = aew || {};

aew.MastheadAdsParameters = function () {
    var enableMastheadAds;
    var proximity;
    var searchLocation;
    var bodyStyle;
    var make;
    var model;
    var microsite;
};

aew.MastheadAds = function (parameters) {
    var self = this;
    this.enableMastheadAds = parameters.enableMastheadAds;
    this.proximity = parameters.proximity;
    this.searchLocation = parameters.searchLocation;
    this.bodyStyle = parameters.bodyStyle;
    this.make = parameters.make;
    this.proximity = parameters.proximity;
    this.model = parameters.model;
    this.microsite = parameters.microsite;

    this.AddMastheadAds = function (companyForeignID) {

        if (self.enableMastheadAds) {
            var searchOption = JSON.stringify({ searchOption: window.parent.GetMastheadAdsSearchOptions(5, companyForeignID) });
            var _self = this;

            $.ajax({
                url: "/WebServices/ResultsRefinement.svc/GetMastheadAds",
                type: "POST",
                data: searchOption,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(data) {
                    _self.GetMastheadAds_OnSuccess(data);
                }
            }); 
        }

    };

    this.GetMastheadAdsSearchOptions  = function (companySourceID, companyForeignID) {
        var searchOptions = new Object();

        searchOptions.Proximity = self.proximity;
        searchOptions.SearchLocation = self.searchLocation;
        
        if (self.bodyStyle != null) { 
            searchOptions.BodyStyle = self.bodyStyle;
        }
        if (self.make != null) {
            searchOptions.Make = self.make;
        }
        if (self.model != null) {
            searchOptions.Model = self.model;
        }

        searchOptions.MicroSite = self.microsite;
        
        searchOptions.HasCustomPhoto = true;
        searchOptions.ShowCPO = true;

        searchOptions.CompanySourceID = companySourceID;

        searchOptions.CompanyForeignID = companyForeignID;
        return searchOptions;
    };

    this.GetMastheadAds_OnSuccess = function (results) {
        var refinements = results.d;
        if (refinements.Success) {
            var featuredAds = refinements.FeaturedAds;
            if (featuredAds != null && featuredAds.length > 0) {
                var dataLayerList = { 'key': 'ltoWidget', vehicles: [] };
                for (var i = 0; i < featuredAds.length; i++) {
                    var oneItem = refinements.FeaturedAds[i];
                    var onclickEvent = "dl_trackAdClick({0}, 'ltoWidget'".format((i + 1));
                    var content = '<li data-list-numerical-position="{4}"><div class="mastheadAdImgContainer"><a href="{0}" onclick="{5}" ><img alt="{2}" src="{1}" /></a><div class="mastheadAdTxtContainer"><div><a href="{0}" onclick="{5}">{2}</a><a href="{0}"><div class="at_sprite mastheadAdArrow"></div></a></div><div><a href="{0}" onclick="{5}">{3}</a></div></div></div></li>'.format(oneItem.Link, oneItem.Image, oneItem.Display, oneItem.Price, (i+1), onclickEvent);
                    $("#mastheadAdsList").html($("#mastheadAdsList").html() + content);
                    dataLayerList.vehicles.push(oneItem.DataLayerATAd);
                }
                wa_trackEventNoInteraction("List Views", "SERP", "Listing Upgrades - LTO", featuredAds.length);
                //dataLayer[0].lists.push(dataLayerList);
                dataLayer.push(function () {

                    // get the list from the data layer
                    var lists = this.get('lists');

                    // if list is not defined, instantiate an empty list
                    if (!lists) lists = [];

                    // push the new list of vehicles
                    lists.push({
                        'key': 'ltoWidget',
                        'vehicles': dataLayerList.vehicles
                    });

                    // update the data layer model with the new lists
                    this.set('lists', lists);
                });

                // push an event to notify GTM that an AJAX list has been loaded
                dataLayer.push({
                    'event': 'ajaxListImpressions',
                    'ajaxListName': 'ltoWidget'
                });

            }
        }
    };

   ///The following function should be UNcommented out for testing before AddMastheadAds is called outside AT
   // $(document).ready(function () {
       // self.AddMastheadAds("ON20090710125758341"); 
      //  self.AddMastheadAds("ON20080219110434703"); // PV
   // });

}

;
$(document).ready(function () {

    // Check if the addEventListener method is available and use it, otherwise use attachEvent (e.g. if IE8):
    if (window.addEventListener) {
        window.addEventListener("message", receiveMessage, false);
    } else if (window.attachEvent) {
        window.attachEvent("onmessage", receiveMessage, false);
    }

    function receiveMessage(event) {
        if (event.data.toString().indexOf('{') != 0)
            return;

        try {
            var data = JSON.parse(event.data.toString());

            if (typeof data === "object") {
                switch (data.action) {
                    case 'ColorBoxClose':
                        jQuery.colorbox.close();
                        break;
                    case 'ColorBoxResize':
                        signInOutControl.modalResize(data.parameters.width, data.parameters.height);
                        break;
                    case 'Redirect':
                        document.location = data.parameters.location;
                        break;
                    case 'Reposition':
                        signInOutControl.iPadReposition(data.parameters.modalName);
                        break;
                }
            }
        } catch (err) {
        }
    }

});;
var ModalPopup = function (ctrl, bg) {
    this.popup = ctrl;
    this.background = bg;
};

var isIPadBrowser = navigator.userAgent != null && navigator.userAgent.toLowerCase().indexOf('ipad') >= 0;

ModalPopup.prototype.repositionPopup = function (isportrait, carproof, cpoPanel) {
    if (carproof && isportrait) {
        this.popup.css("top", this.getYPosition());
        cpoPanel ? this.popup.css("left", "-150px") : this.popup.css("left", "150px");

        //uses document because document will be topmost level in bubbling
        $(document).on('touchmove', function (e)
        {
            e.preventDefault();
        });
        //uses body because jquery on events are called off of the element they are
        //added to, so bubbling would not work if we used document instead.
        $('body').on('touchstart', '.scrollable', function (e)
        {
            if (e.currentTarget.scrollTop === 0)
            {
                e.currentTarget.scrollTop = 1;
            } else if (e.currentTarget.scrollHeight === e.currentTarget.scrollTop + e.currentTarget.offsetHeight)
            {
                e.currentTarget.scrollTop -= 1;
            }
        });
        //prevents preventDefault from being called on document if it sees a scrollable div
        $('body').on('touchmove', '.scrollable', function (e)
        {
            e.stopPropagation();
        });
    }
    else {
        isportrait ? this.popup.css("left", "-500px").css("top", "200px !important") : this.popup.css("left", "200px").css("top", "100px");
    }
};

ModalPopup.prototype.getYPosition = function() {
    var yOffset = window.scrollY,
        height = window.innerHeight;

    return (yOffset - height + 50) + 'px';

};

ModalPopup.prototype.repositionBackground = function () {
    this.background.css("left", "0").css("top", "0").css("width", "3000px").css("height", "5000px");
};

ModalPopup.prototype.hideBackground = function () {
    this.background.hide();
};

ModalPopup.prototype.showBackground = function () {
    this.background.show();
};

ModalPopup.prototype.showOverlay = function () {
    $("#at_detailOverlay").show();
};

ModalPopup.prototype.hideOverlay = function () {
    $("#at_detailOverlay").hide();
    this.hideBackground();

    $(document).off('touchmove');
    $('body').off('touchstart', '.scrollable');
    $('body').off('touchmove', '.scrollable');


};

ModalPopup.prototype.repositionModalPopupOnIpad = function (carproof, cpoPanle) {
    if (isIPadBrowser) {
        var isportrait = Math.abs(window.orientation) != 90;
        if (isportrait) {
            this.showOverlay();
            this.hideBackground();
            this.repositionPopup(true, carproof, cpoPanle);
            $('.iPad .modalPopup .at_closeBtn').css('margin-top', '0px');
        }
        else {
            $(document).off('touchmove');
            $('body').off('touchstart', '.scrollable');
            $('body').off('touchmove', '.scrollable');

            this.repositionBackground();
            //this.showBackground();
            this.repositionPopup(false, carproof, cpoPanle);
            $('.iPad .modalPopup').css('top', '-30px');
            $('.iPad .modalPopup .at_closeBtn').css('margin-top', '22px');
        }
    }
};

$(document).ready(function () {
    var val = readCookie("TrackSaveToGarageAfterSignIn");
    if (typeof val !== "undefined" && val != null && val !== "") {
        var trackSaveToGarageAfterSignIn = (val.toLowerCase() === 'true');
        if (trackSaveToGarageAfterSignIn) {
            dl_trackSaveToMyGarage();
        }
    }
    eraseCookie("TrackSaveToGarageAfterSignIn");
});
;
// A root-level model of Incentive in Details screen
function IncentiveDetailsModel() {

    this.entityMap = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': '&quot;',
        "'": '&#39;',
        "/": '&#x2F;'
    };

    // Templates of Incentive for different types
    this.IncentiveDetailsCashTemplate = null;
    this.IncentiveDetailsCashOrFinanceTemplate = null;
    this.IncentiveDetailsCashAndFinanceTemplate = null;

    // Template of incentive for APR term
    this.IncentiveDetailsAprTermTemplate = null;

    // Template of incentive for effective to expiry date template
    this.IncentiveDetailsValidityDatesTemplate = null;

    // Template of static disclaimer 
    this.IncentiveDetailsTraderStaticDisclaimer = null;

    // The URL for retrieving incentive in details screen
    this.IncentiveDetailsURL = null;

    var _self = this;

    // Get the text for the incentive APR terms in details page
    this.GetDetailsIncentiveAprTermsText = function (aprTerms, cashOption, isOr) {
        var aprTermsText = "";
        var incentiveText = "";
        var lineBreak = "<BR/>";

        // Go through each APR term
        for (var index = 0; index < aprTerms.length; index++) {
            var aprTerm = aprTerms[index];
            // Each line is in the form of Apr and the month
            if (aprTerm.Apr != null && aprTerm.TermMonths != null) {
                aprTermsText = String.format(_self.IncentiveDetailsAprTermTemplate, Globalize.format(aprTerm.Apr, "N2"), aprTerm.TermMonths);
                if (cashOption != null && cashOption != "") {
                    if (isOr) {
                        incentiveText += String.format(_self.IncentiveDetailsCashOrFinanceTemplate, aprTermsText, cashOption);
                    } else {
                        incentiveText += String.format(_self.IncentiveDetailsCashAndFinanceTemplate, aprTermsText, cashOption);
                    }
                } else {
                    incentiveText += aprTermsText;
                }
                incentiveText += lineBreak;
            }
        }
        // Remove the last line break
        if (incentiveText.length > 0)
            incentiveText = incentiveText.substring(0, incentiveText.length - lineBreak.length);

        return incentiveText;
    };

    //  Get the type for the incentive in details page
    this.GetDetailsIncentiveType = function (incentive) {
        var incentiveType = "";
        if (incentive != null && incentive.Type != null) {
            if (incentive.Type == "Cash" || incentive.Type == "Lease" || incentive.Type == "Finance" ||
                incentive.Type == "CashOrFinance" || incentive.Type == "CashAndFinance" || incentive.Type == "Promo") {
                if (incentive.Title != null) {
                    incentiveType = incentive.Type;
                }
            }
        }

        return incentiveType;
    };

    //  Get the text for the incentive Title  in details page
    this.GetDetailsIncentiveTitleText = function (incentive) {
        var incentiveText = "";
        if (incentive != null && incentive.Type != null) {
            if (incentive.Type == "Cash" || incentive.Type == "Lease" || incentive.Type == "Finance" ||
                incentive.Type == "CashOrFinance" || incentive.Type == "CashAndFinance" || incentive.Type == "Promo") {
                if (incentive.Title != null) {
                    incentiveText = _self.escapeHTML(incentive.Title);
                }
            }
        }

        return incentiveText;
    };

    //  Get the text for the incentive details  in details page
    this.GetDetailsIncentiveDetailsText = function (incentive) {
        var incentiveText = "";
        var aprTermsText = "";
        if (incentive != null && incentive.Type != null) {
            if (incentive.Type == "Cash") {
                if (incentive.CashOption != null) {
                    incentiveText = String.format(_self.IncentiveDetailsCashTemplate, incentive.CashOption);
                }
            } else if (incentive.Type == "Lease") {
                incentiveText = (incentive.OfferDetails != null ? _self.escapeHTML(incentive.OfferDetails) : "");
            } else if (incentive.Type == "Finance") {
                if (incentive.AprTerms != null) {
                    incentiveText = _self.GetDetailsIncentiveAprTermsText(incentive.AprTerms);
                }
            } else if (incentive.Type == "CashOrFinance") {
                if (incentive.CashOption != null && incentive.AprTerms != null) {
                    incentiveText = _self.GetDetailsIncentiveAprTermsText(incentive.AprTerms, incentive.CashOption, true);
                }
            } else if (incentive.Type == "CashAndFinance") {
                if (incentive.CashOption != null && incentive.AprTerms != null) {
                    incentiveText = _self.GetDetailsIncentiveAprTermsText(incentive.AprTerms, incentive.CashOption, false);
                }
            } else if (incentive.Type == "Promo") {
                incentiveText = (incentive.OfferDetails != null ? _self.escapeHTML(incentive.OfferDetails) : "");
            }
        }
        return incentiveText;
    };

    this.GetDatePart = function (dateTime) {
        return dateTime.substring(0, dateTime.indexOf("T"));
    };

    //  Get the text for the incentive valid dates  in details page
    this.GetDetailsIncentiveExpiryDateText = function (incentive) {
        var incentiveText = "";
        if (incentive != null && incentive.Type != null) {
            if (incentive.Type == "Cash" || incentive.Type == "Lease" || incentive.Type == "Finance" ||
                incentive.Type == "CashOrFinance" || incentive.Type == "CashAndFinance" || incentive.Type == "Promo") {
                var effectiveDate = _self.GetDatePart(incentive.EffectiveDate);
                var expiryDate = _self.GetDatePart(incentive.ExpiryDate);
                incentiveText = String.format(_self.IncentiveDetailsValidityDatesTemplate, effectiveDate, expiryDate);
            }
        }
        return incentiveText;
    };


    //  Get the text for the incentive disclaimer  in details page
    this.GetDetailsIncentiveDisclaimerText = function (incentive) {
        var incentiveText = "";
        if (incentive != null && incentive.Type != null) {
            if (incentive.Type == "Cash" || incentive.Type == "Lease" || incentive.Type == "Finance" ||
                incentive.Type == "CashOrFinance" || incentive.Type == "CashAndFinance" || incentive.Type == "Promo") {
                if (incentive.Disclaimer != null) {
                    incentiveText = _self.escapeHTML(incentive.Disclaimer) + " " + _self.IncentiveDetailsTraderStaticDisclaimer;
                } else {
                    incentiveText = _self.IncentiveDetailsTraderStaticDisclaimer;
                }
            }
        }
        return incentiveText;
    };

    // Populate different incentive parts
    this.IncentiveDetails = function (data) {
        if (data != null) {
            this.DetailsIncentiveType = _self.GetDetailsIncentiveType(data);
            this.DetailsIncentiveTitleText = _self.GetDetailsIncentiveTitleText(data);
            this.DetailsIncentiveDetailsText = _self.GetDetailsIncentiveDetailsText(data);
            this.DetailsIncentiveExpiryDateText = _self.GetDetailsIncentiveExpiryDateText(data);
            this.DetailsIncentiveDisclaimerText = _self.GetDetailsIncentiveDisclaimerText(data);
        } else {
            this.DetailsIncentiveType = "";
            this.DetailsIncentiveTitleText = "";
            this.DetailsIncentiveDetailsText = "";
            this.DetailsIncentiveExpiryDateText = "";
            this.DetailsIncentiveDisclaimerText = "";
        }
    };

    this.escapeHTML = function (string) {
        var self = this;
        return String(string).replace(/[&<>"'\/]/g, function (s) {
            return self.entityMap[s];
        });
    };

    // Make an AJAX call to retrieve the incentive in details screen, populate the model and bind the model to UI
    this.IncentiveDetailsListViewModel = function (key) {

        if (key != null && key.length > 0) {
            this.IncentiveDetailsList = ko.observableArray([]);

            var self = this;
            $.ajax({
                url: _self.IncentiveDetailsURL + key,
                dataType: 'jsonp',
                success: function (result) {
                    if (result != null && result.length > 0) {
                        var mappedIncentiveDetailsList = $.map(result, function (item) {
                            return new self.IncentiveDetails(item);
                        });
                        self.IncentiveDetailsList(mappedIncentiveDetailsList);
                        ko.applyBindings(self, document.getElementById('detailsIncentive'));
                        $(".detailsIncentive").show();
                    }
                }
            });
        }
    };

    this.IncentiveDetailsListViewModel.prototype.IncentiveDetails = this.IncentiveDetails;
    this.IncentiveDetailsListViewModel.prototype.escapeHTML = this.escapeHTML;
    this.IncentiveDetailsListViewModel.prototype.entityMap = this.entityMap;

};
// A root-level model of Pricing in Details screen
function TdiDetailsModel() {
    this.TdiDetailsURL = null;
    this.CurrentCulture = null;

    this.entityMap = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': '&quot;',
        "'": '&#39;',
        "/": '&#x2F;'
    };
    
    var _self = this;

    // Check whether it is a package (as opposed to an option)
    this.IsPackage = function (attributes) {
        for (var i = 0; i < attributes.length; i++) {
            var attribute = attributes[i];
            if (attribute.Type == "ChromeOptionKindID" && attribute.Value == "21") {
                return true;
            }
        }
        return false;
    };
    
    // Check whether it is canadian currency
    this.IsCAD = function (attributes) {
        for (var i = 0; i < attributes.length; i++) {
            var attribute = attributes[i];
            if (attribute.Type == "Currency" && attribute.Value == "CAD") {
                return true;
            }
        }
        return false;
    };

    // Parse the msrp in string and return the value in number
    this.GetMsrp = function (strMsrp) {
        if (strMsrp != null) {
            var msrp = parseFloat(strMsrp);
            if (msrp != NaN) {
                return msrp;
            }
        }
        return 0.0;
    };

    // Populate the PricingDetails object
    this.PricingDetails = function (data) {
        if (data != null && data.Type == "OEMCode") {

            this.ID = data.ID;
            this.OEMCode = data.Value;
            this.attributeList = new Array();
            var self = this;
            $.each(data.Attributes, function (index, attribute) {
                switch (attribute.Type) {
                    case "Header":
                    case "Description":
                        self.attributeList[attribute.Type] = self.escapeHTML(attribute.Value);
                        break;
                    // Remove the "inc: " (in English) or "comprend: " (in French)
                    case "Description2":
                        self.attributeList[attribute.Type] = self.escapeHTML(attribute.Value.replace("inc: ", "").replace("comprend : ", ""));
                        break;
                    // MsrpMax will be number, while MsrpFormatted will be a formatted string
                    case "MsrpMax":
                        var msrp = self.GetMsrp(attribute.Value);
                        self.attributeList["MsrpMax"] = msrp;
                        self.attributeList["MsrpMaxFormatted"] = Globalize.format(msrp, "C0");
                        break;
                    default:
                        self.attributeList[attribute.Type] = attribute.Value;
                        break;
                }
            });
        } 
    };

    // It sorts, escape HTML and re-arrange the vehicle highlight items left to right
    this.PostProcessVehicleHighlights = function(input, columnCount) {
        input.sort(function (a, b) {
            if (a.Name < b.Name)
                return -1;
            else if (a.Name > b.Name)
                return 1;
            else
                return 0;
        });
        var output = [];
        var rowCount = Math.ceil(input.length / columnCount);
        for (var columnIndex = 0; columnIndex < columnCount; columnIndex++) {
            for (var rowIndex = 0; rowIndex < rowCount; rowIndex++) {
                if ((columnCount * rowIndex + columnIndex) < input.length) {
                    var item = input[columnCount * rowIndex + columnIndex];
                    item.Name = this.escapeHTML(item.Name);
                    output.push(item);
                }
                else {
                    output.push(new this.VehicleHighlightDetails({ 'ID': 0, 'Type': 'VehicleHighlight', 'Value': '&nbsp;' }));
                }
            }
        }
        return output;
    }


    // Populate the VehicleHighlightDetails object
    this.VehicleHighlightDetails = function (data) {
        if (data != null && data.Type == "VehicleHighlight") {

            this.ID = data.ID;
            this.Name = data.Value;
        }
    };


    this.escapeHTML = function (string) {
        var self = this;
        return String(string).replace(/[&<>"'\/]/g, function(s) {
            return self.entityMap[s];
        });
    };

    // Return the query string for the culture specification required for the webapi (e.g. ?l=fr)
    this.CultureQueryString = function() {
        if (!String.IsNullOrEmpty(this.CurrentCulture)) {
            return ("&l=" + this.CurrentCulture);
        }
        return "";
    };

    this.GetOptionText = function(headerText, descriptionText) {
        if (String.IsNullOrEmpty(headerText) && String.IsNullOrEmpty(descriptionText)) {
            return "";
        }
        else if (String.IsNullOrEmpty(headerText)) {
            return descriptionText;
            
        }
        else if (String.IsNullOrEmpty(descriptionText)) {
            return headerText;
        } 
        else {
            return headerText + " - " + descriptionText;
        }
    };


    // Make an AJAX call to retrieve the tdi in details screen, populate the model and bind the model to UI
    this.TdiDetailsListViewModel = function (key) {
        
        if (key != null && key.length > 0) {
            this.PricingDetailsPackageList = ko.observableArray([]);
            this.PricingDetailsOptionList = ko.observableArray([]);
            this.VehicleHighlightDetailsList = ko.observableArray([]);

            // Issue an AJAX request with the URL, key and culture query string
            var self = this;
            $.ajax({
                url: _self.TdiDetailsURL + '?paths=' + key + self.CultureQueryString(),
                accepts: "text/javascript",
                dataType: 'jsonp',
                success: function(result) {
                    if (result != null && result.Items.length > 0) {
                        var pricingDetailsPackageList = new Array();
                        var pricingDetailsOptionList = new Array();
                        var vehicleHighlightDetailsList = new Array();
                        var totalPackageMsrp = 0.0;
                        var totalOptionMsrp = 0.0;

                        $.each(result.Items, function (index, item) {
                            if (item.Type == "OEMCode") {
                                if (self.IsCAD(item.Attributes)) {
                                    var pricingDetails = new self.PricingDetails(item);

                                    // Push it to the package /option list AND sum up the total MSRP
                                    if (self.IsPackage(item.Attributes)) {
                                        pricingDetailsPackageList.push(pricingDetails);
                                        totalPackageMsrp += pricingDetails.attributeList["MsrpMax"];
                                    } else {
                                        pricingDetails.attributeList["OptionText"] = self.GetOptionText(pricingDetails.attributeList["Header"], pricingDetails.attributeList["Description"]);
                                        pricingDetailsOptionList.push(pricingDetails);
                                        totalOptionMsrp += pricingDetails.attributeList["MsrpMax"];
                                    }
                                }
                            }
                            else if (item.Type == "VehicleHighlight") {
                                var vehicleHighlightDetails = new self.VehicleHighlightDetails(item);
                                vehicleHighlightDetailsList.push(vehicleHighlightDetails);
                            }

                        });

                        self.PricingDetailsPackageList(pricingDetailsPackageList);
                        self.PricingDetailsOptionList(pricingDetailsOptionList);
                        self.TotalPackageMsrp = ko.observable(totalPackageMsrp);
                        self.TotalOptionMsrp = ko.observable(totalOptionMsrp);

                        $("#vehicleHighlightsListContainer").attr('data-count', vehicleHighlightDetailsList.length);
                        $("#packageListContainer").attr('data-count', pricingDetailsPackageList.length);
                        $("#optionListContainer").attr('data-count', pricingDetailsOptionList.length);

                        var columnCount = 3;
                        if (vehicleHighlightDetailsList.length > 0) {
                            vehicleHighlightDetailsList = self.PostProcessVehicleHighlights(vehicleHighlightDetailsList, columnCount);
                            self.VehicleHighlightDetailsList(vehicleHighlightDetailsList);
                            $("#vehicleHighlightsListContainer").show();
                        }
                        if (pricingDetailsPackageList.length > 0)
                            $("#packageListContainer").show();
                        if (pricingDetailsOptionList.length > 0)
                            $("#optionListContainer").show();

                        ko.applyBindings(self, document.getElementById('detailsPricing'));

                        if (vehicleHighlightDetailsList.length > 0)
                            $(".at_vehicleHighlights").columnize({ columns: columnCount });

                        $('#newVehicleDetailsPageDescriptionContainer #vehicleDescriptionVisible').hide();
                        $('#newVehicleDetailsPageDescriptionContainer #vehicleDescriptionVisible').show();
                    }
                }
            });
        }
    };
    
    this.TdiDetailsListViewModel.prototype.PricingDetails = this.PricingDetails;
    this.TdiDetailsListViewModel.prototype.PostProcessVehicleHighlights = this.sortAndRearrange;
    this.TdiDetailsListViewModel.prototype.VehicleHighlightDetails = this.VehicleHighlightDetails;
    this.PricingDetails.prototype.GetMsrp = this.GetMsrp;
    this.PricingDetails.prototype.GetOptionText = this.GetOptionText;
    this.PricingDetails.prototype.escapeHTML = this.escapeHTML;
    this.PricingDetails.prototype.entityMap = this.entityMap;

};
window.PlayerFramework = {};
window.PlayerFramework.Plugins = {};

PlayerFramework.defaultOptions = {};
PlayerFramework.resources = [];

PlayerFramework.setDefaultOptions = function(options)
{
	/// <summary>
	///		Sets the default options for the player framework.
	///	</summary>
	/// <param name="options" type="Object">
	///		The options to merge with the default options.
	///	</param>

	PlayerFramework.merge(PlayerFramework.defaultOptions, options);
};

PlayerFramework.setResources = function(name, resources)
{
	/// <summary>
	///		Sets the resources for a language.
	///	</summary>
	/// <param name="name" type="String">
	///		The resource language name (e.g. en, es, en-us).
	///	</param>
	/// <param name="resources" type="Object">
	///		The resources to merge with the default options.
	///	</param>

	PlayerFramework.resources[name] = resources;
	PlayerFramework.setDefaultOptions(resources);
};

PlayerFramework.addEvent = function(obj, type, fun)
{
	/// <summary>
	///		Wraps the different ways to add event listeners to a DOM element or object.
	///		Based on: http://www.quirksmode.org/blog/archives/2005/10/_and_the_winner_1.html
	///	</summary>
	/// <param name="obj" type="Object">
	///		The DOM element or object to add an event listener to.
	///	</param>
	/// <param name="type" type="String">
	///		The type of event to listen for.
	///	</param>
	/// <param name="fun" type="Function">
	///		The function to call when the event is dispatched.
	///	</param>

	if (window.navigator.msPointerEnabled)
	{
		switch (type)
		{
			case "mousemove":
				obj.addEventListener("MSPointerMove", fun, false);
				break;

			case "mouseup":
				obj.addEventListener("MSPointerUp", fun, false);
				break;

			case "mousedown":
				obj.addEventListener("MSPointerDown", fun, false);
				break;

			case "mouseover":
				obj.addEventListener("MSPointerOver", fun, false);
				break;

			case "mouseout":
				window.addEventListener("MSPointerOver", function(e) {
					if (e.srcElement != obj)
						fun(e);
				}, true);

				break;

			default:
				obj.addEventListener(type, fun, false);
				break;
		}
	}
	else if (obj.addEventListener)
	{
		obj.addEventListener(type, fun, false);
	}
	else if (obj.attachEvent)
	{
		obj["e" + type + fun] = fun;
		obj[type + fun] = function() { obj["e" + type + fun](window.event); }
		obj.attachEvent("on" + type, obj[type + fun]);
	}
};

PlayerFramework.getComputedStyle = function(element, name)
{
	///	<summary>
	///		Gets the CSS style for a given element and given style name.
	///		Based on: http://www.quirksmode.org/dom/getstyles.html
	///	</summary>
	///	<param name="element" type="Object">
	///		The element object to get the style for.
	///	</param>
	///	<param name="name" type="String">
	///		The name of the style attribute.
	///	</param>
	///	<returns type="String" />

	if (element.currentStyle)
		return element.currentStyle[name];
	else if (window.getComputedStyle)
		return document.defaultView.getComputedStyle(element, null).getPropertyValue(name);
};

PlayerFramework.removeEvent = function(obj, type, fun)
{
	/// <summary>
	///		Wraps the different ways to remove event listeners from a DOM element or object.
	///		Based on: http://www.quirksmode.org/blog/archives/2005/10/_and_the_winner_1.html
	///	</summary>
	/// <param name="obj" type="Object">
	///		The DOM element or object to remove an event listener from.
	///	</param>
	/// <param name="type" type="String">
	///		The type of event to stop listening for.
	///	</param>
	/// <param name="fun" type="Function">
	///		The function that was to be called when the event was dispatched.
	///	</param>

	if (obj.removeEventListener)
	{
		obj.removeEventListener(type, fun, false);
	}
	else if (obj.detachEvent)
	{
		obj.detachEvent("on" + type, obj[type + fun]);
		obj[type + fun] = null;
		obj["e" + type + fun] = null;
	}
};

PlayerFramework.padString = function(value, padLength, padString)
{
	/// <summary>
	///		Creates a string of a specified length by appending the pad string to the original value.
	///	</summary>
	/// <param name="value" type="String">
	///		The value to pad.
	///	</param>
	/// <param name="padLength" type="Number">
	///		The desired length of the resulting string.
	///	</param>
	/// <param name="padString" type="String">
	///		The string to append the the original value.
	///	</param>
	///	<returns type="String" />

	var result = new String(value);
	
	while (result.length < padLength)
		result = padString + result;
	
	return result;
};

PlayerFramework.typeExtendsFrom = function(derived, base)
{
	/// <summary>
	///		Determines if a derived type extends from a base type.
	///	</summary>
	/// <param name="derived" type="Object">
	///		The derived type.
	///	</param>
	/// <param name="base" type="Object">
	///		The base type.
	///	</param>
	///	<returns type="Boolean" />

	return derived.prototype instanceof base;
};

PlayerFramework.proxy = function(context, fun)
{
	///	<summary>
	///		Creates a delegate function that executes the specified method in the correct context.
	///	</summary>
	///	<param name="context" type="Object">
	///		The instance whose method should be executed.
	///	</param>
	///	<param name="fun" type="Function">
	///		The function to execute.
	///	</param>
	///	<returns type="Function" />
	
	var proxy = function()
	{
		return fun.apply(context, arguments);
	};

	return proxy;
};

PlayerFramework.mouseEventProxy = function(element, eventType)
{
	///	<summary>
	///		Returns a function that, when called, dispatches a mouse event on the specified element.
	///	</summary>
	///	<param name="element" type="Object">
	///		The element from which to dispatch the event.
	///	</param>
	///	<param name="eventType" type="String">
	///		The type of event to dispatch.
	///	</param>
	///	<returns type="Function" />

	var proxy = PlayerFramework.proxy(this, function(e)
	{
	    if (document.createEvent) {
	        var event = document.createEvent("MouseEvents");
	        event.initMouseEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
	        element.dispatchEvent(event);
	    } else {
	        var evObj = document.createEventObject();
	        evObj.type = eventType;
	        element.dispatchEvent(evObj);
        }
	});

	return proxy;
};

PlayerFramework.xhr = function(options, completeCallback, errorCallback)
{
	///	<summary>
	///		Wraps an XMLHttpRequest.
	///	</summary>
	///	<param name="completeCallback" type="Function">
	///		The function to call when the request has completed.
	///	</param>
	///	<param name="errorCallback" type="Function">
	///		The function to call when request resulted in an error.
	///	</param>

	var request = null;
	
	// Set the inner request to wrap.
	if (window.XMLHttpRequest)
		request = new XMLHttpRequest();
	else if (window.ActiveXObject)
		request = new ActiveXObject("Microsoft.XMLHTTP");
	else
		throw new Error("XMLHttpRequest unavailable");

	request.onreadystatechange = function()
	{
		if (request.readyState == 4)
		{
			if(request.status >= 200 && request.status <= 300)
			{
				completeCallback(request);
			}
			else
			{
				errorCallback(request);
			}
		}
	};

	request.open(options.method || "GET", options.url, true);

	request.responseType = options.responseType || "";

	if (options.data)
	{
		request.setRequestHeader("X-Requested-With", "XMLHttpRequest");
		request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
		request.setRequestHeader("Connection", "close");
	}

	request.send(options.data);
};

PlayerFramework.merge = function(destination, source)
{
	///	<summary>
	///		Merges properties from a source object into a destination object.
	///	</summary>
	///	<param name="destination" type="Object">
	///		The destination object.
	///	</param>
	///	<param name="source" type="Object">
	///		The source object.
	///	</param>
	///	<returns type="Object" />

	if (!source)
		return;
	
	for (var i in source)
	{
		var destinationProperty = destination[i];
		var sourceProperty = source[i];
		
		if (sourceProperty == null)
			delete destination[i];
		else if (typeof(destinationProperty) == "object"
				&& typeof(sourceProperty) == "object"
				&& !(destinationProperty instanceof Array))
			PlayerFramework.merge(destinationProperty, sourceProperty);
		else
			destination[i] = sourceProperty;
	}
};

PlayerFramework.mergeOptions = function(superOptions, defaultOptions)
{
	var mergedOptions = {};
	PlayerFramework.merge(mergedOptions, superOptions);
	PlayerFramework.merge(mergedOptions, defaultOptions);
	return mergedOptions;
};

PlayerFramework.convertNodeListToArray = function(nodeList /*, thisp */)
{
	///	<summary>
	///		Takes a NodeList of DOM elements and converts it to an Array.
	///	</summary>
	///	<param name="nodeList" type="Object">
	///		NodeList of DOM elements.
	///	</param>
	///	<returns type="Array" />

	"use strict";

	if (nodeList === void 0 || nodeList === null)
		throw new TypeError();

	var t = Object(nodeList);
	var len = t.length >>> 0;

	var res = [];

	for (var i = t.length; i--; res.unshift(t[i])) {};
	
	return res;
};

PlayerFramework.getCharCode = function (e)
{
	///	<summary>
	///		Gets the character code for an event.
	///	</summary>
	///	<param name="e" type="Object">
	///		The event.
	///	</param>
	///	<returns type="Number" />

	if (e.which == null && (e.charCode != null || e.keyCode != null))
		return (e.charCode != null) ? e.charCode : e.keyCode;
	else
		return e.which;
};

PlayerFramework.getElementsByClass = function (className, node, tag)
{
	///	<summary>
	///		Gets all elements with the specified class name.
	///	</summary>
	///	<param name="className" type="String">
	///		The class name to filter by.
	///	</param>
	///	<param name="node" type="Object">
	///		The optional node to find children under (document is used if no node is specified).
	///	</param>
	///	<param name="tag" type="String">
	///		The optional tag name to filter by.
	///	</param>
	///	<returns type="Array" />

	var classElements = [];

	if (!node)
		node = document;

	if (!tag)
		tag = "*";
	
	var tagElements = node.getElementsByTagName(tag);
	var pattern = new RegExp("(^|\\s)" + className + "(\\s|$)");

	PlayerFramework.forEach(tagElements, function(element)
	{
		if (pattern.test(element.className))
			classElements.push(element);
	});

	return classElements;
};

PlayerFramework.getTotalOffsetLeft = function(element)
{
	///	<summary>
	///		Gets the left position relative to the top-most parent by recursively summing the left position of the parent.
	///	</summary>
	///	<param name="element" type="Number">
	///		The element to find the left position for.
	///	</param>
	///	<returns type="Number" />

	return element ? (element.offsetLeft + PlayerFramework.getTotalOffsetLeft(element.offsetParent)) : 0;
};

PlayerFramework.forEachAsync = function(array, fun /*, thisp */)
{
	///	<summary>
	///		Iterates over an array allowing the called function to explicitly continue iterating
	///		by calling a loop callback function passed to the called function.
	///	</summary>
	///	<param name="array" type="Array">
	///		The array to iterate over.
	///	</param>
	///	<param name="fun" type="Function">
	///		The function to call at each iteration.
	///	</param>

	"use strict";

	if (array === void 0 || array === null)
		throw new TypeError();

	var t = Object(array.concat());

	if (typeof fun !== "function")
		throw new TypeError();

	var loop = function()
	{
		var len = t.length >>> 0;
		if (len === 0)
			return;

		var thisp = arguments[2];
		var i = t.shift();

		fun.call(thisp, loop, i);
	};
	loop();
};

PlayerFramework.first = function(array, fun /*, thisp */)
{
	///	<summary>
	///		Gets the first item in the array that causes the function to return true when the
	///		function is called with the item as a parameter.
	///	</summary>
	///	<param name="array" type="Array">
	///		The array to iterate over.
	///	</param>
	///	<param name="fun" type="Function">
	///		The function to call at each iteration that must return a boolean value to be returned
	///		as the first item.
	///	</param>
	///	<returns type="Object" />

	"use strict";

	if (array === void 0 || array === null)
		throw new TypeError();

	var t = Object(array);
	var len = t.length >>> 0;
	if (typeof fun !== "function")
		throw new TypeError();

	var thisp = arguments[2];
	for (var i = 0; i < len; i++)
	{
		if (i in t && fun.call(thisp, t[i], i, t))
			return t[i];
	}

	return null;
};

PlayerFramework.filter = function(array, fun /*, thisp */)
{
	///	<summary>
	///		Gets all items in the array that cause the function to return true when the function is
	///		called with the item as a parameter.
	///		Based on: https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/filter#Compatibility
	///	</summary>
	///	<param name="array" type="Array">
	///		The array to iterate over.
	///	</param>
	///	<param name="fun" type="Function">
	///		The function to call at each iteration that must return a boolean value to be included
	///		in the resulting array.
	///	</param>
	///	<returns type="Array" />

	"use strict";

	if (array === void 0 || array === null)
		throw new TypeError();

	var t = Object(array);
	var len = t.length >>> 0;
	if (typeof fun !== "function")
		throw new TypeError();

	var res = [];
	var thisp = arguments[2];
	for (var i = 0; i < len; i++)
	{
		if (i in t)
		{
		var val = t[i]; // in case fun mutates this
		if (fun.call(thisp, val, i, t))
			res.push(val);
		}
	}

	return res;
};

PlayerFramework.forEach = function(array, fun /*, thisp */)
{
	///	<summary>
	///		Iterates over each item in the array.
	///		Based on: https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach#Compatibility
	///	</summary>
	///	<param name="array" type="Array">
	///		The array to iterate over.
	///	</param>
	///	<param name="fun" type="Function">
	///		The function to call at each iteration.
	///	</param>

	"use strict";

	if (array === void 0 || array === null)
		throw new TypeError();

	var t = Object(array);
	var len = t.length >>> 0;
	if (typeof fun !== "function")
		throw new TypeError();

	var thisp = arguments[2];
	for (var i = 0; i < len; i++)
	{
		if (i in t)
			fun.call(thisp, t[i], i, t);
	}
};

PlayerFramework.requestAnimationFrame = (function()
{
	///	<summary>
	///		Sets the requestAnimationFrame function using any available browser-specific
	///		requestAnimationFrame or using setTimeout as a substitute. 
	///		Based on: http://paulirish.com/2011/requestanimationframe-for-smart-animating/
	///	</summary>
	///	<returns type="Function" />

	var requestAnimationFrameFunction =
		window.requestAnimationFrame ||
		window.webkitRequestAnimationFrame ||
		window.mozRequestAnimationFrame ||
		window.oRequestAnimationFrame ||
		window.msRequestAnimationFrame ||
		function(callback, element)
		{
			window.setTimeout(callback, 1000 / 60);
		};

	return PlayerFramework.proxy(window, requestAnimationFrameFunction);
})();

PlayerFramework.createElement = function(parentNode, jsonml)
{
	///	<summary>
	///		Creates an HTML element given the formatted JSONML array.
	///	</summary>
	///	<param name="parentNode" type="Object">
	///		The optional parent node to append the created element to.
	///	</param>
	///	<param name="jsonml" type="Array">
	///		The JSONML array containing the tag name and optional attributes and nested elements.
	///	</param>
	///	<returns type="Object" />
	
	if (!(jsonml instanceof Array) || jsonml.length === 0 || typeof(jsonml[0]) !== "string")
		throw new Error("Invalid JSONML.");

	var element = document.createElement(jsonml[0]);
	var attributes = jsonml[1];
	
	// Parse and set the element attributes if specified.
	if (attributes && typeof(attributes) === "object" && !(attributes instanceof Array)) 
	{			
		for (var key in attributes)
		{
			var value = attributes[key];

			if (value !== null && typeof(value) !== "undefined")
			{
				if (typeof(value) !== "string")
					element[key] = value;
				else
					element.setAttribute(key, value);
			}
		}
	}
	
	// Append child nodes.
	for (var i = 1; i < jsonml.length; i++) 
	{
		var childJsonml = jsonml[i];

		if (childJsonml instanceof Array)
			PlayerFramework.createElement(element, childJsonml);
		else if (typeof(childJsonml) === "string")
			element.appendChild(document.createTextNode(childJsonml));
	}

	if (parentNode)
		parentNode.appendChild(element);

	return element;
};

PlayerFramework.domReady = (function()
{
	/// <summary>
	///		Determines when the DOM is fully loaded and fires any registered handlers.
	///		Simplified adaptation based on work by Dean Edwards, John Resig, Matthias Miller, and Diego Perini.
	/// </summary>

	var handlers = [],
		loaded = false;
		
	var domContentLoaded = function ()
	{
		if (document.removeEventListener)
			document.removeEventListener("DOMContentLoaded", domContentLoaded, false);
		else if (document.detachEvent && document.readyState === "complete")
			document.detachEvent("onreadystatechange", domContentLoaded);

		ready();
	};

	var ready = function ()
	{
		if (!loaded)
		{
			loaded = true;

			for (var i = 0, len = handlers.length; i < len; i++)
				handlers[i].call(document);
		}
	};

	if (document.addEventListener)
	{
		document.addEventListener("DOMContentLoaded", domContentLoaded, false);
		window.addEventListener("load", ready, false);
	}
	else if (document.attachEvent)
	{
		document.attachEvent("onreadystatechange", domContentLoaded);
		window.attachEvent("onload", ready);

		if (document.documentElement.doScroll)
		{
			var intervalId = window.setInterval(function ()
			{
				try
				{
					// Throws an error if document is not ready yet
					document.documentElement.doScroll("left");
					window.clearInterval(intervalId);
					ready();
				} catch (e) {}
			}, 10);
		}
	}

	return function (handler)
	{
		// If the DOM is already loaded, execute the handler
		if (loaded)
			handler.call(document);
		else
			handlers.push(handler);
	};
})();
﻿(function()
{
	///	<summary>
	///		Creates the Class extendable structure used by all objects in the framework.
	///		Based on: http://ejohn.org/blog/simple-javascript-inheritance/
	///		"Simple JavaScript Inheritance"
	///		By John Resig http://ejohn.org/
	///		MIT Licensed.
	///	</summary>

	var initializing = false;
	var functionTest = /xyz/.test(function(){xyz;}) ? /\b_super\b/ : /.*/;

	// The base Class implementation
	PlayerFramework.Class = function() {};
	
	// Create a new Class that inherits from this class
	PlayerFramework.Class.extend = function(properties)
	{
		var _super = this.prototype;

		// Instantiate a base class (but only create the instance,
		// don't run the init constructor)
		initializing = true;
		var prototype = new this();
		initializing = false;
		
		// Copy the properties over onto the new prototype
		for (var name in properties)
		{
			// Check if we're overwriting an existing function
			prototype[name] = typeof properties[name] == "function" && 
			typeof _super[name] == "function" && functionTest.test(properties[name]) ?
			(function(name, fun)
			{
				return function()
				{
					var tmp = this._super;

					// Add a new ._super() method that is the same method
					// but on the super-class
					this._super = _super[name];

					// The method only need to be bound temporarily, so we
					// remove it when we're done executing
					var ret = fun.apply(this, arguments);
					this._super = tmp;

					return ret;
				};
			})(name, properties[name]) :
			properties[name];
		}

		// The dummy class constructor
		function Class()
		{
			// All construction is actually done in the init method
			if (!initializing && this.init)
				this.init.apply(this, arguments);
		}

		// Populate our constructed prototype object
		Class.prototype = prototype;

		// Enforce the constructor to be what we expect
		Class.constructor = Class;

		// And make this class extendable
		Class.extend = arguments.callee;
		
		return Class;
	};
})();
﻿PlayerFramework.Object = PlayerFramework.Class.extend(
{
	init: function(options)
	{
		///	<summary>
		///		Initializes an PlayerFramework Object, the base for all objects in the framework.
		///		Stores the object options and provides event listening and dispatching support.
		///	</summary>

		this.options = options || {};
		this.eventListeners = [];
	},

	addEventListener: function (type, callback, capture) 
	{
		///	<summary>
		///		Adds an event listener for a derived class to be called when the event is dispatched.
		///	</summary>
		///	<param name="type" type="String">
		///		The type of event to listen for.
		///	</param>
		///	<param name="callback" type="Function">
		///		The function to call when the event is dispatched.
		///	</param>
		///	<param name="capture" type="Boolean">
		///		Indicates whether the event should be prevented from bubbling up (included for future use and to match the syntax of Node.addEventListener).
		///	</param>

		this.eventListeners.push(
		{
			type: type,
			callback: callback,
			capture: capture
		}); 
	},

	dispatchEvent: function(eventObject)
	{
		///	<summary>
		///		Dispatches an event for a derived class and calls each listener callback.
		///	</summary>
		///	<param name="eventObject" type="Object">
		///		The object containing the type to match and the listener callback.
		///	</param>
		
		PlayerFramework.forEach(this.eventListeners, function(l)
		{
			if (l.type === eventObject.type)
				l.callback(eventObject);
		});
	},

	mergeOptions: function(userOptions, defaultOptions)
	{
		///	<summary>
		///		Merges user specified options with default options.
		///	</summary>
		///	<param name="userOptions" type="Object">
		///		The object containing options specified by the caller creating the instance.
		///	</param>
		///	<param name="defaultOptions" type="Object">
		///		The object containing options specified by the class itself.
		///	</param>

		PlayerFramework.merge(this.options, defaultOptions);
		PlayerFramework.merge(this.options, userOptions);
	}
});
﻿PlayerFramework.Plugin = PlayerFramework.Object.extend(
{
	defaultOptions: function(player)
	{
		return {};
	},

	isEnabled: function(player, options)
	{
		return true;
	},

	init: function(player, options)
	{
		///	<summary>
		///		The plugin base from which all plugins should be derived.
		///		Stores a reference to the Player object for manipulation by the plugin.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>

		this._super(options);

		this.player = player;
	}
});
﻿PlayerFramework.ModulePlugin = PlayerFramework.Plugin.extend(
{
	init: function(player, options)
	{
		///	<summary>
		///		The plugin base for singleton plugins that should only have one instance per
		///		Player object.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>

		this._super(player, options);
		
		if (this.options.playerExtensionPropertyName)
			this.player[this.options.playerExtensionPropertyName] = this;
	}
});
﻿PlayerFramework.MediaPlugin = PlayerFramework.Plugin.extend(
{
	init: function(player, options, playerOptions)
	{
		///	<summary>
		///		Initializes the MediaPlugin base. Used as a base class for plugins that display media content in any form.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the MediaPlugin.
		///	</param>
		///	<param name="playerOptions" type="Object">
		///		The merged player options for the current media source.
		///	</param>
		///	<returns type="MediaPlugin" />

		this._super(player, options);

		this.playerOptions = playerOptions;
		this.element = null;
	},

	// Functions
	checkSupport: function(callback)
	{
		///	<summary>
		///		When overridden in a derived class, determines support for the media element.
		///	</summary>
		///	<param name="callback" type="Function">
		///		The function to call after support has been determined.
		///	</param>

		throw new Error("Not implemented.");
	}
});
﻿PlayerFramework.VideoMediaPlugin = PlayerFramework.MediaPlugin.extend(
{
	init: function(player, options, playerOptions)
	{
		///	<summary>
		///		Initializes the VideoMediaPlugin base.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the VideoMediaPlugin.
		///	</param>
		///	<param name="playerOptions" type="Object">
		///		The merged player options for the current media source.
		///	</param>
		///	<returns type="VideoMediaPlugin" />

		this._super(player, options, playerOptions);

		this.canPlayEvent = { type: "canplay" };
		this.canPlayThroughEvent = { type: "canplaythrough" };
		this.endedEvent = { type: "ended" };
		this.errorEvent = { type: "error" };
		this.fullScreenChangeEvent = { type: "fullscreenchange" };
		this.loadedDataEvent = { type: "loadeddata" };
		this.loadedMetadataEvent = { type: "loadedmetadata" };
		this.loadedMediaPluginEvent = { type: "loadedmediaplugin" };
		this.mouseOutEvent = { type: "mouseout" };
		this.mouseOverEvent = { type: "mouseover" };
		this.networkStateChangeEvent = { type: "networkstatechange" };
		this.pauseEvent = { type: "pause" };				
		this.playEvent = { type: "play" };
		this.progressEvent = { type: "progress" };
		this.seekedEvent = { type: "seeked" };
		this.seekingEvent = { type: "seeking" };
		this.timeUpdateEvent = { type: "timeupdate" };
		this.unloadingMediaPluginEvent = { type: "unloadingmediaplugin" };
		this.volumeChangeEvent = { type: "volumechange" };

		// Extend player
		// Properties
		player.buffered = PlayerFramework.proxy(this, this.buffered);
		player.canPlayType = PlayerFramework.proxy(this, this.canPlayType);
		player.controls = PlayerFramework.proxy(this, this.controls);
		player.currentTime = PlayerFramework.proxy(this, this.currentTime);
		player.displayingFullscreen = PlayerFramework.proxy(this, this.displayingFullscreen);
		player.duration = PlayerFramework.proxy(this, this.duration);
		player.error = PlayerFramework.proxy(this, this.error);
		player.muted = PlayerFramework.proxy(this, this.muted);
		player.networkState = PlayerFramework.proxy(this, this.networkState);
		player.paused = PlayerFramework.proxy(this, this.paused);
		player.poster = PlayerFramework.proxy(this, this.poster);
		player.preload = PlayerFramework.proxy(this, this.preload);
		player.readyState = PlayerFramework.proxy(this, this.readyState);
		player.scrubbing = PlayerFramework.proxy(this, this.seeking);
		player.seeking = PlayerFramework.proxy(this, this.seeking);
		player.volume = PlayerFramework.proxy(this, this.volume);

		// Functions
		player.pause = PlayerFramework.proxy(this, this.pause);
		player.play = PlayerFramework.proxy(this, this.play);
	},

	// Properties
	buffered: function()
	{
		///	<summary>
		///		When overridden in a derived class, gets a TimeRanges object that represents the ranges of the media resource.
		///	</summary>
		///	<returns type="TimeRanges" />

		throw new Error("Not implemented.");
	},

	controls: function(value)
	{
		///	<summary>
		///		When overridden in a derived class, gets or sets a boolean indicating whether the media element displays a control strip.
		///	</summary>
		///	<param name="value" type="Boolean" />
		///	<returns type="Boolean" />

		throw new Error("Not implemented.");
	},

	currentTime: function(value)
	{
		///	<summary>
		///		When overridden in a derived class, gets or sets the current playback position of the media element expressed in seconds.
		///	</summary>
		///	<param name="value" type="Number">
		///		The playback position to seek to.
		///	</param>
		///	<returns type="Number" />

		throw new Error("Not implemented.");
	},

	displayingFullscreen: function()
	{
		///	<summary>
		///		Gets a boolean value indicating whether the media element is displaying full screen.
		///	</summary>
		///	<returns type="Boolean" />

		if (!this.element || !this.element.parentNode)
			return false;

		return this.element.parentNode.className === "pf-container pf-full-browser";
	},

	duration: function()
	{
		///	<summary>
		///		When overridden in a derived class, gets the length of the media loaded in the media element expressed in seconds.
		///	</summary>
		///	<returns type="Number" />

		throw new Error("Not implemented.");
	},

	error: function()
	{
		///	<summary>
		///		Gets the last error the media element encountered.
		///	</summary>
		///	<returns type="Number" />

		throw new Error("Not implemented.");
	},

	muted: function(value)
	{
		///	<summary>
		///		When overridden in a derived class, gets or sets a boolean value indicating whether the media element is muted.
		///	</summary>
		///	<param name="value" type="Boolean" />
		///	<returns type="Boolean" />

		throw new Error("Not implemented.");
	},

	paused: function()
	{
		///	<summary>
		///		When overridden in a derived class, gets a boolean value indicating whether the media element is paused.
		///	</summary>
		///	<returns type="Boolean" />

		throw new Error("Not implemented.");
	},
	
	networkState: function()
	{
		///	<summary>
		///		Returns a value that expresses the current state of the element with respect to
		///		loading a resource over the network, from
		///		PlayerFramework.VideoMediaPlugin.NetworkState.
		///	</summary>
		///	<returns type="Number" />

		throw new Error("Not implemented.");
	},

	poster: function()
	{
		///	<summary>
		///		When overridden in a derived class, gets the URL of the poster image to display before initiating playback.
		///	</summary>
		///	<returns type="Boolean" />

		throw new Error("Not implemented.");
	},

	preload: function()
	{
		///	<summary>
		///		Gets the preload state of "none", "metadata", or "auto".
		///	</summary>
		///	<returns type="String" />

		throw new Error("Not implemented.");
	},

	readyState: function()
	{
		///	<summary>
		///		When overridden in a derived class, returns a value that expresses the current state
		///		of the element with respect to rendering the current playback position, from
		///		PlayerFramework.VideoMediaPlugin.ReadyState.
		///	</summary>
		///	<returns type="Number" />

		throw new Error("Not implemented.");
	},

	scrubbing: function()
	{
		///	<summary>

		///	</summary>
		///	<returns type="Boolean" />

		throw new Error("Not implemented.");
	},

	seeking: function()
	{
		///	<summary>

		///	</summary>
		///	<returns type="Boolean" />

		throw new Error("Not implemented.");
	},

	supportsVolumeSetter: function()
	{
		///	<summary>
		///		When overridden in a derived class, gets a boolean value indicating whether the media element supports setting the volume.
		///	</summary>
		///	<returns type="Boolean" />

		throw new Error("Not implemented.");
	},

	volume: function(value)
	{
		///	<summary>
		///		When overridden in a derived class, gets or sets the volume level in a range of 0.0 to 1.0.
		///	</summary>
		///	<param name="value" type="Number" />
		///	<returns type="Number" />

		throw new Error("Not implemented.");
	},

	// Functions
	canPlayType: function()
	{
		///	<summary>
		///		When overridden in a derived class, gets a boolean indicating whether the media element can play content of the specified type.
		///	</summary>
		///	<param name="type" type="String" />
		///	<returns type="Boolean" />

		throw new Error("Not implemented.");
	},

	pause: function()
	{
		///	<summary>
		///		When overridden in a derived class, pauses the media.
		///	</summary>

		throw new Error("Not implemented.");
	},

	play: function()
	{
		///	<summary>
		///		When overridden in a derived class, plays the media.
		///	</summary>

		throw new Error("Not implemented.");
	},

	setup: function()
	{
		///	<summary>
		///		When overridden in a derived class, completes remaining setup operations after the media plugin is selected as the supported media plugin.
		///	</summary>

		throw new Error("Not implemented.");
	},

	// Event Handlers
	onCanPlay: function()
	{
		///	<summary>
		///		Dispatches the "canplay" event.
		///	</summary>
		
		this.player.dispatchEvent(this.canPlayEvent);
	},

	onCanPlayThrough: function()
	{
		///	<summary>
		///		Dispatches the "canplaythrough" event.
		///	</summary>
		
		this.player.dispatchEvent(this.canPlayThroughEvent);
	},

	onEnded: function()
	{
		///	<summary>
		///		Dispatches the "ended" event on behalf of the Player object.
		///	</summary>

		this.player.dispatchEvent(this.endedEvent);
	},

	onError: function()
	{
		///	<summary>
		///		Dispatches the "error" event on behalf of the Player object.
		///	</summary>

		this.player.dispatchEvent(this.errorEvent);
	},

	onFullScreenChange: function()
	{
		///	<summary>
		///		Dispatches the "fullscreenchange" event on behalf of the Player object.
		///	</summary>

		this.player.dispatchEvent(this.fullScreenChangeEvent);
	},

	onLoadedData: function()
	{
		///	<summary>
		///		Dispatches the "loadeddata" event.
		///	</summary>
		
		this.player.dispatchEvent(this.loadedDataEvent);
	},

	onLoadedMetadata: function()
	{
		///	<summary>
		///		Dispatches the "loadedmetadata" event.
		///	</summary>
		
		this.player.dispatchEvent(this.loadedMetadataEvent);
	},

	onLoadedMediaPlugin: function()
	{
		///	<summary>
		///		Dispatches the "loadedMediaPlugin" event on behalf of the Player object.
		///	</summary>

		this.player.dispatchEvent(this.loadedMediaPluginEvent);
	},

	onNetworkStateChange: function()
	{
		///	<summary>
		///		Dispatches the "networkstatechange" event on behalf of the Player object.
		///	</summary>
		
		this.player.dispatchEvent(this.networkStateChangeEvent);
	},

	onMouseOut: function()
	{
		///	<summary>
		///		Dispatches the "mouseout" event on behalf of the Player object.
		///	</summary>

		this.player.dispatchEvent(this.mouseOutEvent);
	},

	onMouseOver: function()
	{
		///	<summary>
		///		Dispatches the "mouseover" event on behalf of the Player object.
		///	</summary>

		this.player.dispatchEvent(this.mouseOverEvent);
	},

	onPause: function()
	{
		///	<summary>
		///		Dispatches the "pause" event on behalf of the Player object.
		///	</summary>

		this.player.dispatchEvent(this.pauseEvent);
	},

	onPlay: function()
	{	
		///	<summary>
		///		Dispatches the "play" event on behalf of the Player object.
		///	</summary>
		
		this.player.dispatchEvent(this.playEvent);
	},

	onProgress: function()
	{
		///	<summary>
		///		Dispatches the "progress" event on behalf of the Player object.
		///	</summary>

		this.player.dispatchEvent(this.progressEvent);
	},

	onSeeked: function(e)
	{
		///	<summary>
		///		Called when the media plugin has completed seeking.
		///	</summary>

		this.player.dispatchEvent(this.seekedEvent);
	},
	
	onSeeking: function(e)
	{
		///	<summary>
		///		Called continuously while the media plugin is seeking.
		///	</summary>

		this.player.dispatchEvent(this.seekingEvent);
	},

	onTimeUpdate: function()
	{
		///	<summary>
		///		Dispatches the "timeupdate" event on behalf of the Player object.
		///	</summary>
		
		this.player.dispatchEvent(this.timeUpdateEvent);
	},

	onUnloadingMediaPlugin: function()
	{
		///	<summary>
		///		Dispatches the "unloadingmediaplugin" event.
		///	</summary>

		this.player.dispatchEvent(this.unloadingMediaPluginEvent);
	},

	onVolumeChange: function()
	{
		///	<summary>
		///		Dispatches the "volumechange" event on behalf of the Player object.
		///	</summary>

		this.player.dispatchEvent(this.volumeChangeEvent);
	}
});

PlayerFramework.VideoMediaPlugin.ReadyState =
{
	///	<summary>
	///		A JSON object used to store the values of the media plugin's ready state.
	///	</summary>

	HAVE_NOTHING: 0,
	HAVE_METADATA: 1,
	HAVE_CURRENT_DATA: 2,
	HAVE_FUTURE_DATA: 3,
	HAVE_ENOUGH_DATA: 4
};

PlayerFramework.VideoMediaPlugin.NetworkState =
{
	///	<summary>
	///		A JSON object used to store the values of the media plugin's network state.
	///	</summary>

	NETWORK_EMPTY: 0,
	NETWORK_IDLE: 1,
	NETWORK_LOADING: 2,
	NETWORK_NO_SOURCE: 3
};

PlayerFramework.VideoMediaPlugin.MediaError =
{
	///	<summary>
	///		A JSON object used to store the values of the media plugin's media error states.
	///	</summary>

	MEDIA_ERR_ABORTED: 1,
	MEDIA_ERR_NETWORK: 2,
	MEDIA_ERR_DECODE: 3,
	MEDIA_ERR_SRC_NOT_SUPPORTED: 4
};
﻿PlayerFramework.ControlPlugin = PlayerFramework.ModulePlugin.extend(
{
	init: function(player, options)
	{
		///	<summary>
		///		Initializes the ControlPlugin base and listens for events needed to change the state of the controls.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the ControlPlugin.
		///	</param>
		///	<returns type="ControlPlugin" />
		
		this._super(player, options);

		this.player.addEventListener("canplaythrough", PlayerFramework.proxy(this, this.onCanPlayThrough), false);
		this.player.addEventListener("ended", PlayerFramework.proxy(this, this.onEnded), false);
		this.player.addEventListener("error", PlayerFramework.proxy(this, this.onError), false);
		this.player.addEventListener("fullscreenchange", PlayerFramework.proxy(this, this.onFullScreenChange), false);
		this.player.addEventListener("loadedmediaplugin", PlayerFramework.proxy(this, this.onLoadedMediaPlugin), false);
		this.player.addEventListener("mouseout", PlayerFramework.proxy(this, this.onPlayerMouseOut), false);
		this.player.addEventListener("mouseover", PlayerFramework.proxy(this, this.onPlayerMouseOver), false);
		this.player.addEventListener("networkstatechange", PlayerFramework.proxy(this, this.onNetworkStateChange), false);
		this.player.addEventListener("pause", PlayerFramework.proxy(this, this.onPause), false);
		this.player.addEventListener("play", PlayerFramework.proxy(this, this.onPlay), false);
		this.player.addEventListener("progress", PlayerFramework.proxy(this, this.onProgress), false);
		this.player.addEventListener("ready", PlayerFramework.proxy(this, this.onReady), false);
		this.player.addEventListener("seeked", PlayerFramework.proxy(this, this.onSeeked), false);
		this.player.addEventListener("seeking", PlayerFramework.proxy(this, this.onSeeking), false);
		this.player.addEventListener("timeupdate", PlayerFramework.proxy(this, this.onTimeUpdate), false);
		this.player.addEventListener("unloadingmediaplugin", PlayerFramework.proxy(this, this.onUnloadingMediaPlugin), false);
		this.player.addEventListener("volumechange", PlayerFramework.proxy(this, this.onVolumeChange), false);
	},

	// Properties
	mediaPlugin: function()
	{
		///	<summary>
		///		Returns the player's media plugin for convenience.
		///	</summary>

		return this.player.mediaPlugin;
	},

	// Event Handlers
	onCanPlayThrough: function(e)
	{
		///	<summary>
		///		Called when the media element can play through to the end without having to stop for further buffering.
		///	</summary>
	},

	onEnded: function(e)
	{
		///	<summary>
		///		Called when the media playback ends.
		///	</summary>
	},

	onError: function(e)
	{
		///	<summary>
		///		Called when the media element encounters an error.
		///	</summary>
	},

	onFullScreenChange: function(e)
	{
		///	<summary>
		///		Called when the media element changes to and from full screen.
		///	</summary>
	},

	onLoadedMediaPlugin: function(e)
	{
		///	<summary>
		///		Called after the media plugin is loaded.
		///	</summary>
	},

	onPlayerMouseOut: function(e)
	{
		///	<summary>
		///		Called when the mouse leaves the player.
		///	</summary>
	},

	onPlayerMouseOver: function(e)
	{
		///	<summary>
		///		Called when the mouse enters the player.
		///	</summary>
	},

	onNetworkStateChange: function(e)
	{
		///	<summary>
		///		Called when the media element's network state changes.
		///	</summary>
	},

	onPause: function(e)
	{
		///	<summary>
		///		Called when the media pauses.
		///	</summary>
	},

	onPlay: function(e)
	{
		///	<summary>
		///		Called when the media plays.
		///	</summary>
	},

	onProgress: function(e)
	{
		///	<summary>
		///		Called when the media buffers more data.
		///	</summary>
	},

	onReady: function(e)
	{
		///	<summary>
		///		Called when the player is ready for playback.
		///	</summary>
	},

	onSeeked: function(e)
	{
		///	<summary>
		///		
		///	</summary>
	},
	
	onSeeking: function(e)
	{
		///	<summary>
		///		
		///	</summary>
	},
	
	onTimeUpdate: function(e)
	{
		///	<summary>
		///		Called when the current time of the media is updated.
		///	</summary>
	},

	onUnloadingMediaPlugin: function(e)
	{
		///	<summary>
		///		Called when the media element unloads.
		///	</summary>
	},

	onVolumeChange: function(e)
	{
		///	<summary>
		///		Called when the volume level of the media changes.
		///	</summary>
	}
});
﻿PlayerFramework.Plugins.VideoElementMediaPluginBase = PlayerFramework.VideoMediaPlugin.extend(
{
	defaultOptions: function(player, playerOptions)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			"class": "pf-video",
			controls: false,
			supportsTrackElements: true
		});
	},

	init: function(player, options, playerOptions)
	{
		///	<summary>
		///		Initializes the VideoMediaPlugin that wraps the HTML5 video element.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the VideoElementMediaPluginBase.
		///	</param>
		///	<param name="playerOptions" type="Object">
		///		The merged player options for the current media source.
		///	</param>
		///	<returns type="VideoElementMediaPluginBase" />

		this._super(player, options, playerOptions);
		
		if (this.options.element)
		{
			if (this.options.element.tagName && this.options.element.tagName.toLowerCase() !== "video")
				throw new TypeError("options.element not a video tag.");

			this.element = this.options.element;
		}
	},

	// VideoMediaPlugin Properties
	buffered: function()
	{
		///	<summary>
		///		Gets a TimeRanges object that represents the ranges of the media resource.
		///	</summary>
		///	<returns type="TimeRanges" />

		return this.element.buffered;
	},

	controls: function(value)
	{
		///	<summary>
		///		Gets or sets a boolean indicating whether the media element displays a control strip.
		///	</summary>
		///	<param name="value" type="Boolean" />
		///	<returns type="Boolean" />

		if (value !== undefined)
			this.element.controls = value;

		return this.element.controls;
	},

	currentTime: function(value)
	{
		///	<summary>
		///		Gets or sets the current playback position of the media element expressed in seconds.
		///	</summary>
		///	<param name="value" type="Number">
		///		The playback position to seek to.
		///	</param>
		///	<returns type="Number" />

		if (value !== undefined)
			this.element.currentTime = value;
		
		return this.element.currentTime;
	},

	duration: function()
	{
		///	<summary>
		///		Gets the length of the media loaded in the media element expressed in seconds.
		///	</summary>
		///	<returns type="Number" />

		return this.element.duration || 0;
	},

	error: function()
	{
		///	<summary>
		///		Gets the last error the media element encountered.
		///	</summary>
		///	<returns type="Number" />

		return this.element.error;
	},

	ended: function()
	{
		///	<summary>
		///		Gets a boolean value indicating whether the media element has ended.
		///	</summary>
		///	<returns type="Boolean" />

		return this.element.ended;
	},

	muted: function(value)
	{
		///	<summary>
		///		Gets or sets a boolean value indicating whether the media element is muted.
		///	</summary>
		///	<param name="value" type="Boolean" />
		///	<returns type="Boolean" />

		if (value !== undefined)
			this.element.muted = value;
		
		return this.element.muted;
	},

	networkState: function()
	{
		///	<summary>
		///		Returns a value that expresses the current state of the element with respect to
		///		loading a resource over the network, from
		///		PlayerFramework.VideoMediaPlugin.NetworkState.
		///	</summary>
		///	<returns type="Number" />

		var networkState;

		switch (this.element.networkState)
		{
			case HTMLMediaElement.NETWORK_EMPTY:
				networkState = PlayerFramework.VideoMediaPlugin.NetworkState.NETWORK_EMPTY;
				break;

			case HTMLMediaElement.NETWORK_IDLE:
				networkState = PlayerFramework.VideoMediaPlugin.NetworkState.NETWORK_IDLE;
				break;

			case HTMLMediaElement.NETWORK_LOADING:
				networkState = PlayerFramework.VideoMediaPlugin.NetworkState.NETWORK_LOADING;
				break;

			case HTMLMediaElement.NETWORK_LOADED:
				// Available only in Safari and not in the W3C spec; Mapped to NETWORK_IDLE.
				networkState = PlayerFramework.VideoMediaPlugin.NetworkState.NETWORK_IDLE;
				break;

			case HTMLMediaElement.NETWORK_NO_SOURCE:
				networkState = PlayerFramework.VideoMediaPlugin.NetworkState.NETWORK_NO_SOURCE;
				break;
		}

		return networkState;
	},

	paused: function()
	{
		///	<summary>
		///		Gets a boolean value indicating whether the media element is paused.
		///	</summary>
		///	<returns type="Boolean" />

		return this.element.paused;
	},

	poster: function()
	{
		///	<summary>
		///		Gets the URL of the poster image to display before initiating playback.
		///	</summary>
		///	<returns type="Boolean" />

		return this.element.poster;
	},

	preload: function()
	{
		///	<summary>
		///		Gets the preload state of "none", "metadata", or "auto".
		///	</summary>
		///	<returns type="String" />

		return this.element.preload;
	},

	readyState: function()
	{
		///	<summary>
		///		Returns a value that expresses the current state of the element with respect to
		///		rendering the current playback position, from
		///		PlayerFramework.VideoMediaPlugin.ReadyState.
		///	</summary>
		///	<returns type="Number" />

		var readyState;

		switch (this.element.readyState)
		{
			case HTMLMediaElement.HAVE_NOTHING:
				readyState = PlayerFramework.VideoMediaPlugin.ReadyState.HAVE_NOTHING;
				break;

			case HTMLMediaElement.HAVE_METADATA:
				readyState = PlayerFramework.VideoMediaPlugin.ReadyState.HAVE_METADATA;
				break;

			case HTMLMediaElement.HAVE_CURRENT_DATA:
				readyState = PlayerFramework.VideoMediaPlugin.ReadyState.HAVE_CURRENT_DATA;
				break;

			case HTMLMediaElement.HAVE_FUTURE_DATA:
				readyState = PlayerFramework.VideoMediaPlugin.ReadyState.HAVE_FUTURE_DATA;
				break;

			case HTMLMediaElement.HAVE_ENOUGH_DATA:
				readyState = PlayerFramework.VideoMediaPlugin.ReadyState.HAVE_ENOUGH_DATA;
				break;
		}

		return readyState;
	},

	scrubbing: function()
	{
		///	<summary>

		///	</summary>
		///	<returns type="Boolean" />

		return this.element.seeking;
	},

	seeking: function()
	{
		///	<summary>

		///	</summary>
		///	<returns type="Boolean" />

		return this.element.seeking;
	},

	supportsVolumeSetter: function()
	{
		///	<summary>
		///		Gets a boolean value indicating whether the media element supports setting the volume.
		///	</summary>
		///	<returns type="Boolean" />

		// Try decrementing the volume level. If the volume level remains at 1, then the volume level
		// cannot be adjusted.
		this.element.volume -= .01;
		var canChangeVolume = this.volume() !== 1;
		if (canChangeVolume)
			this.element.volume += .01;
		return canChangeVolume;
	},

	volume: function(value)
	{
		///	<summary>
		///		Gets or sets the volume level in a range of 0.0 to 1.0.
		///	</summary>
		///	<param name="value" type="Number" />
		///	<returns type="Number" />

		if (value)
			this.element.volume = value;

		return this.element.volume;
	},

	// MediaPlugin Functions
	canPlayType: function(type)
	{
		///	<summary>
		///		Gets a boolean indicating whether the media element can play content of the specified type.
		///	</summary>
		///	<param name="type" type="String" />
		///	<returns type="Boolean" />

		if (this.element)
			return this.element.canPlayType(type);

		return document.createElement("video").canPlayType(type);
	},

	checkSupport: function(callback)
	{
		///	<summary>
		///		Determines support for the media element.
		///	</summary>
		///	<param name="callback" type="Function">
		///		The function to call after support has been determined.
		///	</param>

		var firstSupportedSource = null;
		
		if (this.element.canPlayType)
		{
			var sourceElementArray = PlayerFramework.convertNodeListToArray(this.element.getElementsByTagName("source"));
			var sources = PlayerFramework.filter(sourceElementArray, PlayerFramework.proxy(this, function(s)
			{
				return s.parentNode === this.element;
			}));

			// Iterate over the video sources and use the video's canPlayType function to determine support.
			firstSupportedSource = PlayerFramework.first(sources, PlayerFramework.proxy(this, function(s)
			{
				return !!this.canPlayType(s.type).replace(/no/, "");
			}));

			// Detect stock Android browser and force .mp4 source if one exists
			// (feature detection is not possible: https://github.com/Modernizr/Modernizr/wiki/Undetectables)
			if (!firstSupportedSource && /Android.*AppleWebKit/i.test(navigator.userAgent))
			{
				firstSupportedSource = PlayerFramework.first(sources, PlayerFramework.proxy(this, function(s)
				{
					return s.type.match(/mp4/);
				}));

				if (firstSupportedSource)
				{
					this.element.src = firstSupportedSource.src;
					this.element.load();
				}
			}
		}

		callback(!!firstSupportedSource);
	},

	pause: function()
	{
		///	<summary>
		///		Pauses the media.
		///	</summary>
		
		this.element.pause();
	},

	play: function()
	{
		///	<summary>
		///		Plays the media.
		///	</summary>
		
		this.element.play();
	},

	setup: function()
	{
		///	<summary>
		///		When overridden in a derived class, completes remaining setup operations after the media plugin is selected as the supported media plugin.
		///	</summary>

		this.controls(!!this.options.controls);
		this.volume(this.playerOptions.initialVolume);

		// Detect iOS by checking if volume can be set using the API.
		// Remove, clone, and re-add video element (iOS seems to prevent controlling the video tag
		// if it isn't displayed or added after initialization).
		if (!this.controls() && !this.supportsVolumeSetter()) 
			this.cloneAndReplaceVideoElement();

		if (this.preload() != "none")
			window.setTimeout(PlayerFramework.proxy(this, function() { this.checkBufferProgress(10, 0, 0); }), 1);
		else
			window.setTimeout(PlayerFramework.proxy(this, this.onCanPlayThrough), 1);

		this.addEventListeners();
		this.checkNetworkState();
	},

	// Functions
	addEventListeners: function()
	{
		///	<summary>
		///		Adds event listeners to the media element.
		///	</summary>
		
		PlayerFramework.addEvent(this.element, "canplay", PlayerFramework.proxy(this, this.onCanPlay));
		PlayerFramework.addEvent(this.element, "canplaythrough", PlayerFramework.proxy(this, this.onCanPlayThrough));
		PlayerFramework.addEvent(this.element, "error", PlayerFramework.proxy(this, this.onError));
		PlayerFramework.addEvent(this.element, "ended", PlayerFramework.proxy(this, this.onEnded));
		PlayerFramework.addEvent(this.element, "loadeddata", PlayerFramework.proxy(this, this.onLoadedData));
		PlayerFramework.addEvent(this.element, "loadedmetadata", PlayerFramework.proxy(this, this.onLoadedMetadata));
		PlayerFramework.addEvent(this.element, "pause", PlayerFramework.proxy(this, this.onPause));
		PlayerFramework.addEvent(this.element, "play", PlayerFramework.proxy(this, this.onPlay));
		PlayerFramework.addEvent(this.element, "progress", PlayerFramework.proxy(this, this.onProgress));
		PlayerFramework.addEvent(this.element, "seeked", PlayerFramework.proxy(this, this.onSeeked));
		PlayerFramework.addEvent(this.element, "seeking", PlayerFramework.proxy(this, this.onSeeking));
		PlayerFramework.addEvent(this.element, "timeupdate", PlayerFramework.proxy(this, this.onTimeUpdate));
		PlayerFramework.addEvent(this.element, "volumechange", PlayerFramework.proxy(this, this.onVolumeChange));
		PlayerFramework.addEvent(this.element, "mouseout", PlayerFramework.proxy(this, this.onMouseOut));
		PlayerFramework.addEvent(this.element, "mouseover", PlayerFramework.proxy(this, this.onMouseOver));
	},

	checkBufferProgress: function(maxBufferPollingIterations, bufferPollingIterations, previousBufferFraction)
	{
		///	<summary>
		///		Workaround for Safari: Waits for the video's ready state to be set to "HAVE_ENOUGH_DATA"
		///		Workaround for Mobile Safari: Polls for changes in the buffer. If there are no
		///		changes in the buffer after maxBufferPollingIterations, then the "canplaythrough"
		///		event is dispatched.
		///	</summary>

		if (this.readyState() === PlayerFramework.VideoMediaPlugin.ReadyState.HAVE_ENOUGH_DATA || this.buffered().length == 0)
		{
			window.setTimeout(PlayerFramework.proxy(this, this.onCanPlayThrough), 1);
			return;
		}
		else if (this.buffered().length > 0)
		{
			var duration = this.duration() > 0 ? this.duration() : 0;
			var bufferFraction = this.duration() > 0 ? this.buffered().end(0) / this.duration() : 0;
			
			if (bufferFraction === previousBufferFraction)
			{
				if (bufferPollingIterations === maxBufferPollingIterations)
				{
					this.onCanPlayThrough();
					return;
				}
				else
				{
					bufferPollingIterations++;
				}
			}
			else
			{
				previousBufferFraction = bufferFraction;
				bufferPollingIterations = 0;
			}
		}
		else if (this.networkState() === PlayerFramework.VideoMediaPlugin.NetworkState.NETWORK_NO_SOURCE || this.error())
		{
			return;
		}

		window.setTimeout(PlayerFramework.proxy(this, function()
		{
			this.checkBufferProgress(maxBufferPollingIterations, bufferPollingIterations, previousBufferFraction);
		}), 100);
	},

	checkNetworkState: function(previousNetworkState)
	{
		///	<summary>
		///		Polls for changes in the media element's network state property.
		///	</summary>

		var currentNetworkState = this.networkState();

		if (currentNetworkState !== previousNetworkState)
		{
			window.setTimeout(PlayerFramework.proxy(this, this.onNetworkStateChange), 1);
			previousNetworkState = currentNetworkState;
		}

		window.setTimeout(PlayerFramework.proxy(this, function()
		{
			this.checkNetworkState(previousNetworkState);
		}), 100);
	},

	cloneAndReplaceVideoElement: function()
	{
		///	<summary>
		///		Clones and replaces the video element. Used in the case of iOS to take control of the video element.
		///	</summary>

		var nextSibling = this.element.nextSibling;
		var parentNode = this.element.parentNode;
		var oldChild = parentNode.removeChild(this.element);
		this.element = oldChild.cloneNode(true);
		// Move off screen until the video starts to hide QuickTime logo.
		this.element.style["-webkit-transform"] = "translateX(-" + 2000 + "px)";
		PlayerFramework.addEvent(this.element, "timeupdate", PlayerFramework.proxy(this, function()
		{
			this.element.style["-webkit-transform"] = "translateX(0)";
		}));
		parentNode.insertBefore(this.element, nextSibling);
	}
});

// Workaround to make video tag styleable in IE<9: http://ejohn.org/blog/html5-shiv
// The script or the following line must appear in the head (before the video tag is parsed by IE) for this to work.
document.createElement("video");
﻿PlayerFramework.Plugins.SilverlightMediaPluginBase = PlayerFramework.VideoMediaPlugin.extend(
{
	defaultOptions: function(player, playerOptions)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			"class": "pf-silverlight",
			controls: false,
			supportsTrackElements: false
		});
	},

	init: function(player, options, playerOptions)
	{
		///	<summary>
		///		Initializes the VideoMediaPlugin that wraps the Silverlight player.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the SilverlightMediaPluginBase.
		///	</param>
		///	<param name="playerOptions" type="Object">
		///		The merged player options for the current media source.
		///	</param>
		///	<returns type="SilverlightMediaPluginBase" />
		
		this._super(player, options, playerOptions);

		if (this.options.element)
		{
			if (this.options.element.tagName && this.options.element.tagName.toLowerCase() !== "object")
				throw new TypeError("options.element not a video tag.");

			this.setElement(this.options.element);
		}

		this.seekingValue = false;
	},

	// VideoMediaPlugin Properties
	controls: function(value)
	{
		///	<summary>
		///		Gets or sets a boolean indicating whether the media element displays a control strip.
		///	</summary>
		///	<param name="value" type="Boolean" />
		///	<returns type="Boolean" />

		if (value !== undefined)
			this.silverlightPlayer.IsControlStripVisible = value;

		return this.silverlightPlayer.IsControlStripVisible;
	},

	currentTime: function(value)
	{
		///	<summary>
		///		Gets or sets the current playback position of the media element expressed in seconds.
		///	</summary>
		///	<param name="value" type="Number">
		///		The playback position to seek to.
		///	</param>
		///	<returns type="Number" />

		try
		{
			if (value)
				this.silverlightPlayer.SeekToPosition(value);
		
			return this.silverlightPlayer.PlaybackPositionSeconds;
		}
		catch(e)
		{
			return 0;
		}
	},

	duration: function()
	{
		///	<summary>
		///		Gets the length of the media loaded in the media element expressed in seconds.
		///	</summary>
		///	<returns type="Number" />

		try
		{
			return this.silverlightPlayer.EndPositionSeconds;
		}
		catch(e)
		{
			return 0;
		}
	},

	error: function()
	{
		///	<summary>
		///		Gets the last error the media element encountered.
		///	</summary>
		///	<returns type="Number" />

		return this.lastError;
	},

	muted: function(value)
	{
		///	<summary>
		///		Gets or sets a boolean value indicating whether the media element is muted.
		///	</summary>
		///	<param name="value" type="Boolean" />
		///	<returns type="Boolean" />

		if (value !== undefined)
		{
			this.silverlightPlayer.IsMuted = value;

			// Silverlight player will not dispatch the "volumechanged" when the IsMuted property changes.
			// The media plugin interface must dispatch the "volumechanged" to indicate that the media element is muted.
			this.silverlightPlayer.SetVolume(this.silverlightPlayer.GetVolume() + .00001);
			this.silverlightPlayer.SetVolume(this.silverlightPlayer.GetVolume() - .00001);
		}
		
		return this.silverlightPlayer.IsMuted;
	},

	networkState: function()
	{
		return PlayerFramework.VideoMediaPlugin.NetworkState.NETWORK_IDLE;
	},

	paused: function()
	{
		///	<summary>
		///		Gets a boolean value indicating whether the media element is paused.
		///	</summary>
		///	<returns type="Boolean" />

		return this.silverlightPlayer.PlayState === PlayerFramework.Plugins.SilverlightMediaPluginBase.PlayState.Paused;
	},

	poster: function()
	{
		///	<summary>
		///		Gets the URL of the poster image to display before initiating playback.
		///	</summary>
		///	<returns type="Boolean" />

		var posterAttribute = this.element.getAttribute("data-poster");

		if (posterAttribute)
			return posterAttribute.valueOf();

		return null;
	},

	preload: function()
	{
		///	<summary>
		///		Gets the preload state of "none", "metadata", or "auto".
		///	</summary>
		///	<returns type="String" />

		return "auto";
	},

	readyState: function()
	{
		///	<summary>
		///		Returns a value that expresses the current state of the element with respect to
		///		rendering the current playback position, from
		///		PlayerFramework.VideoMediaPlugin.ReadyState.
		///	</summary>
		///	<returns type="Number" />

		return this.silverlightPlayer.PlayState > PlayerFramework.Plugins.SilverlightMediaPluginBase.PlayState.Buffering
				? PlayerFramework.VideoMediaPlugin.ReadyState.HAVE_ENOUGH_DATA
				: PlayerFramework.VideoMediaPlugin.ReadyState.HAVE_NOTHING;
	},

	scrubbing: function()
	{
		///	<summary>

		///	</summary>
		///	<returns type="Boolean" />

		return this.seekingValue;
	},

	seeking: function()
	{
		///	<summary>

		///	</summary>
		///	<returns type="Boolean" />

		return this.seekingValue;
	},

	supportsVolumeSetter: function()
	{
		///	<summary>
		///		Gets a boolean value indicating whether the media element supports setting the volume.
		///	</summary>
		///	<returns type="Boolean" />

		return true;
	},

	volume: function(value)
	{
		///	<summary>
		///		Gets or sets the volume level in a range of 0.0 to 1.0.
		///	</summary>
		///	<param name="value" type="Number" />
		///	<returns type="Number" />

		if (value)
			this.silverlightPlayer.SetVolume(value);

		return this.silverlightPlayer.GetVolume();
	},

	// MediaPlugin Functions
	canPlayType: function(type)
	{
		///	<summary>
		///		Gets a boolean indicating whether the media element can play content of the specified type.
		///	</summary>
		///	<param name="type" type="String" />
		///	<returns type="Boolean" />

		var supportedTypes = [ /video\/mp4/i, /text\/xml/i ];

		for (var i = 0; i < supportedTypes.length; i++)
		{
			if (supportedTypes[i].test(type))
				return true;
		}

		return false;
	},

	checkSupport: function(callback)
	{
		///	<summary>
		///		Determines support for the media element.
		///	</summary>
		///	<param name="callback" type="Function">
		///		The function to call after support has been determined.
		///	</param>
		
		var isSupported = false;

		// Check if the Silverlight plugin is available.
		if (navigator.plugins)
		{
			isSupported = !!navigator.plugins["Silverlight Plug-In"];
		}

		// If using IE, check if ActiveXObjects are available and attempt to create a Silverlight plugin.
		if (!isSupported && window.ActiveXObject)
		{
			try
			{
				var slControl = new ActiveXObject("AgControl.AgControl");
				isSupported = true;
			}
			catch (e)
			{
			}
		}
		
		if (this.options.initParams && !this.options.initParams.mediaurl)
			isSupported = false;

		if (isSupported)
		{
			this.checkSupportCallback = callback;
			this.onLoadOrError();
		}
		else
		{
			callback(false);
		}
	},

	pause: function()
	{
		///	<summary>
		///		Pauses the media.
		///	</summary>

		try
		{
			this.silverlightPlayer.Pause();
		}
		catch(e)
		{
		}
	},
	
	play: function()
	{
		///	<summary>
		///		Plays the media.
		///	</summary>
	    if (this.silverlightPlayer !== undefined)
		    this.silverlightPlayer.Play();
	},

	setup: function()
	{
		///	<summary>
		///		Completes remaining setup operations after the media plugin is selected as the supported media plugin.
		///	</summary>
	},

	// Functions
	addEventListeners: function()
	{
		///	<summary>
		///		Adds event listeners to the media element.
		///	</summary>

		// Using addEventListener directly instead of PlayerFramework.addEvent because addEventListener will be supported by Silverlight player.
		this.silverlightPlayer.addEventListener("ApplicationExit", PlayerFramework.proxy(this, this.onUnloadingMediaPlugin), false);
		this.silverlightPlayer.addEventListener("MediaEnded", PlayerFramework.proxy(this, this.onEnded), false);
		this.silverlightPlayer.addEventListener("MediaFailed", PlayerFramework.proxy(this, this.onMediaFailed), false);
		this.silverlightPlayer.addEventListener("PlayStateChanged", PlayerFramework.proxy(this, this.onPlayStateChanged), false);
		this.silverlightPlayer.addEventListener("PlaybackPositionChanged", PlayerFramework.proxy(this, this.onTimeUpdate), false);
		this.silverlightPlayer.addEventListener("VolumeLevelChanged", PlayerFramework.proxy(this, this.onVolumeChange), false);
		this.silverlightPlayer.addEventListener("SeekCompleted", PlayerFramework.proxy(this, this.onSeekCompleted), false);
		PlayerFramework.addEvent(this.element, "mouseout", PlayerFramework.proxy(this, this.onMouseOut));
		PlayerFramework.addEvent(this.element, "mouseover", PlayerFramework.proxy(this, this.onMouseOver));
	},

	setElement: function(element)
	{
		///	<summary>
		///		Handles needed operations after the element becomes available through either the
		///		declarative approach or the injected approach.
		///	</summary>
		///	<param name="callback" type="Function">
		///		The function to call after support has been determined.
		///	</param>

		this.element = element;
		this.element.style["-webkit-transform"] = "translateX(-" + 2000 + "px)";
		
		// Set callback functions on the element that can be called outside of an instance of a media plugin.
		// Used by the global Silverlight event handlers.
		this.element.onLoadCallback = PlayerFramework.proxy(this, this.onElementLoad);
		this.element.onErrorCallback = PlayerFramework.proxy(this, this.onElementError);
	},

	// Event Handlers
	onElementError: function()
	{
		///	<summary>
		///		Error handler callback for this specific instance of the SilverlightMediaPluginBase.
		///	</summary>
		///	<param name="callback" type="Function">
		///		The function to call after support has been determined.
		///	</param>

		this.hasError = true;
		this.onLoadOrError();
	},

	onElementLoad: function(silverlightPlayer)
	{
		///	<summary>
		///		Load handler callback for this specific instance of the SilverlightMediaPlugin.
		///	</summary>
		///	<param name="silverlightPlayer" type="Object">
		///		The JavaScript bridge object for this specific Silverlight player.
		///	</param>

		// Check if the browser is loading the plugin for the first time (some browsers reload the plugin each time it is displayed).
		var isFirstLoad = true;
		if (this.silverlightPlayer)
			isFirstLoad = false;

		this.silverlightPlayer = silverlightPlayer;
		this.isReady = true;
		this.controls(!!this.options.controls);
		this.volume(this.playerOptions.initialVolume);
		
		// Only callback if the plugin is loading for the first time, otherwise reset the timeline.
		if (isFirstLoad)
			this.onLoadOrError();
		else
			this.onTimeUpdate();
			
		if (this.controls())
			this.element.height = 360;

		this.addEventListeners();
		
		this.element.style["-webkit-transform"] = "translateX(0)";

		// Re-add ControlPlugin event listeners when Silverlight reloads.
		if (!isFirstLoad)
			this.onLoadedMediaPlugin();
	},

	onLoadOrError: function()
	{
		///	<summary>
		///		Controls when the checkSupportCallback is called by the checkSupport,
		///		onLoadCallback, and onErrorCallback functions. The checkSupport function must
		///		complete and either the onLoadCallback or the onErrorCallback function must
		///		complete.
		///	</summary>

		if (this.checkSupportCallback)
		{
			if (this.hasError)
				this.checkSupportCallback(false);
			else if (this.isReady)
				this.checkSupportCallback(true);
		}
	},

	onMediaFailed: function(e)
	{	
		///	<summary>
		///		Called if the Silverlight player's media fails to download. Creates MediaError
		///		specifying a network error and calls the base onError handler.
		///	</summary>

		this.lastError =
		{
			code: PlayerFramework.VideoMediaPlugin.MediaError.MEDIA_ERR_NETWORK
		};
		
		this.onError();
	},
	
	onPlayStateChanged: function()
	{	
		///	<summary>
		///		Handler that determines if the Silverlight player is in a Playing or Paused stated and calls the
		///		respective media plugin handler.
		///	</summary>

		try
		{
			var playState = this.silverlightPlayer.PlayState;
			if (playState === PlayerFramework.Plugins.SilverlightMediaPluginBase.PlayState.Paused)
				this.onPause();
			else if (playState === PlayerFramework.Plugins.SilverlightMediaPluginBase.PlayState.Playing)
				this.onPlay();
		
			if (playState === PlayerFramework.Plugins.SilverlightMediaPluginBase.PlayState.Playing	||
				playState === PlayerFramework.Plugins.SilverlightMediaPluginBase.PlayState.Paused	||
				playState === PlayerFramework.Plugins.SilverlightMediaPluginBase.PlayState.Stopped	||
				playState === PlayerFramework.Plugins.SilverlightMediaPluginBase.PlayState.ClipPlaying)
				this.onCanPlayThrough();
		}
		catch(e)
		{
		}
	},

	onSeekCompleted: function()
	{
		///	<summary>
		///		Handler that determines if the Silverlight player is currently seeking
		///		or if it has completed seeking.
		///	</summary>
		var currentSeekTime = (!Date.Now ? (new Date()).valueOf : Date.now());

		PlayerFramework.proxy(this, function(previousSeekTime)
		{
			window.setTimeout(PlayerFramework.proxy(this, function()
			{
				this.seekingValue = currentSeekTime != previousSeekTime;

				if (this.seekingValue)
					this.onSeeking();
				else
					this.onSeeked();
			}), 100);
		})(currentSeekTime);
	}
});

PlayerFramework.Plugins.SilverlightMediaPluginBase.PlayState =
{
	///	<summary>
	///		A JSON object used to store the values of the Silverlight player's PlayState enum.
	///		Used by the onPlayStateChanged to determine if the Silverlight player is in a Playing
	///		or Paused stated.
	///	</summary>

	Closed: 0,
	Opening: 1,
	Buffering: 2,
	Playing: 3,
	Paused: 4,
	Stopped: 5,
	Individualizing: 6,
	AcquiringLicense: 7,
	ClipPlaying: 100
};

// Global Silverlight Event Handlers (must be global to be referenced by the param tags in the Silverlight object tag)
var onSilverlightError = function(sender, args)
{
	///	<summary>
	///		Handler for the Silverlight onError event that calls the onErrorCallback set by the
	///		SilverlightMediaPluginBase instance related to that particular object element.
	///	</summary>

	// Check error code to avoid issue where Silverlight throws the following error in FireFox 4:
	//		Unhandled Error in Silverlight Application
	//		Code: 2104
	//		Category: InitializeError
	//		Message: Could not download the Silverlight application. Check web server settings 
	if (args.ErrorCode.toString() !== "2104")
	{
		var element = args.getHost();

		if (element.onErrorCallback)
			element.onErrorCallback();
	}
};

var onSilverlightLoad = function(sender, args)
{
	///	<summary>
	///		Handler for the Silverlight onLoad event that gets a reference to the JavaScript bridge
	///		and calls the onLoadCallback set by the SilverlightMediaPluginBase instance related to
	///		that particular object element.
	///	</summary>
	
	var element = sender.getHost();
	var silverlightPlayer;
	
	try
	{
		silverlightPlayer = element.Content.Player;
	}
	catch (e)
	{
	}

	if (silverlightPlayer && element.onLoadCallback)
		element.onLoadCallback(silverlightPlayer);
};
﻿PlayerFramework.StaticContentMediaPlugin = PlayerFramework.MediaPlugin.extend(
{
	defaultOptions: function(player, playerOptions)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			"class": "pf-static"
		});
	},

	init: function(player, options, playerOptions)
	{
		///	<summary>
		///		Initializes the MediaPlugin that provides static content. This is often used as the last fallback in the chain.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the StaticContentMediaPlugin.
		///	</param>
		///	<param name="playerOptions" type="Object">
		///		The merged player options for the current media source.
		///	</param>
		///	<returns type="StaticContentMediaPlugin" />

		this._super(player, options, playerOptions);

		if (this.options.element)
		{
			if (!this.options.element.tagName)
				throw new TypeError("options.element not a DOM element");

			this.element = this.options.element;
		}
	},

	// MediaPlugin Functions
	checkSupport: function(callback)
	{
		///	<summary>
		///		Determines support for the media element.
		///	</summary>
		///	<param name="callback" type="Function">
		///		The function to call after support has been determined.
		///	</param>

		callback(true);
	}
});
﻿PlayerFramework.Plugins.PlaylistPlugin = PlayerFramework.ModulePlugin.extend(
{
	defaultOptions: function(player)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			playlistItemEndBehavior: PlayerFramework.Plugins.PlaylistPlugin.PlaylistItemEndBehavior.ADVANCE_AND_PLAY,
			initialPlaylistItemIndex: 0,
			playerExtensionPropertyName: "playlist"
		});
	},

	isEnabled: function(player, options)
	{
		return !!player.options.playlist;
	},

	init: function(player, options)
	{
		///	<summary>
		///		Initializes the PlaylistPlugin that provides an API for playlist management.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the PlaylistPlugin.
		///	</param>
		///	<returns type="PlaylistPlugin" />

		this._super(player, options);
		
		this.playlistItems = [];

		this.loadPlaylistItems();
		
		this.player.addEventListener("ended", PlayerFramework.proxy(this, this.onEnded), false);
	},

	// Properties
	currentPlaylistItem: function()
	{
		///	<summary>
		///		Returns the playlist item representing the currently loaded media.
		///	</summary>
		///	<returns type="Object" />
		
		if (this.currentPlaylistItemIndex + 1 > this.playlistItems.length)
			throw new Error("Invalid playlist item index.");
		
		return this.playlistItems[this.currentPlaylistItemIndex];
	},

	// Event Handlers
	onEnded: function(e)
	{
		///	<summary>
		///		Called when the media playback ends.
		///	</summary>
		
		if (this.options.playlistItemEndBehavior == PlayerFramework.Plugins.PlaylistPlugin.PlaylistItemEndBehavior.NONE
			|| this.currentPlaylistItemIndex == this.playlistItems.length - 1)
			return;

		this.currentPlaylistItemIndex++;
		
		// Call asynchronously to allow other event handlers to fire first.
		window.setTimeout(PlayerFramework.proxy(this, function()
		{
			switch (this.options.playlistItemEndBehavior)
			{
				case PlayerFramework.Plugins.PlaylistPlugin.PlaylistItemEndBehavior.ADVANCE_ONLY:
					this.changeMediaPlugin(
					{
						poster: null,
						autoplay: null
					});
					break;

				case PlayerFramework.Plugins.PlaylistPlugin.PlaylistItemEndBehavior.ADVANCE_AND_PLAY:
					this.changeMediaPlugin(
					{
						poster: null,
						autoplay: "autoplay"
					});
					break;
			}
		}), 1);
	},

	// Functions
	addPlaylistItem: function(playlistItem, index)
	{
		///	<summary>
		///		Adds the playlist item to the array of playlist items.
		///	</summary>
		///	<param name="playlistItem" type="Object">
		///		The playlist item to add.
		///	</param>
		///	<param name="index" type="Number">
		///		Optional index at which to insert the playlist item.
		///	</param>

		this.playlistItems.splice(index != undefined ? index : this.playlistItems.length, 0, playlistItem);
		this.player.dispatchEvent({ type: "playlistitemadded" });
	},

	changeMediaPlugin: function(options)
	{
		///	<summary>
		///		Sets the media plugin given the current playlist item and the specified options.
		///	</summary>
		///	<param name="options" type="Object">
		///		Options specified by the playlist plugin that determine the behavior for changing the playlist item.
		///	</param>
		
		this.player.mediaPlugin.onUnloadingMediaPlugin();
		this.player.mediaPlugin.element.parentNode.removeChild(this.player.mediaPlugin.element);

		var currentPlaylistItemOptions = this.currentPlaylistItem();
		PlayerFramework.merge(currentPlaylistItemOptions, options);
		this.player.setMediaPlugin(currentPlaylistItemOptions);
	},

	loadPlaylistItems: function()
	{
		///	<summary>
		///		Loads the playlist items from the playlist array specified in the options.
		///	</summary>

		if (!this.player.options.playlist || !(this.player.options.playlist instanceof Array))
			throw new Error("Invalid playlist.");

		this.playlistItems = this.player.options.playlist;

		this.setPlaylistItemOptions();
	},

	nextPlaylistItem: function()
	{
		///	<summary>
		///		Sets the playlist item to the next playlist item in the array.
		///	</summary>

		this.setPlaylistItem(this.currentPlaylistItemIndex + 1);
	},

	previousPlaylistItem: function()
	{
		///	<summary>
		///		Sets the playlist item to the previous playlist item in the array.
		///	</summary>

		this.setPlaylistItem(this.currentPlaylistItemIndex - 1);
	},

	removePlaylistItem: function(index)
	{
		///	<summary>
		///		Removes the playlist item located at the specified index.
		///	</summary>
		///	<param name="index" type="Object">
		///		The index of the playlist item to remove.
		///	</param>

		this.playlistItems.splice(index, 1);
		this.player.dispatchEvent({ type: "playlistitemremoved" });
	},
	
	setPlaylistItem: function(index)
	{
		///	<summary>
		///		Sets the current playlist item to the playlist item located at the specified index.
		///	</summary>
		///	<param name="index" type="Object">
		///		The index of the playlist item to use as the current playlist item.
		///	</param>

		if (index < 0
			|| index > this.playlistItems.length - 1)
			return;
		
		this.currentPlaylistItemIndex = index;

		this.changeMediaPlugin(
		{
			poster: null,
			autoplay: "autoplay"
		});
	},

	setPlaylistItemOptions: function()
	{
		///	<summary>
		///		Merges the player's options to the options of the initial playlist item.
		///	</summary>

		this.currentPlaylistItemIndex = this.options.initialPlaylistItemIndex;
		this.player.setMediaPlugin(this.currentPlaylistItem());
	}
});

PlayerFramework.Plugins.PlaylistPlugin.PlaylistItemEndBehavior =
{
	///	<summary>
	///		A JSON object used to store the values of the playlist plugin's possible behaviors
	///		once playback has ended for a playlist item.
	///	</summary>

	NONE: 0,
	ADVANCE_ONLY: 1,
	ADVANCE_AND_PLAY: 2
};
﻿PlayerFramework.TrackPlugin = PlayerFramework.ModulePlugin.extend(
{
	defaultOptions: function(player)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			displayPreference: PlayerFramework.TextTrack.DisplayPreference.CUSTOM
		});
	},

	init: function(player, options)
	{
		///	<summary>
		///		Initializes the TrackPlugin base.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the TrackPlugin.
		///	</param>
		///	<returns type="TrackPlugin" />

		this._super(player, options);

		this.previousTime = -1;
		this.previousScrubbingValue = false;
		this.lastDirection = 1;
		this.activeTextTrack = null;
		this.isTrackPolyfill = false;

		this.addEventListeners();
	},

	// Event Handlers
	onCueAdded: function(e)
	{
		///	<summary>
		///		When overridden in a derived class, processes an added cue. 
		///	</summary>
	},

	onCueChange: function(e)
	{
		///	<summary>
		///		When overridden in a derived class, processes a changed cue.
		///	</summary>
	},

	onCueLeft: function(e)
	{
		///	<summary>
		///		When overridden in a derived class, processes an newly inactive cue.
		///	</summary>
	},

	onCueReached: function(e)
	{
		///	<summary>
		///		When overridden in a derived class, processes an newly active cue.
		///	</summary>
	},

	onCueRemoved: function(e)
	{
		///	<summary>
		///		When overridden in a derived class, processes a removed cue. 
		///	</summary>
	},

	onCueSkipped: function(e)
	{
		///	<summary>
		///		When overridden in a derived class, processes a skipped cue.
		///	</summary>
	},

	onLoadedMediaPlugin: function(e)
	{
		///	<summary>
		///		Called when the media element unloads.
		///	</summary>
		
		var optionCues = this.player.mediaPlugin.playerOptions[this.options.playerExtensionPropertyName];

		if (optionCues)
		{
			PlayerFramework.forEach(optionCues, PlayerFramework.proxy(this, function(cue)
			{
				this.addCue(cue);
			}));
		}
	},

	onScrubbed: function(e)
	{
		///	<summary>
		///		Called when the timeline is no longer being scrubbed.
		///	</summary>
		
		this.updateCues();
	},
	
	onTimeUpdate: function(e)
	{
		///	<summary>
		///		Called when the current time of the media is updated.
		///	</summary>

		this.updateCues();
	},

	updateCues: function()
	{
		///	<summary>
		///		Determines when to cues have been reached, left, skipped, and changed
		///		depending on if playback is seeking, playing, or if the timeline is being scrubbed.
		///	</summary>

		if (!this.activeTextTrack)
			return;

		var scrubbedTo = this.player.scrubbing() && this.previousScrubbingValue;
		var playedTo = !this.player.scrubbing() && !this.previousScrubbingValue;
		var seekedTo = !this.player.scrubbing() && this.previousScrubbingValue;
		
		var currentTime = this.player.currentTime();
		var previousTime = this.previousTime;
		var cueChange = false;
		var activeCues = [];

		for (var i = 0; i < this.activeTextTrack.cues.length; i++)
		{
			var cue = this.activeTextTrack.cues[i];

			// Cue reached
			if (scrubbedTo && ((previousTime < cue.startTime && currentTime >= cue.startTime) || (previousTime > cue.endTime && currentTime <= cue.endTime)))
			{
				this.onCueReached({ cue: cue, seeked: seekedTo, direction: this.lastDirection });
			}
			else if (!cue.committed && (seekedTo || playedTo) && currentTime >= cue.startTime && currentTime <= cue.endTime)
			{
				cue.committed = true;
				this.onCueReached({ cue: cue, seeked: seekedTo, direction: this.lastDirection });
			}

			// Cue left
			if (scrubbedTo && ((previousTime >= cue.startTime && currentTime < cue.startTime) || (previousTime <= cue.endTime && currentTime > cue.endTime)))
			{
				this.onCueLeft({ cue: cue, seeked: seekedTo, direction: this.lastDirection });
			}
			else if (cue.committed && (seekedTo || playedTo) && (currentTime < cue.startTime || currentTime > cue.endTime))
			{
				cue.committed = false;
				this.onCueLeft({ cue: cue, seeked: seekedTo, direction: this.lastDirection });
			}

			// Cue skipped via seek
			var seekSkipForward = previousTime < cue.startTime && currentTime > cue.endTime;
			var seekSkipBackward = previousTime > cue.endTime && currentTime < cue.startTime;

			if (seekSkipForward || seekSkipBackward)
			{
				var direction = seekSkipForward ? 1 : -1;
				this.onCueSkipped({ cue: cue, direction: direction });
			}

			// Cue skipped via scrub
			var scrubSkipForward = this.scrubStartCurrentTimeValue < cue.startTime && currentTime > cue.endTime;
			var scrubSkipBackward = this.scrubStartCurrentTimeValue > cue.endTime && currentTime < cue.startTime;

			if (!this.scrubStartCurrentTimeValue && this.previousScrubbingValue)
			{
				this.scrubStartCurrentTimeValue = currentTime;
			}
			else if (this.scrubStartCurrentTimeValue && !this.player.scrubbing() && (scrubSkipForward || scrubSkipBackward))
			{
				var direction = scrubSkipForward ? 1 : -1;
				this.onCueSkipped({ cue: cue, direction: direction });
			}

			// Cue enter/exit
			if (currentTime >= cue.startTime && currentTime <= cue.endTime && (previousTime > cue.endTime || previousTime < cue.startTime))
			{
				activeCues.push(cue);
				cue.dispatchEvent({ type: "enter" });
				cueChange = true;
			}
			else if (previousTime >= cue.startTime && previousTime <= cue.endTime && (currentTime > cue.endTime || currentTime < cue.startTime))
			{
				cue.dispatchEvent({ type: "exit" });
				cueChange = true;
			}
		}

		if (cueChange)
		{
			this.activeTextTrack.activeCues = activeCues;
			this.onCueChange();
		}

		if (this.scrubStartCurrentTimeValue && !this.player.scrubbing())
			this.scrubStartCurrentTimeValue = 0;
		
		if (previousTime < currentTime)
			this.lastDirection = 1;
		else if (previousTime > currentTime)
			this.lastDirection = -1;

		this.previousTime = currentTime;
		this.previousScrubbingValue = this.player.scrubbing();
	},

	onUnloadingMediaPlugin: function(e)
	{
		///	<summary>
		///		Called when the media element unloads.
		///	</summary>

		if (!this.activeTextTrack)
			return;

		PlayerFramework.forEach(this.activeTextTrack.cues, PlayerFramework.proxy(this, function(cue)
		{
			this.removeCue(cue);
		}));
	},

	// Functions
	addCue: function(cue)
	{
		///	<summary>
		///		Adds the specified cue to the ordered cue array and calls the addCue
		///		function of the subclass.
		///	</summary>
		///	<param name="cue" type="Object">
		///		The cue to be added.
		///	</param>
		
		if (!this.activeTextTrack)
			return;

		this.activeTextTrack.addCue(cue);
		this.onCueAdded({ cue: cue });
	},

	addEventListeners: function()
	{
		///	<summary>
		///		Adds event listeners to the control's elements.
		///	</summary>
		
		this.player.addEventListener("loadedmediaplugin", PlayerFramework.proxy(this, this.onLoadedMediaPlugin), false);
		this.player.addEventListener("scrubbed", PlayerFramework.proxy(this, this.onScrubbed), false);
		this.player.addEventListener("timeupdate", PlayerFramework.proxy(this, this.onTimeUpdate), false);
		this.player.addEventListener("unloadingmediaplugin", PlayerFramework.proxy(this, this.onUnloadingMediaPlugin), false);
	},

	activateTextTrack: function(textTrack)
	{
		///	<summary>
		///		Handles downloading of a text track if not already downloaded
		///		and then sets the text track as the active text track.
		///	</summary>
		///	<param name="textTrack" type="Object">
		///		The text track to activate.
		///	</param>

		if (!textTrack.xml && textTrack.src)
		{
			textTrack.readyState = PlayerFramework.TextTrack.ReadyState.LOADING;

			PlayerFramework.xhr({ url: textTrack.src }, PlayerFramework.proxy(this, function(result)
			{
				textTrack.xml = result.responseXML;
				this.processTextTrackSource(textTrack);
		
				textTrack.readyState = PlayerFramework.TextTrack.ReadyState.LOADED;
				textTrack.dispatchEvent({ type: "load" });

				this.showTextTrack(textTrack);
			}), PlayerFramework.proxy(this, PlayerFramework.proxy(this, function(result)
			{
				textTrack.readyState = PlayerFramework.TextTrack.ReadyState.ERROR;
				this.player.dispatchEvent({ type: "error" });
			})));
		}
		else
		{
			this.showTextTrack(textTrack);
		}
	},

	showTextTrack: function(textTrack)
	{
		///	<summary>
		///		Shows the text track according to the display preference.
		///	</summary>
		///	<param name="textTrack" type="Object">
		///		The text track to show.
		///	</param>

		switch (this.options.displayPreference)
		{
			// NATIVE
			case PlayerFramework.TextTrack.DisplayPreference.NATIVE:
				
				textTrack.mode = PlayerFramework.TextTrack.Mode.OFF;

				if (textTrack.track)
					textTrack.track.mode = PlayerFramework.TextTrack.Mode.SHOWING;

				break;

			// CUSTOM
			case PlayerFramework.TextTrack.DisplayPreference.CUSTOM:

				textTrack.mode = PlayerFramework.TextTrack.Mode.SHOWING;

				if (textTrack.track)
					textTrack.track.mode = PlayerFramework.TextTrack.Mode.OFF;

				break;

			// ALL
			case PlayerFramework.TextTrack.DisplayPreference.ALL:
						
				textTrack.mode = PlayerFramework.TextTrack.Mode.SHOWING;

				if (textTrack.track)
					textTrack.track.mode = PlayerFramework.TextTrack.Mode.SHOWING;
						
				break;
			
			// NONE
			default:

				textTrack.mode = PlayerFramework.TextTrack.Mode.OFF;

				if (textTrack.track)
					textTrack.track.mode = PlayerFramework.TextTrack.Mode.OFF;

				break;
		}

		this.activeTextTrack = textTrack;
		this.previousTime = -1;

		this.updateCues();
	},

	deactivateTextTrack: function(textTrack)
	{
		///	<summary>
		///		Deactivates the text track.
		///	</summary>
		///	<param name="textTrack" type="Object">
		///		The text track to deactivate.
		///	</param>

		textTrack.mode = PlayerFramework.TextTrack.Mode.OFF;

		if (textTrack.track)
			textTrack.track.mode = PlayerFramework.TextTrack.Mode.OFF;

		this.activeTextTrack = null;
		this.clearCaptionContainer();
	},

	isActiveTextTrack: function(textTrack)
	{
		///	<summary>
		///		Determines if the specified text track is the currently active text track.
		///	</summary>
		///	<param name="textTrack" type="Object">
		///		The text track to check if it is active.
		///	</param>

		return this.activeTextTrack == textTrack;
	},

	processTextTrackSource: function(textTrack)
	{
		///	<summary>
		///		Processes a downloaded text track using a TTML parser.
		///	</summary>
		///	<param name="textTrack" type="Object">
		///		The text track to process.
		///	</param>
	},

	removeCue: function(cue)
	{
		///	<summary>
		///		Removes the specified cue to the ordered cue array and calls the removeCue
		///		function of the subclass.
		///	</summary>
		///	<param name="cue" type="Object">
		///		The cue to be added.
		///	</param>

		if (!this.activeTextTrack)
			return;

		this.activeTextTrack.removeCue(cue);
		this.onCueRemoved({ cue: cue });
	}
});
﻿PlayerFramework.Plugins.TrackDataProviderPlugin = PlayerFramework.ModulePlugin.extend(
{
	init: function(player, options)
	{
		///	<summary>
		///		Initializes the TrackDataProviderPlugin that is a polyfill for the W3C <track> implementation.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the CueDataProviderPlugin.
		///	</param>
		///	<returns type="CueDataProviderPlugin" />

		this._super(player, options);

		this.addEventListeners();

		this.isTrackSupported = !!document.createElement("track").track;

		this.player.textTracks = [];

		this.player.addTextTrack = PlayerFramework.proxy(this, this.addTextTrack);
	},

	// Event Handlers
	onLoadedMediaPlugin: function(e)
	{
		///	<summary>
		///		Called when the media element unloads.
		///	</summary>

		// Create or clear textTracks array
		this.player.textTracks = [];

		// Find all track existing elements (both created from options or pre-existing)
		var trackElements = PlayerFramework.convertNodeListToArray(this.player.mediaPlugin.element.getElementsByTagName("track"));
		
		// Extend all track elements with HTML5 Track API and download the referenced source files
		PlayerFramework.forEach(trackElements, PlayerFramework.proxy(this, this.extendTrackElement));

		var textTracks = this.player.mediaPlugin.playerOptions.textTracks;

		// Create tracks that were specified in the options
		if (textTracks)
		{
			for (var i = 0; i < textTracks.length; i++)
			{
				var textTrackOptions = textTracks[i];

				if (this.player.mediaPlugin.options.supportsTrackElements)
				{
					var trackElement = PlayerFramework.createElement(this.player.mediaPlugin.element,
					[
						"track",
						textTrackOptions
					]);
					
					this.extendTrackElement(trackElement);
				}
				else
				{
					var textTrack = this.player.addTextTrack(textTrackOptions.kind, textTrackOptions.label, textTrackOptions.srclang);
					textTrack.src = textTrackOptions.src;
					
					if (textTrackOptions["default"] != undefined && textTrackOptions.src)
						this.activateTextTrack(textTrack);
				}
			}
		}
	},

	// Functions	
	addEventListeners: function()
	{
		///	<summary>
		///		Adds event listeners to the control's elements.
		///	</summary>
		
		this.player.addEventListener("loadedmediaplugin", PlayerFramework.proxy(this, this.onLoadedMediaPlugin), false);
	},

	addTextTrack: function(kind, label, language)
	{
		///	<summary>
		///		Entry point for added a text track as specified by the W3C.
		///	</summary>
		///	<param name="kind" type="Object">
		///		The category the given track falls into. 
		///	</param>
		///	<param name="label" type="Object">
		///		The label of the track, if known, or the empty string otherwise.
		///	</param>
		///	<param name="language" type="Object">
		///		The language of the given track, if known, or the empty string otherwise.
		///	</param>

		var textTrack = new PlayerFramework.TextTrack();
		textTrack.kind = kind;
		textTrack.label = label;
		textTrack.language = language;

		this.player.textTracks.push(textTrack);

		this.player.dispatchEvent(
		{
			type: "texttrackadded"
		});

		return textTrack;
	},
	
	activateTextTrack: function(textTrack)
	{
		///	<summary>
		///		Delegates activation of a text track to the TrackPlugin with the matching "kind".
		///	</summary>
		///	<param name="textTrack" type="Object">
		///		The text track to activate.
		///	</param>

		var trackPlugin = PlayerFramework.first(this.player.modules, PlayerFramework.proxy(this, function(m)
		{
			return m instanceof PlayerFramework.TrackPlugin && m.options.kind === textTrack.kind;
		}));

		if (trackPlugin)
			trackPlugin.activateTextTrack(textTrack);
	},

	extendTrackElement: function(trackElement)
	{
		///	<summary>
		///		Extends a track element to match the W3C specification.
		///	</summary>
		///	<param name="trackElement" type="Object">
		///		The text track to extend.
		///	</param>

		trackElement.isDefault = trackElement.getAttribute("default") != undefined;
		trackElement.kind = trackElement.getAttribute("kind");
		trackElement.label = trackElement.getAttribute("label");
		trackElement.srclang = trackElement.getAttribute("srclang");
		trackElement.src = trackElement.getAttribute("src");

		var textTrack = this.player.addTextTrack(trackElement.kind, trackElement.label, trackElement.srclang);
		textTrack.src = trackElement.src;
		
		if (this.isTrackSupported && trackElement.track)
		{
			textTrack.track = trackElement.track;
			textTrack.track.mode = PlayerFramework.TextTrack.Mode.OFF;
		}

		trackElement.track = textTrack;

		if (trackElement.isDefault && trackElement.src)
			this.activateTextTrack(textTrack);
	}
});
﻿PlayerFramework.Plugins.ChapterTrackPlugin = PlayerFramework.TrackPlugin.extend(
{
	defaultOptions: function(player)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			playerExtensionPropertyName: "chapters",
			kind: "chapters"
		});
	},

	init: function(player, options)
	{
		///	<summary>
		///		Initializes the ChapterTrackPlugin that provides an API for adding, removing, and navigating chapters.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the ChapterTrackPlugin.
		///	</param>
		///	<returns type="ChapterTrackPlugin" />
		
		this._super(player, options);

		this.activeTextTrack = this.player.addTextTrack(this.options.kind);
	},

	// Event Handlers
	onCueAdded: function(e)
	{
		///	<summary>
		///		Processes an added cue.
		///	</summary>
		///	<param name="cue" type="Object">
		///		The added cue.
		///	</param>
		
		e.type = "chaptercueadded";
		this.player.dispatchEvent(e);
	},

	onCueChange: function()
	{
		///	<summary>
		///		Processes a changed cue.
		///	</summary>

		this.player.dispatchEvent(
		{
			type: "chaptercuechange"
		});
	},

	onCueLeft: function(e)
	{
		///	<summary>
		///		Processes an newly inactive cue.
		///	</summary>

		e.type = "chaptercueleft";
		this.player.dispatchEvent(e);
	},

	onCueReached: function(e)
	{
		///	<summary>
		///		Processes a newly active cue.
		///	</summary>

		e.type = "chaptercuereached";
		this.player.dispatchEvent(e);
	},

	onCueRemoved: function(e)
	{
		///	<summary>
		///		Processes a removed cue.
		///	</summary>

		e.type = "chaptercueremoved";
		this.player.dispatchEvent(e);
	},

	onCueSkipped: function(e)
	{
		///	<summary>
		///		Processes a skipped cue.
		///	</summary>

		e.type = "chaptercueskipped";
		this.player.dispatchEvent(e);
	},

	// Functions
	skipBackChapter: function()
	{
		///	<summary>
		///		Skips back one chapter.
		///	</summary>

		var chapterTime;
		for(var i = this.activeTextTrack.cues.length - 1; i >= 0 ; i--)
		{
			var cue = this.activeTextTrack.cues[i];
			
			if (cue.startTime < (this.player.currentTime() - 1))
			{
				chapterTime = cue.startTime;
				break;
			}
		}

		if (!chapterTime)
			chapterTime = 0;

		this.player.currentTime(chapterTime);
	},

	skipForwardChapter: function()
	{
		///	<summary>
		///		Skips forward one chapter.
		///	</summary>

		var chapterTime;
		for(var i = 0; i < this.activeTextTrack.cues.length; i++)
		{
			var cue = this.activeTextTrack.cues[i];
			
			if (cue.startTime > this.player.currentTime())
			{
				chapterTime = cue.startTime;
				break;
			}
		}

		if (!chapterTime)
			chapterTime = this.player.duration();

		this.player.currentTime(chapterTime);
	}
});
﻿PlayerFramework.Plugins.TimelineTrackPlugin = PlayerFramework.TrackPlugin.extend(
{
	defaultOptions: function(player)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			playerExtensionPropertyName: "timelineCues",
			kind: "metadata"
		});
	},

	init: function(player, options)
	{
		///	<summary>
		///		Initializes the TimelineTrackPlugin that provides an API for adding, removing, and processing timeline cues.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the TimelineTrackPlugin.
		///	</param>
		///	<returns type="TimelineTrackPlugin" />

		this._super(player, options);

		this.activeTextTrack = this.player.addTextTrack(this.options.kind);
	},

	// Event Handlers
	onCueAdded: function(e)
	{
		///	<summary>
		///		Processes an added cue.
		///	</summary>

		e.type = "timelinecueadded";
		this.player.dispatchEvent(e);
	},

	onCueChange: function()
	{
		///	<summary>
		///		Processes a changed cue.
		///	</summary>

		this.player.dispatchEvent(
		{
			type: "timelinecuechange"
		});
	},

	onCueLeft: function(e)
	{
		///	<summary>
		///		Processes an newly inactive cue.
		///	</summary>

		e.type = "timelinecueleft";
		this.player.dispatchEvent(e);
	},

	onCueReached: function(e)
	{
		///	<summary>
		///		Processes a newly active cue.
		///	</summary>

		e.type = "timelinecuereached";
		this.player.dispatchEvent(e);
	},

	onCueRemoved: function(e)
	{
		///	<summary>
		///		Processes a removed cue.
		///	</summary>

		e.type = "timelinecueremoved";
		this.player.dispatchEvent(e);
	},

	onCueSkipped: function(e)
	{
		///	<summary>
		///		Processes a skipped cue.
		///	</summary>

		e.type = "timelinecueskipped";
		this.player.dispatchEvent(e);
	}
});
﻿PlayerFramework.Plugins.CaptionTrackPlugin = PlayerFramework.TrackPlugin.extend(
{
	defaultOptions: function(player)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			playerExtensionPropertyName: "captions",
			kind: "captions"
		});
	},

	init: function(player, options)
	{
		///	<summary>
		///		Initializes the CaptionTrackPlugin that provides an API for adding, removing, and synchronizing captions.
		///		Parses and displays captions over the media.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the CaptionTrackPlugin.
		///	</param>
		///	<returns type="CaptionTrackPlugin" />

		this._super(player, options);

		this.player.addEventListener("ready", PlayerFramework.proxy(this, this.onReady), false);
	},

	// Event Handlers
	onCueAdded: function(e)
	{
		///	<summary>
		///		Processes an added cue.
		///	</summary>

		e.type = "captioncueadded";
		this.player.dispatchEvent(e);
	},

	onCueChange: function()
	{
		///	<summary>
		///		Processes a changed cue.
		///	</summary>
		
		if (this.activeTextTrack.mode === PlayerFramework.TextTrack.Mode.SHOWING)
		{
			this.clearCaptionContainer();
			
			for (var i = 0; i < this.activeTextTrack.activeCues.length; i++)
			{
				var cueElement = this.activeTextTrack.activeCues[i].getCueAsHTML().cloneNode(true);
				this.element.appendChild(cueElement);
			}
		}

		this.player.dispatchEvent(
		{
			type: "captioncuechange"
		});
	},

	onCueLeft: function(e)
	{
		///	<summary>
		///		Processes an newly inactive cue.
		///	</summary>

		e.type = "captioncueleft";
		this.player.dispatchEvent(e);
	},

	onCueReached: function(e)
	{
		///	<summary>
		///		Processes an newly active cue.
		///	</summary>

		e.type = "captioncuereached";
		this.player.dispatchEvent(e);
	},

	onCueRemoved: function(e)
	{
		///	<summary>
		///		Processes a removed cue.
		///	</summary>

		e.type = "captioncueremoved";
		this.player.dispatchEvent(e);
	},

	onCueSkipped: function(e)
	{
		///	<summary>
		///		Processes a skipped cue.
		///	</summary>

		e.type = "captioncueskipped";
		this.player.dispatchEvent(e);
	},

	onReady: function(e)
	{
		///	<summary>
		///		Called when the player is ready for playback.
		///	</summary>

		this.element = PlayerFramework.createElement(null,
		[
			"div",
			{
				"class": "pf-caption-cues-container"
			}
		]);

		this.player.containerElement.insertBefore(this.element, this.player.mediaPlugin.element.nextSibling);
		PlayerFramework.addEvent(this.element, "mouseover", PlayerFramework.mouseEventProxy(this.player, "mouseover"));
		PlayerFramework.addEvent(this.element, "mouseout", PlayerFramework.mouseEventProxy(this.player, "mouseout"));
	},

	// Functions
	clearCaptionContainer: function()
	{
		///	<summary>
		///		Clears the area containing the caption HTML.
		///	</summary>

		this.element.innerHTML = "";
	},

	processTextTrackSource: function(textTrack)
	{
		///	<summary>
		///		Processes a downloaded text track using a TTML parser.
		///	</summary>
		///	<param name="textTrack" type="Object">
		///		The text track to process.
		///	</param>

		var ttmlParser = new PlayerFramework.TtmlParser();
		var ttml = ttmlParser.parseTtml(textTrack.xml);

		textTrack.cues = new PlayerFramework.TextTrackCueList(
		{
			track: textTrack,
			list: ttml.captions
		});
	}
});
﻿PlayerFramework.Plugins.ControlStripPlugin = PlayerFramework.ControlPlugin.extend(
{
	defaultOptions: function(player)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			strings:
			{
				toggleTitle: "Show Controls",
				toggleAltTitle: "Hide Controls",
				playTitle: "Play",
				playAltTitle: "Pause",
				muteTitle: "Mute",
				muteAltTitle: "Unmute",
				fullBrowserTitle: "Full Screen",
				fullBrowserAltTitle: "Exit Full Screen",
				timelineTitle: "Playback: {0}%",
				timelineFillTitle: "Decrement Playback Position",
				timelineEmptyTitle: "Increment Playback Position",
				timeElapsedTitle: "Time Elapsed",
				timeRemainingTitle: "Time Remaining",
				volumeTitle: "Volume: {0}%",
				volumeFillTitle: "Decrement Volume Level",
				volumeEmptyTitle: "Increment Volume Level"
			},
			accessKeys:
			{
				toggleKey: "c",
				playKey: "p",
				muteKey: "m",
				fullBrowserKey: "s"
			}
		});
	},

	init: function(player, options)
	{
		///	<summary>
		///		Initializes the ControlPlugin that creates the default look and behavior for the Player object.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the ControlStripPlugin.
		///	</param>
		///	<returns type="ControlStripPlugin" />

		this._super(player, options);

		this.createControl();

		this.canPlayThrough = false;
		this.playInitiated = false;
		this.isTimelineMouseDown = false;
		this.isVolumeMouseDown = false;
		this.volumeLevelDelta = .1;
		this.currentTimeDelta = 5;
	},

	// Properties
	currentTime: function(value)
	{
		///	<summary>
		///		Gets or sets the current playback position of the media element expressed in seconds.
		///	</summary>
		///	<param name="value" type="Number">
		///		The playback position to seek to.
		///	</param>
		///	<returns type="Number" />
		
		if (value !== undefined)
			this.player.mediaPlugin.currentTime(value);
		
		return this.currentTimeValue;
	},

	// Event Handlers
	onToggleClick: function(e)
	{
		///	<summary>
		///		Called when the the toggle button is clicked and toggles the control strip display.
		///	</summary>

		if (this.element.style.display === "none")
			this.showControlStrip();
		else
			this.hideControlStrip();
	},

	onPlayClick: function(e)
	{
		///	<summary>
		///		Called when the play button is clicked and toggles the media element between play and pause.
		///	</summary>
		
		if (this.player.paused())
			this.player.play();
		else
			this.player.pause();
	},

	onTimelineMouseDown: function(e)
	{
		///	<summary>
		///		Called when the mouse is depressed on the timeline slider.
		///	</summary>
		
		// Prevents text selection.
		document.body.focus();
		document.onselectstart = function () { return false; };
		
		// Store initial measurements while scrubbing - IE reports zero for offset measurements when rendering.
		this.timelineSliderMeasurements = { headWidth: this.timelineHeadElement.offsetWidth, headContainerLeft: PlayerFramework.getTotalOffsetLeft(this.timelineHeadContainerElement), headContainerWidth: this.timelineHeadContainerElement.offsetWidth };
		
		this.isTimelineMouseDown = true;
		this.player.scrubbing = PlayerFramework.proxy(this, this.scrubbing);
		this.player.dispatchEvent({ type: "scrubbing" });

		this.onDocumentMouseMove(e);
	},

	onTimelineFillClick: function(e)
	{
		///	<summary>
		///		Called when filled area of the timeline slider is clicked.
		///	</summary>

		var currentTime = this.player.currentTime();
		if (currentTime - this.currentTimeDelta > 0)
			this.player.currentTime(currentTime - this.currentTimeDelta);
	},

	onTimelineEmptyClick: function(e)
	{
		///	<summary>
		///		Called when empty area of the timeline slider is clicked.
		///	</summary>

		var currentTime = this.player.currentTime();
		if (currentTime + this.currentTimeDelta < this.player.duration())
			this.player.currentTime(currentTime + this.currentTimeDelta);
	},

	onVolumeMouseDown: function(e)
	{
		///	<summary>
		///		Called when the mouse is depressed on the volume slider.
		///	</summary>

		// Prevents text selection.
		document.body.focus();
		document.onselectstart = function () { return false; };
		
		// Store initial measurements while scrubbing - IE reports zero for offset measurements when rendering.
		this.volumeSliderMeasurements = { headWidth: this.volumeHeadElement.offsetWidth, headContainerLeft: PlayerFramework.getTotalOffsetLeft(this.volumeHeadContainerElement), headContainerWidth: this.volumeHeadContainerElement.offsetWidth };
		this.isVolumeMouseDown = true;
		this.onDocumentMouseMove(e);
	},

	onVolumeFillClick: function(e)
	{
		///	<summary>
		///		Called when filled area of the volume slider is clicked.
		///	</summary>

		var volume = this.player.volume();
		if (volume - this.volumeLevelDelta > 0)
			this.player.volume(volume - this.volumeLevelDelta);
	},

	onVolumeEmptyClick: function(e)
	{
		///	<summary>
		///		Called when empty area of the volume slider is clicked.
		///	</summary>

		var volume = this.player.volume();
		if (volume + this.volumeLevelDelta < 1)
			this.player.volume(volume + this.volumeLevelDelta);
	},

	onDocumentMouseMove: function(e)
	{
		///	<summary>
		///		Called when the mouse moves on the document.
		///	</summary>
		
		if (this.isTimelineMouseDown)
		{
			// Adjust the playback position given the mouse position on the timeline slider.
			var timelineFraction = this.getSliderMouseFraction(this.timelineSliderMeasurements, e);
			this.currentTimeValue = timelineFraction * this.player.duration();
			this.player.currentTime(this.currentTimeValue);

			// Adjust the slider manually now because we prevent the slider from being adjusted
			// in response to the "timeupdate" event on the media plugin.
			this.setSliderHeadPosition(this.timelineContainerElement, timelineFraction);
		}
		
		if (this.isVolumeMouseDown)
		{
			// Adjust the volume level given the mouse position on the volume slider slider.
			var volumeFraction = this.getSliderMouseFraction(this.volumeSliderMeasurements, e);
			this.player.volume(volumeFraction);
		}
	},

	onDocumentMouseUp: function(e)
	{
		///	<summary>
		///		Called when the mouse is released on the document.
		///	</summary>

		// Allows text selection.
		document.onselectstart = function () { return true; };

		// Ensure video is paused if scrubbed to the end and released.
		if (this.player.currentTime() === this.player.duration() || (this.player.ended && this.player.ended()))
			this.player.pause();

		this.isTimelineMouseDown = false;
		this.isVolumeMouseDown = false;
		this.player.dispatchEvent({ type: "scrubbed" });
	},

	onDocumentKeyDown: function(e)
	{
		///	<summary>
		///		Called when a key is pressed on the document.
		///	</summary>

		var charCode = PlayerFramework.getCharCode(e);
		
		// exit full screen if escape key is pressed
		if (charCode === 27 && this.player.displayingFullscreen()) {
		    this.exitFullScreen();
		    this.mediaPlugin().onFullScreenChange();
		}
	},

	onPlayerMouseOut: function(e)
	{
		///	<summary>
		///		Called when the mouse leaves the player.
		///	</summary>
		
		if (this.player.options.overlayControls)
			this.hideControlStrip();
	},

	onPlayerMouseOver: function(e)
	{
		///	<summary>
		///		Called when the mouse enters the player.
		///	</summary>
		
		if (this.player.options.overlayControls)
			this.showControlStrip();
	},

	onMuteClick: function(e)
	{
		///	<summary>
		///		Called when the mute button is clicked.
		///	</summary>

		this.player.muted(!this.player.muted());
	},

	onFullBrowserClick: function(e)
	{
		///	<summary>
		///		Called when the full browser button is clicked.
		///	</summary>

		if (this.player.displayingFullscreen())
			this.exitFullScreen();
		else
			this.enterFullScreen();

		this.mediaPlugin().onFullScreenChange();
	},

	// ControlPlugin Event Handlers
	onCanPlayThrough: function(e)
	{
		///	<summary>
		///		Called when the media element can play through to the end without having to stop for further buffering.
		///	</summary>

		window.setTimeout(PlayerFramework.proxy(this, function()
		{
			this.canPlayThrough = true;

			if (!this.playInitiated && !(this.player.mediaPlugin instanceof PlayerFramework.StaticContentMediaPlugin))
			{
				if (this.playOverlayControlElement)
					this.playOverlayControlElement.style.display = "block";
				else
					this.showControlStrip();
			}
		}), 500);
	},

	onEnded: function(e)
	{
		///	<summary>
		///		Called when the media playback ends.
		///	</summary>

		if (!this.isTimelineMouseDown)
			this.player.pause();
	},

	onPlay: function(e)
	{
		///	<summary>
		///		Called when the media plays.
		///	</summary>

		if (this.posterElement)
			this.posterElement.style.display = "none";

		if (this.playOverlayControlElement)
			this.playOverlayControlElement.style.display = "none";

		this.playInitiated = true;

		this.playControlElement.className = "pf-pause pf-play-control";
		this.playButtonElement.setAttribute("title", this.options.strings.playAltTitle);
	},

	onPause: function(e)
	{
		///	<summary>
		///		Called when the media pauses.
		///	</summary>

		this.playControlElement.className = "pf-play pf-play-control";
		this.playButtonElement.setAttribute("title", this.options.strings.playTitle);
	},

	onProgress: function(e)
	{
		///	<summary>
		///		Called when the media buffers more data.
		///	</summary>
		
		if (this.player.buffered().length > 0)
			this.timelineLoadElement.style.width = Math.round(100 * (this.player.buffered().end(0) / this.player.duration()), 2) + "%";
	},
	
	onReady: function(e)
	{
		///	<summary>
		///		Called when the player is ready for playback.
		///	</summary>
		
		// Disable volume controls if setting volume is not supported (volume can only be controlled by hardware):
		// http://developer.apple.com/library/safari/#documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW11)		
		if (!this.mediaPlugin().supportsVolumeSetter())
			this.element.className += " pf-no-volume";

		// Poster Control
		var posterSource = this.player.poster();
		if (posterSource)
		{
			this.posterElement = PlayerFramework.createElement(null,
			[
				"img",
				{
					"class": "pf-poster",
					src: posterSource
				}
			]);
			this.player.containerElement.insertBefore(this.posterElement, this.mediaPlugin().element.nextSibling);
		}

		// Play Overlay Control
		if (this.player.options.overlayPlayButton)
		{
			this.playOverlayControlElement = PlayerFramework.createElement(this.player.containerElement,
			[
				"div",
				{
					"class": "pf-play-overlay-control"
				},
				[
					"button",
					{
						"class": "pf-button",
						type: "button",
						title: this.options.strings.playTitle,
						accessKey: this.options.accessKeys.playKey
					},
					[
						"span"
					]
				]
			]);
		}

		// Initial adjustment of volume control
		this.onVolumeChange();

		this.addEventListeners();
	},

	onSeeked: function(e)
	{
		///	<summary>
		///		Called when the media plugin has completed seeking.
		///	</summary>
		
		// Set currentTime function asynchronously, otherwise currentTime is earlier than the previous time.
		window.setTimeout(PlayerFramework.proxy(this, function()
		{
			this.player.currentTime = PlayerFramework.proxy(this.player.mediaPlugin, this.player.mediaPlugin.currentTime);
		}), 1);
	},
	
	onSeeking: function(e)
	{
		///	<summary>
		///		Called continuously while the media plugin is seeking.
		///	</summary>

		if (this.isTimelineMouseDown)
			this.player.currentTime = PlayerFramework.proxy(this, this.currentTime);
	},

	onTimeUpdate: function(e)
	{
		///	<summary>
		///		Called when the current time of the media is updated.
		///	</summary>
		
		var currentTime = this.player.currentTime();
		var duration = this.player.duration();

		if (!this.isTimelineMouseDown)
		{
			var currentTimePercentage = currentTime !== 0 ? (currentTime / duration) : 0;
			this.setSliderHeadPosition(this.timelineContainerElement, currentTimePercentage);

			var timelineTitle = this.options.strings.timelineTitle.replace("{0}", Math.round(currentTimePercentage * 100));
			this.timelineButtonElement.setAttribute("title", timelineTitle);
		}

		if (this.previousCurrentTime !== Math.round(currentTime))
		{
			this.previousCurrentTime = Math.round(currentTime);
			this.timeElapsedElement.innerText = this.formatTimeString(currentTime);
			this.timeRemainingElement.innerText = this.formatTimeString(duration - currentTime);
		}
	},
	
	onUnloadingMediaPlugin: function(e)
	{
		///	<summary>
		///		Called when the media element unloads.
		///	</summary>
		
		if (this.playOverlayControlElement)
			this.playOverlayControlElement.style.display = "none";
	},

	onVolumeChange: function(e)
	{
		///	<summary>
		///		Called when the volume level of the media changes.
		///	</summary>

		this.setSliderHeadPosition(this.volumeContainerElement, this.player.volume());

		if (this.player.muted())
		{
			this.muteControlElement.className = "pf-mute pf-mute-control";
			this.muteButtonElement.setAttribute("title", this.options.strings.muteAltTitle);
		}
		else
		{
			this.muteControlElement.className = "pf-sound pf-mute-control";
			this.muteButtonElement.setAttribute("title", this.options.strings.muteTitle);
		}

		var volumeTitle = this.options.strings.volumeTitle.replace("{0}", Math.round(this.player.volume() * 100));
		this.volumeButtonElement.setAttribute("title", volumeTitle);
	},

	// Functions
	addEventListeners: function()
	{
		///	<summary>
		///		Adds event listeners to the control's elements.
		///	</summary>
		
		if (this.posterElement)
			PlayerFramework.addEvent(this.posterElement, "click", PlayerFramework.proxy(this, this.onDocumentMouseUp));
		
		if (this.playOverlayControlElement)
			PlayerFramework.addEvent(this.playOverlayControlElement, "click", PlayerFramework.proxy(this, this.onPlayClick));

		PlayerFramework.addEvent(this.toggleControlElement, "click", PlayerFramework.proxy(this, this.onToggleClick));
		PlayerFramework.addEvent(this.playControlElement, "click", PlayerFramework.proxy(this, this.onPlayClick));
		PlayerFramework.addEvent(this.muteControlElement, "click", PlayerFramework.proxy(this, this.onMuteClick));
		PlayerFramework.addEvent(this.fullBrowserControlElement, "click", PlayerFramework.proxy(this, this.onFullBrowserClick));
		PlayerFramework.addEvent(this.timelineContainerElement, "mousedown", PlayerFramework.proxy(this, this.onTimelineMouseDown));
		PlayerFramework.addEvent(this.timelineFillElement, "click", PlayerFramework.proxy(this, this.onTimelineFillClick));
		PlayerFramework.addEvent(this.timelineEmptyElement, "click", PlayerFramework.proxy(this, this.onTimelineEmptyClick));
		PlayerFramework.addEvent(this.volumeContainerElement, "mousedown", PlayerFramework.proxy(this, this.onVolumeMouseDown));
		PlayerFramework.addEvent(this.volumeFillElement, "click", PlayerFramework.proxy(this, this.onVolumeFillClick));
		PlayerFramework.addEvent(this.volumeEmptyElement, "click", PlayerFramework.proxy(this, this.onVolumeEmptyClick));
		PlayerFramework.addEvent(document, "mousemove", PlayerFramework.proxy(this, this.onDocumentMouseMove));
		PlayerFramework.addEvent(document, "mouseup", PlayerFramework.proxy(this, this.onDocumentMouseUp));
		PlayerFramework.addEvent(document, "keydown", PlayerFramework.proxy(this, this.onDocumentKeyDown));
		PlayerFramework.addEvent(this.element, "mouseover", PlayerFramework.mouseEventProxy(this.player, "mouseover"));
		PlayerFramework.addEvent(this.element, "mouseout", PlayerFramework.mouseEventProxy(this.player, "mouseout"));
	},

	createControl: function()
	{
		///	<summary>
		///		Creates and appends all markup for the controls to the DOM.
		///	</summary>

		// Control Strip Container
		this.element = PlayerFramework.createElement(this.player.containerElement,
		[
			"div",
			{
				"class": this.player.options.overlayControls ? "pf-controls pf-controls-overlay" : "pf-controls"
			}
		]);

		// Toggle Control
		this.toggleControlElement = PlayerFramework.createElement(this.element,
		[
			"div",
			{
				"class": "pf-toggle-control"
			}
		]);

		this.toggleButtonElement = PlayerFramework.createElement(this.toggleControlElement,
		[
			"button",
			{
				"class": "pf-button",
				type: "button",
				title: this.options.strings.toggleTitle,
				accessKey: this.options.accessKeys.toggleKey
			},
			[
				"span"
			]
		]);

		// Play/Pause Control
		this.playControlElement = PlayerFramework.createElement(this.element,
		[
			"div",
			{
				"class": "pf-play-control pf-play"
			}
		]);

		this.playButtonElement = PlayerFramework.createElement(this.playControlElement,
		[
			"button",
			{
				"class": "pf-button",
				type: "button",
				title: this.options.strings.playTitle,
				accessKey: this.options.accessKeys.playKey
			},
			[
				"span"
			]
		]);

		// Timeline Control
		this.timelineControlElement = PlayerFramework.createElement(this.element,
		[
			"div",
			{
				"class": "pf-timeline-control"
			}
		]);

		this.timelineButtonElement = PlayerFramework.createElement(this.timelineControlElement,
		[
			"button",
			{
				"class": "pf-button",
				type: "button"
			}
		]);

		this.timelineContainerElement = PlayerFramework.createElement(this.timelineControlElement,
		[
			"div",
			{
				"class": "pf-slider-container"
			},
			[
				"span",
				{
					"class": "pf-slider-range"
				}
			]
		]);

		this.timelineLoadElement = PlayerFramework.createElement(this.timelineContainerElement,
		[
			"span",
			{
				"class": "pf-slider-load"
			}
		]);

		this.timelineFillElement = PlayerFramework.createElement(this.timelineContainerElement,
		[
			"span",
			{
				"class": "pf-slider-fill"
			},
			[
				"button",
				{
					"class": "pf-button",
					type: "button",
					title: this.options.strings.timelineFillTitle
				}
			]
		]);

		this.timelineEmptyElement = PlayerFramework.createElement(this.timelineContainerElement,
		[
			"span",
			{
				"class": "pf-slider-empty"
			},
			[
				"button",
				{
					"class": "pf-button",
					type: "button",
					title: this.options.strings.timelineEmptyTitle
				}
			]
		]);

		this.timelineHeadContainerElement = PlayerFramework.createElement(this.timelineContainerElement,
		[
			"span",
			{
				"class": "pf-slider-head-container"
			}
		]);

		this.timelineHeadElement = PlayerFramework.createElement(this.timelineHeadContainerElement,
		[
			"span",
			{
				"class": "pf-slider-head"
			}
		]);

		// Time Elapsed Control
		this.timeElapsedControlElement = PlayerFramework.createElement(this.element,
		[
			"div",
			{
				"class": "pf-time-elapsed-control pf-time-display",
				title: this.options.strings.timeElapsedTitle
			}
		]);

		this.timeElapsedElement = PlayerFramework.createElement(this.timeElapsedControlElement,
		[
			"div",
			"0:00:00"
		]);

		// Time Divider Control
		this.timeDividerControlElement = PlayerFramework.createElement(this.element,
		[
			"div",
			{
				"class": "pf-time-divider-control pf-time-display"
			},
			[
				"div",
				"/"
			]
		]);

		// Time Remaining Control
		this.timeRemainingControlElement = PlayerFramework.createElement(this.element,
		[
			"div",
			{
				"class": "pf-time-remaining-control pf-time-display",
				title: this.options.strings.timeRemainingTitle
			}
		]);

		this.timeRemainingElement = PlayerFramework.createElement(this.timeRemainingControlElement,
		[
			"div",
			"0:00:00"
		]);

		// Mute Control
		this.muteControlElement = PlayerFramework.createElement(this.element,
		[
			"div",
			{
				"class": "pf-mute-control pf-sound"
			}
		]);

		this.muteButtonElement = PlayerFramework.createElement(this.muteControlElement,
		[
			"button",
			{
				"class": "pf-button",
				type: "button",
				title: this.options.strings.muteTitle,
				accessKey: this.options.accessKeys.muteKey
			},
			[
				"span",
				{
					"class": "pf-mute-icon"
				},
				[
					"span",
					{
						"class": "pf-speaker-base"
					}
				],
				[
					"span",
					{
						"class": "pf-speaker"
					}
				],
				[
					"span",
					{
						"class": "pf-sound-waves"
					},
					[
						"span",
						{
							"class": "pf-sound-wave-1 pf-sound-wave"
						}
					],
					[
						"span",
						{
							"class": "pf-sound-wave-2 pf-sound-wave"
						}
					],
					[
						"span",
						{
							"class": "pf-sound-wave-3 pf-sound-wave"
						}
					]
				]
			]
		]);

		// Volume Control
		this.volumeControlElement = PlayerFramework.createElement(this.element,
		[
			"div",
			{
				"class": "pf-volume-control"
			}
		]);

		this.volumeButtonElement = PlayerFramework.createElement(this.volumeControlElement,
		[
			"button",
			{
				"class": "pf-button",
				type: "button"
			}
		]);

		this.volumeContainerElement = PlayerFramework.createElement(this.volumeControlElement,
		[
			"div",
			{
				"class": "pf-slider-container"
			},
			[
				"span",
				{
					"class": "pf-slider-range"
				}
			]
		]);

		this.volumeFillElement = PlayerFramework.createElement(this.volumeContainerElement,
		[
			"span",
			{
				"class": "pf-slider-fill"
			},
			[
				"button",
				{
					"class": "pf-button",
					type: "button",
					title: this.options.strings.volumeFillTitle
				}
			]
		]);

		this.volumeEmptyElement = PlayerFramework.createElement(this.volumeContainerElement,
		[
			"span",
			{
				"class": "pf-slider-empty"
			},
			[
				"button",
				{
					"class": "pf-button",
					type: "button",
					title: this.options.strings.volumeEmptyTitle
				}
			]
		]);

		this.volumeHeadContainerElement = PlayerFramework.createElement(this.volumeContainerElement,
		[
			"span",
			{
				"class": "pf-slider-head-container"
			}
		]);

		this.volumeHeadElement = PlayerFramework.createElement(this.volumeHeadContainerElement,
		[
			"span",
			{
				"class": "pf-slider-head"
			}
		]);

		// Full Browser Control
		this.fullBrowserControlElement = PlayerFramework.createElement(this.element,
		[
			"div",
			{
				"class": "pf-full-browser-control"
			}
		]);

		this.fullBrowserButtonElement = PlayerFramework.createElement(this.fullBrowserControlElement,
		[
			"button",
			{
				"class": "pf-button",
				type: "button",
				title: this.options.strings.fullBrowserTitle,
				accessKey: this.options.accessKeys.fullBrowserKey
			},
			[
				"span",
				{
					"class": "pf-full-browser-box"
				}
			]
		]);

		this.updateLayout();
	},

	showControlStrip: function()
	{
		///	<summary>
		///		Shows the control strip.
		///	</summary>

		if (this.playInitiated || (this.canPlayThrough && !this.player.options.overlayPlayButton))
		{
			this.element.style.display = "block";
			this.toggleButtonElement.setAttribute("title", this.options.strings.toggleAltTitle);
		}
	},

	hideControlStrip: function()
	{
		///	<summary>
		///		Hides the control strip.
		///	</summary>

		if (this.playInitiated)
		{
			this.element.style.display = "none";
			this.toggleButtonElement.setAttribute("title", this.options.strings.toggleTitle);
		}
	},

	enterFullScreen: function()
	{
		///	<summary>
		///		Expands the media element to the full width and height of the browser. 
		///	</summary>

		this.player.containerElement.className = "pf-container pf-full-browser";
		this.elementWidthBeforeFullBrowser = this.mediaPlugin().element.width;
		this.elementHeightBeforeFullBrowser = this.mediaPlugin().element.height;
		this.player.containerElement.style.width = "";
		this.player.containerElement.style.height = "";
		this.fullBrowserButtonElement.setAttribute("title", this.options.strings.fullBrowserAltTitle);
	},

	exitFullScreen: function()
	{
		///	<summary>
		///		Restores the media element to it's original size. 
		///	</summary>

		this.player.containerElement.className = "pf-container";
		this.mediaPlugin().element.width = this.elementWidthBeforeFullBrowser;
		this.mediaPlugin().element.height = this.elementHeightBeforeFullBrowser;
		this.player.containerElement.style.width = this.mediaPlugin().element.width.toString() + "px";
		this.player.containerElement.style.height = this.mediaPlugin().element.height.toString() + "px";
		this.fullBrowserButtonElement.setAttribute("title", this.options.strings.fullBrowserTitle);
	},

	formatTimeString: function(totalSeconds)
	{
		///	<summary>
		///		Formats the seconds in a string using the template "0:00:00".
		///	</summary>
		///	<param name="totalSeconds" type="Number">
		///		The total seconds to format.
		///	</param>
		///	<returns type="String" />

		var dateTime = new Date(0,0,0,0,0,0,0);
		dateTime.setSeconds(totalSeconds);
		
		var hours = PlayerFramework.padString(dateTime.getHours(), 1, "0");
		var minutes = PlayerFramework.padString(dateTime.getMinutes(), 2, "0");
		var seconds = PlayerFramework.padString(dateTime.getSeconds(), 2, "0");

		return hours + ":" + minutes + ":" + seconds;
	},

	getSliderMouseFraction: function(measurements, mouseEvent)
	{
		///	<summary>
		///		Gets the fraction of the mouse in relation to the slider in a range of 0.0 to 1.0.
		///	</summary>
		///	<param name="measurements" type="Object">
		///		Contains the sizing and positioning of the timeline at the time that the mouse was depressed.
		///	</param>
		///	<param name="mouseEvent" type="Object">
		///		The mouse event object.
		///	</param>

		var mouseTimelineOffset = mouseEvent.clientX - (measurements.headWidth / 2) - measurements.headContainerLeft;
		return Math.min(1, Math.max(0, mouseTimelineOffset / measurements.headContainerWidth));
	},

	scrubbing: function()
	{
		///	<summary>
		///		Indicates if the timeline is currently being scrubbed.
		///	</summary>
		///	<returns type="Boolean" />
		
		return this.isTimelineMouseDown;
	},

	setSliderHeadPosition: function(containerElement, percentage)
	{
		///	<summary>
		///		Sets the position of the slider head in relation to the slider.
		///	</summary>
		///	<param name="containerElement" type="Object">
		///		The container element for the slider.
		///	</param>
		///	<param name="percentage" type="Object">
		///		The fraction of the slider head in relation to the slider in a range of 0.0 to 1.0.
		///	</param>

	    if (percentage > 1.0)
	        percentage = 1.0;
		var percentString = 100 * percentage + "%";
		var percentEmptyString = 100 * (1 - percentage) + "%";
		PlayerFramework.getElementsByClass("pf-slider-fill", containerElement)[0].style.width = percentString;
		PlayerFramework.getElementsByClass("pf-slider-head", containerElement)[0].style.left = percentString;
		PlayerFramework.getElementsByClass("pf-slider-empty", containerElement)[0].style.width = percentEmptyString;
	},

	updateLayout: function()
	{
		///	<summary>
		///		Updates the layout of the control strip to accomodate all displayed controls.
		///	</summary>

		var childNodes = PlayerFramework.convertNodeListToArray(this.element.childNodes);

		var right = 0;
		for(var i = childNodes.length - 1; i >= 0; i--)
		{
			var node = childNodes[i];

			node.style.right = right + "px";
			
			if (PlayerFramework.getComputedStyle(node, "display") != "none")
				right += parseInt(PlayerFramework.getComputedStyle(node, "width"), 10);

			if (node.className == "pf-timeline-control")
				break;
		}

		var left = 0;
		for(var i = 0; i < childNodes.length; i++)
		{
			var node = childNodes[i];

			node.style.left = left + "px";
			
			if (PlayerFramework.getComputedStyle(node, "display") != "none")
				left += parseInt(PlayerFramework.getComputedStyle(node, "width"), 10);

			if (node.className == "pf-timeline-control")
				break;
		}
	}
});
﻿PlayerFramework.Plugins.ChapterTrackControlPlugin = PlayerFramework.ControlPlugin.extend(
{
	defaultOptions: function(player)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			strings:
			{
				skipBackTitle: "Skip Back Chapter",
				skipForwardTitle: "Skip Forward Chapter"
			},
			accessKeys:
			{
				skipBackKey: "b",
				skipForwardKey: "n"
			},
			chapterTrackPlugin: PlayerFramework.first(player.modules, function(m)
			{
				return m instanceof PlayerFramework.Plugins.ChapterTrackPlugin;
			}),
			controlStripPlugin: PlayerFramework.first(player.modules, function(m)
			{
				return m instanceof PlayerFramework.Plugins.ControlStripPlugin;
			})
		});
	},

	isEnabled: function(player, options)
	{
		return !!options.chapterTrackPlugin && !!options.controlStripPlugin;
	},

	init: function(player, options)
	{
		///	<summary>
		///		Initializes the ChapterTrackControlPlugin that provides UI for controlling chapter navigation.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the ChapterTrackControlPlugin.
		///	</param>
		///	<returns type="ChapterTrackControlPlugin" />
		
		this._super(player, options);

		// Find the required plugins.
		this.chapterTrackPlugin = this.options.chapterTrackPlugin;
		this.controlStripPlugin = this.options.controlStripPlugin;

		if (!this.chapterTrackPlugin)
			throw new Error("ChapterTrackPlugin required.");

		if (!this.controlStripPlugin)
			throw new Error("ControlStripPlugin required.");
	},

	// Event Handlers
	onChapterCueAdded: function(e)
	{		
		///	<summary>
		///		Called when a chapter cue is added. Displays the chapter navigation arrows next to the timeline.
		///	</summary>
		
		if (this.controlStripPlugin.element.className.indexOf("pf-chapters") === -1)
			this.controlStripPlugin.element.className += " pf-chapters";

		this.controlStripPlugin.updateLayout();
	},

	onSkipBackClick: function(e)
	{		
		///	<summary>
		///		Called when the skip back chapter button is clicked.
		///	</summary>

		this.chapterTrackPlugin.skipBackChapter();
	},

	onSkipForwardClick: function(e)
	{		
		///	<summary>
		///		Called when the skip forward chapter button is clicked.
		///	</summary>

		this.chapterTrackPlugin.skipForwardChapter();
	},

	onReady: function(e)
	{		
		///	<summary>
		///		Called when the player is ready for playback.
		///	</summary>

		this.createControl();
		this.addEventListeners();
	},

	onUnloadingMediaPlugin: function(e)
	{
		///	<summary>
		///		Called when the media element unloads.
		///	</summary>

		this.controlStripPlugin.element.className = this.controlStripPlugin.element.className.replace("pf-chapters", "");

		this.controlStripPlugin.updateLayout();
	},

	// Functions
	addEventListeners: function()
	{
		///	<summary>
		///		Adds event listeners to the control's elements.
		///	</summary>
		
		PlayerFramework.addEvent(this.player, "chaptercueadded", PlayerFramework.proxy(this, this.onChapterCueAdded));
		PlayerFramework.addEvent(this.skipBackControlElement, "click", PlayerFramework.proxy(this, this.onSkipBackClick));
		PlayerFramework.addEvent(this.skipForwardControlElement, "click", PlayerFramework.proxy(this, this.onSkipForwardClick));
	},

	createControl: function()
	{
		///	<summary>
		///		Creates and appends all markup for the controls to the DOM.
		///	</summary>

		this.skipBackControlElement = PlayerFramework.createElement(null,
		[
			"div",
			{
				"class": "pf-skip-back-chapter-control"
			},
			[
				"button",
				{
					"class": "pf-button",
					type: "button",
					title: this.options.strings.skipBackTitle,
					accessKey: this.options.accessKeys.skipBackKey
				},
				[
					"span",
					{
						"class": "pf-skip-back-chapter-arrow"
					}
				],
				[
					"span",
					{
						"class": "pf-skip-back-chapter-line"
					}
				]
			]
		]);
		
		this.controlStripPlugin.element.insertBefore(this.skipBackControlElement, this.controlStripPlugin.timelineControlElement);

		this.skipForwardControlElement = PlayerFramework.createElement(null,
		[
			"div",
			{
				"class": "pf-skip-forward-chapter-control"
			},
			[
				"button",
				{
					"class": "pf-button",
					type: "button",
					title: this.options.strings.skipForwardTitle,
					accessKey: this.options.accessKeys.skipForwardKey
				},
				[
					"span",
					{
						"class": "pf-skip-forward-chapter-arrow"
					}
				],
				[
					"span",
					{
						"class": "pf-skip-forward-chapter-line"
					}
				]
			]
		]);
		
		this.controlStripPlugin.element.insertBefore(this.skipForwardControlElement, this.controlStripPlugin.timelineControlElement.nextSibling);

		this.controlStripPlugin.updateLayout();
	}
});
﻿PlayerFramework.Plugins.ErrorMessageControlPlugin = PlayerFramework.ControlPlugin.extend(
{
	defaultOptions: function(player)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			strings:
			{
				defaultMessage: "An error occurred while attempting to play the video."
			}
		});
	},

	init: function(player, options)
	{
		///	<summary>
		///		Initializes the ControlPlugin that displays a message when the media element encounters an error.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the ErrorMessageControlPlugin.
		///	</param>
		///	<returns type="ErrorMessageControlPlugin" />

		this._super(player, options);
	},

	// ControlPlugin Event Handlers
	onError: function(e)
	{
		///	<summary>
		///		Called when the media element encounters an error.
		///	</summary>

		//console.log("error = " + this.player.error().code);

		if (!this.element)
		{
			if (this.mediaPlugin() && this.player.error() && this.player.error().code)
				this.show(this.options.strings.defaultMessage);
			else
				this.show(this.options.strings.defaultMessage);
		}
	},

	onNetworkStateChange: function(e)
	{
		///	<summary>
		///		Called when the media element's network state changes.
		///	</summary>

		//console.log("network state = " + this.player.networkState());

		if (!this.element)
		{
			if (this.player.networkState() === PlayerFramework.VideoMediaPlugin.NetworkState.NETWORK_NO_SOURCE && window.navigator.appName !== "Microsoft Internet Explorer")
				this.show(this.options.strings.defaultMessage);
		}
	},

	// Functions
	show: function(text)
	{
		///	<summary>
		///		Creates a message control with the specified text and adds it to the DOM.
		///	</summary>
		///	<param name="text" type="String">
		///		The text to display.
		///	</param>

		// Error message control
		this.element = PlayerFramework.createElement(this.player.containerElement,
		[
			"div",
			{
				"class": "pf-error-message-control"
			},
			[
				"div",
				{
					"class": "pf-error-message-container"
				},
				text
			]
		]);
	}
});
﻿PlayerFramework.Plugins.HyperlinkMediaPlugin = PlayerFramework.StaticContentMediaPlugin.extend(
{
	defaultOptions: function(player, playerOptions)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			strings:
			{
				downloadsLabel: "Downloads:"
			},
			"class": "pf-hyperlinks",
			unsupportedTypes: [ /text\/xml/i ]
		});
	},

	init: function(player, options, playerOptions)
	{
		///	<summary>
		///		Initializes the MediaPlugin that provides hyperlinks for downloading the media to play locally.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the HyperlinkMediaPlugin.
		///	</param>
		///	<param name="playerOptions" type="Object">
		///		The merged player options for the current media source.
		///	</param>
		///	<returns type="HyperlinkMediaPlugin" />

		this._super(player, options, playerOptions);

		this.player.containerElement.style["background-color"] = "#fff";

		this.render();

		this.player.dispatchEvent({ type: "canplaythrough" });
	},

	render: function()
	{
		///	<summary>
		///		Creates and sets the MediaPlugin's element given the plugin and player options
		///		and a specific template.
		///	</summary>
		 
		var sources = this.playerOptions.sources;

		this.element = PlayerFramework.createElement(null,
		[
			"div",
			{
				"class": this.options["class"],
				width: this.playerOptions.width,
				height: this.playerOptions.height,
				controls: "controls", /* Controls must be turned on initially for compatibility with some browsers. */
				poster: this.playerOptions.poster
			},
			[
				"div",
				this.options.strings.downloadsLabel
			]
		]);

		for (var i = 0; i < sources.length; i++)
		{
			var isSourceSupported = true;

			for (var j = 0; j < this.options.unsupportedTypes.length; j++)
			{
				if (this.options.unsupportedTypes[j].test(sources[i].type))
					isSourceSupported = false;
			}

			if (isSourceSupported)
			{
				var sourceUri = sources[i].src;

				PlayerFramework.createElement(this.element,
				[
					"div",
					[
						"a",
						{
							href: sourceUri,
							title: sourceUri
						},
						sourceUri
					]
				]);
			}
		}
	}
});
﻿PlayerFramework.Plugins.MediaRssPlaylistPlugin = PlayerFramework.Plugins.PlaylistPlugin.extend(
{
	isEnabled: function(player, options)
	{
		return !!player.options.mediaRssPlaylistUrl
	},

	init: function(player, options)
	{
		///	<summary>
		///		Initializes the MediaRssPlaylistPlugin that provides an API for playlist management and downloading a media RSS feed.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the MediaRssPlaylistPlugin.
		///	</param>
		///	<returns type="MediaRssPlaylistPlugin" />

		this._super(player, options);
	},

	// Functions
	loadPlaylistItems: function()
	{
		///	<summary>
		///		Loads the playlist items from the media RSS URL specified in the options.
		///	</summary>

		PlayerFramework.xhr({ url: this.player.options.mediaRssPlaylistUrl }, PlayerFramework.proxy(this, function(result)
		{
			this.playlistItems = this.parseMediaRssXml(result.responseXML);
			
			if (this.playlistItems)
				this.setPlaylistItemOptions();
			else
				this.player.dispatchEvent({ type: "error" });
		}),
		PlayerFramework.proxy(this, function(result)
		{
			this.player.dispatchEvent({ type: "error" });
		}));
	},

	parseMediaRssXml: function(xml)
	{
		///	<summary>
		///		Parses the XML document as a media RSS feed.
		///	</summary>
		///	<returns type="Array" />

		var mediaRssObject = this.parseXmlDocument(xml);

		if(!mediaRssObject || !mediaRssObject.rss || !mediaRssObject.rss.channel || !mediaRssObject.rss.channel.item)
			return;
		
		var mediaRssItemNodes = mediaRssObject.rss.channel.item;

		if (!(mediaRssItemNodes instanceof Array))
			mediaRssItemNodes = [ mediaRssItemNodes ];

		var playlistItems = [];
		
		for(var i = 0; i < mediaRssItemNodes.length; i++)
		{
			var mediaRssItemNode = mediaRssItemNodes[i];

			// Parse <media:content> elements. Treat each <media:content> element that
			// isn't in a <media:group> element as a single playlist item.
			var mediaContentNodes = mediaRssItemNode["media:content"];
			if (mediaContentNodes)
				playlistItems = playlistItems.concat(this.parseMediaContentNodes(mediaContentNodes));

			// Parse <media:group> elements. Treat each <media:content> element under the
			// <media:group> element as a different encoding of the same video (<source>).
			var mediaGroupNodes = mediaRssItemNode["media:group"];
			if (mediaGroupNodes)
				playlistItems = playlistItems.concat(this.parseMediaGroupNodes(mediaGroupNodes));
		}

		return playlistItems;
	},

	parseMediaContentNodes: function(nodes)
	{
		///	<summary>
		///		Parses the specified nodes as media content nodes, each representing a single source.
		///	</summary>
		///	<param name="nodes" type="Array">
		///		An array of "media:content" nodes.
		///	</param>
		///	<returns type="Array" />

		var playlistItems = [];
		
		if (!(nodes instanceof Array))
			nodes = [ nodes ];

		for(var i = 0; i < nodes.length; i++)
		{
			var node = nodes[i];

			if (node.url)
			{
				var playlistItem =
				{
					sources: []
				};

				var source =
				{
					src: node.url
				};

				if (node.type)
					source.type = node.type

				if (node["media:title"])
					playlistItem.title = node["media:title"];

				if (node["media:thumbnail"])
					playlistItem.poster = node["media:thumbnail"].url;

				playlistItem.sources.push(source);

				playlistItems.push(playlistItem);
			}
		}

		return playlistItems;
	},

	parseMediaGroupNodes: function(nodes)
	{
		///	<summary>
		///		Parses the specified nodes as media group nodes, each representing a group of sources.
		///	</summary>
		///	<param name="nodes" type="Array">
		///		An array of "media:group" nodes.
		///	</param>
		///	<returns type="Array" />

		var playlistItems = [];		

		if (!(nodes instanceof Array))
			nodes = [ nodes ];
							
		for(var i = 0; i < nodes.length; i++)
		{
			var node = nodes[i];

			var playlistItem =
			{
				sources: []
			};

			var contentNodes = node["media:content"];

			if (!(contentNodes instanceof Array))
				contentNodes = [ contentNodes ];

			for(var j = 0; j < contentNodes.length; j++)
			{
				var contentNode = contentNodes[j];

				if (contentNode.url)
				{
					var source =
					{
						src: contentNode.url
					};

					if (contentNode.type)
						source.type = contentNode.type;

					if (contentNode["media:title"])
						playlistItem.title = contentNode["media:title"];
					else if (node["media:title"])
						playlistItem.title = node["media:title"];

					if (contentNode["media:thumbnail"])
						playlistItem.poster = contentNode["media:thumbnail"].url;
					else if (node["media:thumbnail"])
						playlistItem.poster = node["media:thumbnail"].url;

					playlistItem.sources.push(source);
				}
			}

			if (playlistItem.sources.length > 0)
				playlistItems.push(playlistItem);
		}

		return playlistItems;
	},

	parseXmlDocument: function(document)
	{
		/// <summary>
		///		Parses a JSON object from the specified XML document.
		///		Based on: http://slideshow.codeplex.com/SourceControl/changeset/view/25074#177488
		///	</summary>
		/// <param name="document">
		///		The document to parse.</param>
		/// <returns type="Object">
		///		The parsed object.
		///	</returns>
		
		var element = document.documentElement;
		
		if (!element)
			return;
		
		var elementName = element.nodeName;
		var elementType = element.nodeType;
		var elementValue = this.parseXmlNode(element);
		
		// document fragment
		if (elementType == 11)
			return elementValue;
		
		var obj = {};
		obj[elementName] = elementValue;
		return obj;
	},
	
	parseXmlNode: function(node)
	{
		/// <summary>
		///		Recursively parses a JSON object from the specified XML node.
		///	</summary>
		/// <param name="element" type="Object">
		///		The node to parse.
		///	</param>
		/// <returns type="Object">
		///		The parsed object.
		///	</returns>
		
		switch (node.nodeType)
		{
			// comment
			case 8:
				return;
			
			// text and cdata
			case 3:
			case 4:
			
				var nodeValue = node.nodeValue;
				
				if (!nodeValue.match(/\S/))
					return;
				
				return this.formatValue(nodeValue);
			
			default:
				
				var obj;
				var counter = {};
				var attributes = node.attributes;
				var childNodes = node.childNodes;
				
				if (attributes && attributes.length)
				{
					obj = {};
					
					for (var i = 0, j = attributes.length; i < j; i++)
					{
						var attribute = attributes[i];
						var attributeName = attribute.nodeName.toLowerCase(); // lowered in order to be consistent with Safari
						var attributeValue = attribute.nodeValue;
						
						if (typeof(counter[attributeName]) == "undefined")
							counter[attributeName] = 0;
						
						this.addProperty(obj, attributeName, this.formatValue(attributeValue), ++counter[attributeName]);
					}
				}
				
				if (childNodes && childNodes.length)
				{
					var textOnly = true;
					
					if (obj)
						textOnly = false;
					
					for (var k = 0, l = childNodes.length; k < l && textOnly; k++)
					{
						var childNodeType = childNodes[k].nodeType;
						
						// text or cdata
						if (childNodeType == 3 || childNodeType == 4)
							continue;
						
						textOnly = false;
					}
					
					if (textOnly)
					{
						if (!obj)
							obj = "";
					
						for (var m = 0, n = childNodes.length; m < n; m++)
							obj += this.formatValue(childNodes[m].nodeValue);
					}
					else
					{
						if (!obj)
							obj = {};
						
						for (var o = 0, p = childNodes.length; o < p; o++)
						{
							var childNode = childNodes[o];
							var childName = childNode.nodeName;
							
							if (typeof(childName) != "string")
								continue;
							
							var childValue = this.parseXmlNode(childNode);
							
							if (!childValue)
								continue;
							
							if (typeof(counter[childName]) == "undefined")
								counter[childName] = 0;
							
							this.addProperty(obj, childName, this.formatValue(childValue), ++counter[childName]);
						}
					}
				}
				
				return obj;
		}
	},
	
	formatValue: function(value)
	{
		/// <summary>
		///		Formats the specified value to its most suitable type.
		///	</summary>
		/// <param name="value">
		///		The value to format.
		///	</param>
		/// <returns type="String">
		///		The formatted value or the original value if no more suitable type exists.
		///	</returns>
		
		if (typeof(value) == "string" && value.length > 0)
		{
			var loweredValue = value.toLowerCase();
			
			if (loweredValue == "true")
				return true;
			else if (loweredValue == "false")
				return false;
			
			if (!isNaN(value))
				return new Number(value).valueOf(); // fixes number issue with option values
		}
		
		return value;
	},
	
	addProperty: function(obj, name, value, count)
	{
		/// <summary>
		///		Adds a property to the specified object.
		///	</summary>
		/// <param name="obj" type="Object">
		///		The target object.
		///	</param>
		/// <param name="name" type="String">
		///		The name of the property.
		///	</param>
		/// <param name="value" type="String">
		///		The value of the property.
		///	</param>
		/// <param name="count" type="Number">
		///		A count that indicates whether or not the property should be an array.
		///	</param>
		
		switch (count)
		{
			case 1:
				obj[name] = value;
				break;
				
			case 2:
				obj[name] = [ obj[name], value ];
				break;
				
			default:
				obj[name][obj[name].length] = value;
				break;
		}
	}
});
﻿PlayerFramework.setDefaultOptions(
{
	containerClassName: "pf-container",
	autoplay: false,
	initialVolume: 0.5,
	overlayControls: true,
	overlayPlayButton: true,
	plugins: PlayerFramework.Plugins,
	pluginOptions: {}
});

PlayerFramework.Player = PlayerFramework.Object.extend(
{
	init: function(element, options)
	{
		///	<summary>
		///		Initializes a Player object, the entry point for the framework.
		///	</summary>
		///	<param name="element" type="String">
		///		The DOM ID of the primary media element. 
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the Player object.
		///	</param>
		///	<returns type="Player" />

		this._super();

		this.mergeOptions(options, PlayerFramework.defaultOptions);

		this.plugins = [];
		this.modules = [];
		this.fallbackMediaPlugins = [];
		this.mediaPlugin = null;
		this.controls = [];
		this.isReady = false;

		PlayerFramework.domReady(PlayerFramework.proxy(this, function()
		{
			if (!element)
				throw new Error("Element is null.");

			// Check if element is a DOM ID.
			if (typeof(element) === "string")
			{
				element = document.getElementById(element);
			
				if (!element)
					throw new Error("Element not found.");
			}

			// Check if element is an HTMLElement.
			if (element.tagName != null)
			{
				if (element.className === this.options.containerClassName)
				{
					this.containerElement = element;
					this.containerElement.style.width = this.options.width;
					this.containerElement.style.height = this.options.height;
				}
				else if (element.parentNode.className !== this.options.containerClassName)
				{
					this.createParentContainer(element);
				}
			}
		
			this.loadPlugins();

			if (!this.options.mediaPluginFallbackOrder)
				this.setMediaPluginFallbackOrderFromDeclaration(element);

			if (!this.options.mediaPluginFallbackOrder || this.options.sources)
				this.setMediaPlugin();
		}), 500);
	},

	// Functions
	createParentContainer: function(element)
	{
		///	<summary>
		///		Creates the parent div container and appends the element passed into the Player Object.
		///	</summary>

		this.containerElement = PlayerFramework.createElement(element.parentNode,
		[
			"div",
			{
				"class": "pf-container",
				style: "width: " + element.width + "px; height: " + element.height + "px;"
			}
		]);
		this.containerElement.appendChild(element);
	},

	loadPlugins: function()
	{
		///	<summary>
		///		Iterates over the plugins, initializing the module plugins and adding them to the
		///		"modules" property on the Player object and adding other plugins the "plugins"
		///		property on the Player object.
		///	</summary>

		if (!this.options || !this.options.plugins)
			return;

		for(var name in this.options.plugins)
		{
			var plugin = PlayerFramework.Plugins[name];
			
			if (PlayerFramework.typeExtendsFrom(plugin, PlayerFramework.ModulePlugin))
			{
				var options = plugin.prototype.defaultOptions(this);
				PlayerFramework.merge(options, this.options.pluginOptions[name]);

				if (plugin.prototype.isEnabled(this, options))
					this.modules.push(new plugin(this, options));
			}
			else
			{
				this.plugins.push(plugin);
			}
		}
	},

	ready: function(callback)
	{
		///	<summary>
		///		Adds an event listner for the "ready" event of the Player object for convenience.
		///	</summary>
		
		if (this.isReady)
		{
			callback();
		}
		else
		{
			this.addEventListener("ready", function()
			{
				window.setTimeout(callback, 1);
			}, false);
		}
	},

	setMediaPluginFallbackOrderFromDeclaration: function(primaryElement)
	{
		///	<summary>
		///		Iterates over the nested fallback elements in the DOM starting with the element
		///		passed to the Player object and finds a matching media plugin using the class name of the element.
		///	</summary>

		var fallbackMediaPlugins = [];

		var mediaPlugins = PlayerFramework.filter(this.plugins, function(p)
		{
			return PlayerFramework.typeExtendsFrom(p, (PlayerFramework.MediaPlugin));
		});

		// Use a recursive function to assign media plugins given the class name of an element.
		var findMediaPluginsForElements = function(elements)
		{
			// Loop through all child elements (some fallback elements, some not).
			for(var i = 0; i < elements.length; i++)
			{
				var element = elements[i];

				if (element.className)
				{
					var matchingPlugin = PlayerFramework.first(mediaPlugins, PlayerFramework.proxy(this, function(p)
					{
						var playerOptions = {};

						// Copy player options.
						PlayerFramework.merge(playerOptions, this.options);

						// Get default plugin options.
						var pluginOptions = p.prototype.defaultOptions(this, playerOptions);

						// Merge plugin options passed during player instantiation with default plugin options.
						PlayerFramework.merge(pluginOptions, this.options.pluginOptions[name]);
						
						return pluginOptions["class"] === element.className && !p.prototype.render;
					}));

					if (!matchingPlugin && i === (elements.length - 1))
						throw new Error("No matching media plugin.");

					// Stop searching once an element with a class name from a media plugin is found.
					if (matchingPlugin)
					{
						fallbackMediaPlugins.push(
						{
							type: matchingPlugin,
							element: element
						});

						PlayerFramework.proxy(this, findMediaPluginsForElements)(element.childNodes);
						break;
					}
				}
			}
		};
		
		PlayerFramework.proxy(this, findMediaPluginsForElements)([ primaryElement ]);

		this.fallbackMediaPlugins = fallbackMediaPlugins;
	},

	setMediaPluginFallbackOrderFromOptions: function(options)
	{
		///	<summary>
		///		Iterates over the media plugin fallback order array and finds a matching media plugin using the item string.
		///	</summary>

		this.fallbackMediaPlugins = [];

		// Loop through the given class names to find matching media plugins.
		for(var i = 0; i < options.mediaPluginFallbackOrder.length; i++)
		{
			var mediaPluginName = options.mediaPluginFallbackOrder[i];
			var matchingPlugin = options.plugins[mediaPluginName];

			if (!matchingPlugin)
				throw new Error("No matching media plugin.");

			this.fallbackMediaPlugins.push(
			{
				type: matchingPlugin,
				name: mediaPluginName
			});
		}
	},

	setMediaPlugin: function(options)
	{
		///	<summary>
		///		Finds and sets a media plugin supported by the browser given the set of media plugins passed in the options.
		///	</summary>

		var playerOptions = {};

		// Copy player options.
		PlayerFramework.merge(playerOptions, this.options);

		// Merge item-specific player options with player options.
		if (options)
			PlayerFramework.merge(playerOptions, options);

		if (playerOptions.mediaPluginFallbackOrder)
			this.setMediaPluginFallbackOrderFromOptions(playerOptions);

		var previousMediaPluginElement = null;
		PlayerFramework.forEachAsync(this.fallbackMediaPlugins, PlayerFramework.proxy(this, function(loopCallback, p)
		{
			// If the element was declared and was a fallback, remove the element from the DOM to promote it.
			if (p.element && previousMediaPluginElement)
			{
				var elementToClone = p.element.parentNode.removeChild(p.element);
				//IE needs a cloned node instead of promoting the existing nested child node.
				p.element = elementToClone.cloneNode(true);
			}

			// Get default plugin options.
			var pluginOptions = p.type.prototype.defaultOptions(this, playerOptions);
			
			if (p.element)
				pluginOptions.element = p.element;

			// Merge plugin options passed during player instantiation with default plugin options.
			PlayerFramework.merge(pluginOptions, this.options.pluginOptions[p.name]);

			// Create new instance of the media plugin.
			var mediaPlugin = new p.type(this, pluginOptions, playerOptions);

			// Add the element to the DOM if it is being promoted or injected.
			if (!mediaPlugin.element.parentNode)
			{
				this.containerElement.insertBefore(mediaPlugin.element, this.containerElement.firstChild);

				if (previousMediaPluginElement)
					this.containerElement.removeChild(previousMediaPluginElement);
			}

			mediaPlugin.checkSupport(PlayerFramework.proxy(this, function(isSupported)
			{
				if (isSupported)
				{
					this.mediaPlugin = mediaPlugin;
			
					if (this.mediaPlugin instanceof PlayerFramework.VideoMediaPlugin)
					{
						this.mediaPlugin.setup();
						
						window.setTimeout(PlayerFramework.proxy(this, function()
						{
							if (this.isReady === false)
							{
								this.isReady = true;
								this.dispatchEvent({ type: "ready" });
							}

							this.mediaPlugin.onLoadedMediaPlugin();
						}), 1);
					}
				}
				else
				{
					previousMediaPluginElement = mediaPlugin.element;
					loopCallback();
				}
			}));
		}));
	}
});
﻿PlayerFramework.Plugins.PlaylistControlPlugin = PlayerFramework.ControlPlugin.extend(
{
	defaultOptions: function(player)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			strings:
			{
				toggleLabel: "PLAYLIST",
				toggleTitle: "Show Playlist",
				toggleAltTitle: "Hide Playlist",
				arrowLeftTitle: "Scroll Playlist Left",
				arrowRightTitle: "Scroll Playlist Right"
			},
			accessKeys:
			{
				toggleKey: "l",
				arrowLeftKey: "q",
				arrowRightKey: "w"
			},
			playlistPlugin: PlayerFramework.first(player.modules, function(m)
			{
				return m instanceof PlayerFramework.Plugins.PlaylistPlugin;
			})
		});
	},

	isEnabled: function(player, options)
	{
		return !!options.playlistPlugin;
	},

	init: function(player, options)
	{
		///	<summary>
		///		Initializes the ControlPlugin that provides UI for controlling the playlist.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the PlaylistControlPlugin.
		///	</param>
		///	<returns type="PlaylistControlPlugin" />

		this._super(player, options);

		// Find the required plugins.
		this.playlistPlugin = this.options.playlistPlugin;

		if (!this.playlistPlugin)
			throw new Error("PlaylistPlugin required.");

		this.playlistItemSpacer = 10;
		this.playInitiated = false;
	},

	// Event Handlers
	onLoadedMediaPlugin: function(e)
	{
		///	<summary>
		///		Dispatches the "loadedMediaPlugin" event on behalf of the Player object.
		///	</summary>

		this.setSelectedPlaylistItem();
	},

	onPlayerMouseOut: function(e)
	{
		///	<summary>
		///		Called when the mouse leaves the media element.
		///	</summary>

		if (this.playlistElement && this.playlistToggleElement && this.playInitiated)
		{
			this.playlistToggleElement.style.display = "none";
			
			if (this.playlistElement.style.top === "0px")
				this.playlistElement.style.display = "none";
		}
	},

	onPlayerMouseOver: function(e)
	{
		///	<summary>
		///		Called when the mouse enters the player.
		///	</summary>
		
		if (this.playlistElement && this.playlistToggleElement && this.playInitiated)
		{
			this.playlistToggleElement.style.display = "block";

			if (this.playlistElement.style.top === "0px")
				this.playlistElement.style.display = "block";
		}
	},

	onPlay: function(e)
	{
		///	<summary>
		///		Called when the mouse enters the player.
		///	</summary>
		
		this.playInitiated = true;
	},

	onPlaylistItemAdded: function(e)
	{
		///	<summary>
		///		Called when a playlist item is added.
		///	</summary>
		
		this.playlistItemsElement.innerHTML = "";
		this.createPlaylistItems();
		this.setSelectedPlaylistItem();
	},

	onPlaylistItemRemoved: function(e)
	{
		///	<summary>
		///		Called when a playlist item is removed.
		///	</summary>
		
		this.playlistItemsElement.innerHTML = "";
		this.createPlaylistItems();
		this.setSelectedPlaylistItem();
	},

	onPlaylistItemClick: function(e)
	{
		///	<summary>
		///		Called when a playlist item is clicked.
		///	</summary>

		this.togglePlaylistDisplay(false);
		this.playlistPlugin.setPlaylistItem(e.selectedPlaylistItemIndex);
		this.setSelectedPlaylistItem();
	},

	onPlaylistArrowControlLeftElementClick: function(e)
	{
		///	<summary>
		///		Called when the left playlist navigation arrow is clicked or activated.
		///	</summary>

		if (this.arrowElementMouseDownEventFired)
			this.arrowElementMouseDownEventFired = false;
		else
			this.scrollPlaylist(this.playlistItemWidth + this.playlistItemSpacer);
	},

	onPlaylistArrowControlLeftElementMouseDown: function(e)
	{
		///	<summary>
		///		Called when the left playlist navigation arrow is pressed.
		///	</summary>

		this.arrowElementMouseDown = true;
		this.arrowElementMouseDownEventFired = true;
		this.scrollPlaylist(5);
	},

	onPlaylistArrowControlRightElementClick: function(e)
	{
		///	<summary>
		///		Called when the right playlist navigation arrow is clicked or activated.
		///	</summary>

		if (this.arrowElementMouseDownEventFired)
			this.arrowElementMouseDownEventFired = false;
		else
			this.scrollPlaylist(-(this.playlistItemWidth + this.playlistItemSpacer));
	},

	onPlaylistArrowControlRightElementMouseDown: function(e)
	{
		///	<summary>
		///		Called when the right playlist navigation arrow is pressed.
		///	</summary>

		this.arrowElementMouseDown = true;
		this.arrowElementMouseDownEventFired = true;
		this.scrollPlaylist(-5);	
	},

	onPlaylistArrowElementMouseUp: function(e)
	{
		///	<summary>
		///		Called when the a playlist navigation arrow is released.
		///	</summary>

		this.arrowElementMouseDown = false;
	},

	onPlaylistToggleElementClick: function(e)
	{
		///	<summary>
		///		Called when the the playlist toggle button is clicked.
		///	</summary>

		this.togglePlaylistDisplay(this.playlistElement.style.top !== "0px");
	},

	onReady: function(e)
	{
		///	<summary>
		///		When overridden in a derived class, called when the player is ready for playback.
		///	</summary>

		this.createControl();
		this.addEventListeners();
	},

	// Functions
	addEventListeners: function()
	{
		///	<summary>
		///		Adds event listeners to the control's elements.
		///	</summary>
		
		PlayerFramework.addEvent(this.player, "playlistitemadded", PlayerFramework.proxy(this, this.onPlaylistItemAdded));
		PlayerFramework.addEvent(this.player, "playlistitemremoved", PlayerFramework.proxy(this, this.onPlaylistItemRemoved));
		PlayerFramework.addEvent(this.player, "play", PlayerFramework.proxy(this, this.onPlay));
		PlayerFramework.addEvent(this.playlistElement, "mouseover", PlayerFramework.mouseEventProxy(this.player, "mouseover"));
		PlayerFramework.addEvent(this.playlistElement, "mouseout", PlayerFramework.mouseEventProxy(this.player, "mouseout"));
		PlayerFramework.addEvent(this.playlistToggleElement, "mouseover", PlayerFramework.mouseEventProxy(this.player, "mouseover"));
		PlayerFramework.addEvent(this.playlistToggleElement, "mouseout", PlayerFramework.mouseEventProxy(this.player, "mouseout"));
		PlayerFramework.addEvent(this.playlistToggleElement, "click", PlayerFramework.proxy(this, this.onPlaylistToggleElementClick));
		PlayerFramework.addEvent(this.playlistArrowControlLeftElement, "mousedown", PlayerFramework.proxy(this, this.onPlaylistArrowControlLeftElementMouseDown));
		PlayerFramework.addEvent(this.playlistArrowControlLeftElement, "mouseup", PlayerFramework.proxy(this, this.onPlaylistArrowElementMouseUp));
		PlayerFramework.addEvent(this.playlistArrowControlLeftElement, "click", PlayerFramework.proxy(this, this.onPlaylistArrowControlLeftElementClick));
		PlayerFramework.addEvent(this.playlistArrowControlRightElement, "mousedown", PlayerFramework.proxy(this, this.onPlaylistArrowControlRightElementMouseDown));
		PlayerFramework.addEvent(this.playlistArrowControlRightElement, "mouseup", PlayerFramework.proxy(this, this.onPlaylistArrowElementMouseUp));
		PlayerFramework.addEvent(this.playlistArrowControlRightElement, "click", PlayerFramework.proxy(this, this.onPlaylistArrowControlRightElementClick));
	},

	createControl: function()
	{
		///	<summary>
		///		Creates and appends all markup for the controls to the DOM.
		///	</summary>

		this.playlistToggleElement = PlayerFramework.createElement(this.player.containerElement,
		[
			"div",
			{
				"class": "pf-playlist-toggle"
			}
		]);

		this.playlistToggleButtonElement = PlayerFramework.createElement(this.playlistToggleElement,
		[
			"button",
			{
				"class": "pf-button",
				type: "button",
				title: this.options.strings.toggleTitle,
				accessKey: this.options.accessKeys.toggleKey
			},
			[
				"span",
				{
					"class": "pf-playlist-toggle-text"
				},
				this.options.strings.toggleLabel
			]
		]);

		this.playlistElement = PlayerFramework.createElement(this.player.containerElement,
		[
			"div",
			{
				"class": "pf-playlist",
				style: "display: block;" // Ensure playlist div is displaying to get height below.
			},
			[
				"div",
				{
					"class": "pf-playlist-arrow-control pf-playlist-arrow-control-left"
				},
				[
					"button",
					{
						"class": "pf-button",
						type: "button",
						title: this.options.strings.arrowLeftTitle,
						accessKey: this.options.accessKeys.arrowLeftKey
					},
					[
						"span",
						{
							"class": "pf-playlist-arrow"
						}
					]
				]
			],
			[
				"div",
				{
					"class": "pf-playlist-items-container"
				},
				[
					"div",
					{
						"class": "pf-playlist-items"
					}
				]
			],
			[
				"div",
				{
					"class": "pf-playlist-arrow-control pf-playlist-arrow-control-right"
				},
				[
					"button",
					{
						"class": "pf-button",
						type: "button",
						title: this.options.strings.arrowRightTitle,
						accessKey: this.options.accessKeys.arrowRightKey
					},
					[
						"span",
						{
							"class": "pf-playlist-arrow"
						}
					]
				]
			]
		]);

		this.playlistArrowControlLeftElement = PlayerFramework.getElementsByClass("pf-playlist-arrow-control-left", this.playlistElement)[0];
		this.playlistArrowControlRightElement = PlayerFramework.getElementsByClass("pf-playlist-arrow-control-right", this.playlistElement)[0];
		this.playlistItemsContainerElement = PlayerFramework.getElementsByClass("pf-playlist-items-container", this.playlistElement)[0];
		this.playlistItemsElement = PlayerFramework.getElementsByClass("pf-playlist-items", this.playlistElement)[0];
		this.playlistItemsContainerElementWidth = this.playlistItemsContainerElement.offsetWidth;
		this.playlistElementHeight = this.playlistElement.offsetHeight; // Store for use when toggling playlist display.
		this.playlistItemWidth = this.playlistElement.offsetHeight; // Derived from (4/3) * (3/4) * playlist height (4:3 ratio multiplied by 75% of the playlist height).
		
		this.playlistElement.style.display = "none";

		this.createPlaylistItems();
	},

	createPlaylistItems: function()
	{
		///	<summary>
		///		Creates all playlist items.
		///	</summary>

		for (var i = 0; i < this.playlistPlugin.playlistItems.length; i++)
		{
			this.createPlaylistItemControl(this.playlistPlugin.playlistItems[i], i);
		}
	},

	createPlaylistItemControl: function(playlistItem, playlistItemIndex)
	{
		///	<summary>
		///		Creates a single playlist item control.
		///	</summary>

		var playlistItemElement = PlayerFramework.createElement(this.playlistItemsElement,
		[
			"div",
			{
				"class": "pf-playlist-item",					
				style: "left: " + playlistItemIndex * (this.playlistItemWidth + this.playlistItemSpacer) + "px; width: " + this.playlistItemWidth + "px;"
			}
		]);

		var playlistItemButtonElement = PlayerFramework.createElement(playlistItemElement,
		[
			"button",
			{
				"class": "pf-button",
				type: "button",
				title: playlistItem.title
			}
		]);

		if (playlistItem.poster)
		{
			PlayerFramework.createElement(playlistItemButtonElement,
			[
				"img",
				{
					src: playlistItem.poster,
					style: "width: 100%; height: 100%;"
				}
			]);
		}

		PlayerFramework.proxy(this, function(playlistItemIndex)
		{
			PlayerFramework.addEvent(playlistItemElement, "click", PlayerFramework.proxy(this, function(e)
			{
				this.onPlaylistItemClick(
				{
					selectedPlaylistItemIndex: playlistItemIndex
				});
			}));
		})(playlistItemIndex);
	},

	togglePlaylistDisplay: function(showPlaylist)
	{
		///	<summary>
		///		Toggles the display of the playlist.
		///	</summary>
		///	<param name="showPlaylist" type="Boolean">
		///		Determines whether to show or hide the playlist.
		///	</param>

		if (this.mediaPlugin())
		{
			if (showPlaylist)
			{
				this.playlistElement.style.display = "block";
				this.playlistElement.style.top = "0px";
				this.playlistToggleElement.style.display = "block";
				this.playlistToggleElement.style.top = this.playlistElementHeight + "px";
				this.playlistToggleButtonElement.setAttribute("title", this.options.strings.toggleAltTitle);
			}
			else
			{
				this.playlistElement.style.display = "none";
				this.playlistElement.style.top = -this.playlistElementHeight + "px";
				this.playlistToggleElement.style.display = "none";
				this.playlistToggleElement.style.top = "0px";
				this.playlistToggleButtonElement.setAttribute("title", this.options.strings.toggleTitle);
			}
		}
	},

	setSelectedPlaylistItem: function()
	{
		///	<summary>
		///		Changes the style of the current playlist item control to appear selected and changes
		///		the style of all other playlist item controls to appear deselected.
		///	</summary>

		var playlistItemElements = this.playlistItemsElement.childNodes;
		
		// Reset styles for all playlist items.
		PlayerFramework.forEach(playlistItemElements, function(item)
		{
			item.className = "pf-playlist-item";
		});

		var selectedPlaylistItem = playlistItemElements[this.playlistPlugin.currentPlaylistItemIndex];
		
		// Change style.
		selectedPlaylistItem.className = "pf-playlist-item pf-playlist-item-selected";

		// Scroll into view.
		var leftValue = parseInt(this.playlistItemsElement.style.left || "0px");
		if (leftValue + selectedPlaylistItem.offsetLeft + this.playlistItemWidth > this.playlistItemsContainerElementWidth)
		{
			var offset = this.playlistItemsContainerElementWidth - (this.playlistPlugin.currentPlaylistItemIndex + 1) * (this.playlistItemWidth + this.playlistItemSpacer);
			this.playlistItemsElement.style.left = offset + "px";
		}
	},

	scrollPlaylist: function(delta)
	{	
		///	<summary>
		///		Scrolls the playlist along the x-axis by the given delta.
		///	</summary>
		///	<param name="showPlaylist" type="Boolean">
		///		Determines whether to show or hide the playlist.
		///	</param>

		var leftValue = parseInt(this.playlistItemsElement.style.left || "0px") + delta;
		var maxLeft = (this.playlistPlugin.playlistItems.length - 1) * (this.playlistItemWidth + this.playlistItemSpacer);

		if (leftValue > 0)
			leftValue = 0;
		else if (leftValue < -maxLeft)
			leftValue = -maxLeft;
				
		this.playlistItemsElement.style.left = leftValue + "px";

		// Loop animation while mouse is down.
		window.setTimeout(PlayerFramework.proxy(this, function()
		{
			if (this.arrowElementMouseDown)
				this.scrollPlaylist(delta);
		}), 15);
	}
});
﻿PlayerFramework.Plugins.SilverlightMediaPlugin = PlayerFramework.Plugins.SilverlightMediaPluginBase.extend(
{
	defaultOptions: function(player, playerOptions)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			params:
			{
				source: "../xap/SilverlightPlayer.xap",
				onError: "onSilverlightError",
				onLoad: "onSilverlightLoad",
				minRuntimeVersion: "4.0.50401.0",
				autoUpgrade: false,
				enableGPUAcceleration: true,
				windowless: true
			},
			initParams:
			{
				scriptablename: "Player",
				autoplay: !!playerOptions.autoplay
			}
		});
	},

	init: function(player, options, playerOptions)
	{
		///	<summary>
		///		Initializes the VideoMediaPlugin that injects and wraps the Silverlight player.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the SilverlightMediaPlugin.
		///	</param>
		///	<param name="playerOptions" type="Object">
		///		The merged player options for the current media source.
		///	</param>
		///	<returns type="SilverlightMediaPlugin" />

		this._super(player, options, playerOptions);

		this.render();
	},

	render: function()
	{
		///	<summary>
		///		Creates and sets the MediaPlugin's element given the plugin and player options
		///		and a specific template.
		///	</summary>

		var element = PlayerFramework.createElement(null,
		[
			"object",
			{
				"class": this.options["class"],
				data: "data:application/x-silverlight-2,",
				type: "application/x-silverlight-2",
				width: this.playerOptions.width,
				height: this.playerOptions.height,
				"data-poster": this.playerOptions.poster || null
			}
		]);

		this.createParams(element);

		// Element is cloned for IE, otherwise it does not display.
		this.setElement(element.cloneNode(true));
	},

	createParams: function(element)
	{
		///	<summary>
		///		Creates param child nodes on the specified element given the media plugin's options.
		///	</summary>

		// Push all object params.
		for(var p in this.options.params)
		{
			PlayerFramework.createElement(element,
			[
				"param",
				{
					name: p,
					value: this.options.params[p]
				}
			]);
		}

		if (!this.options.initParams.mediaurl)
		{
			PlayerFramework.merge(this.options.initParams,
			{
				mediaurl: this.getMediaUrl()
			});
		}
		var initParams = "";

		// Concatenate and add the special "InitParams" object param.
		for(var p in this.options.initParams)
		{
			if (initParams)
				initParams += ",";

			initParams += p + "=" + this.options.initParams[p];
		}

		PlayerFramework.createElement(element,
		[
			"param",
			{
				name: "InitParams",
				value: initParams
			}
		]);
	},

	getMediaUrl: function()
	{
		var firstSupportedSource = PlayerFramework.first(this.playerOptions.sources, PlayerFramework.proxy(this, function(s)
		{
			return this.canPlayType(s.type);
		}));
		
		if (!firstSupportedSource)
			return null;

		return firstSupportedSource.src.indexOf('://') != -1
											? firstSupportedSource.src
											: this.qualifyURL(firstSupportedSource.src);
	},

	escapeHTML: function(s)
	{
		return s.split('&').join('&amp;').split('<').join('&lt;').split('"').join('&quot;');
	},

	qualifyURL: function(url)
	{
		var el= document.createElement('div');
		el.innerHTML= '<a href="'+ this.escapeHTML(url) +'">x</a>';
		return el.firstChild.href;
	}
});
﻿PlayerFramework.TextTrack = PlayerFramework.Object.extend(
{
	init: function(options)
	{
		///	<summary>
		///		Initializes a TextTrack that represents a set of cues.
		///	</summary>
		///	<param name="options" type="Object">
		///		The options for the TextTrackCueList.
		///	</param>

		this._super(options);
		
		this.kind = "";
		this.label = "";
		this.language = "";

		this.readyState = PlayerFramework.TextTrack.ReadyState.NONE;
		this.mode = PlayerFramework.TextTrack.Mode.HIDDEN;

		this.cues = new PlayerFramework.TextTrackCueList();
		this.activeCues = new PlayerFramework.TextTrackCueList();
		this.xml = null; // Implementation - not per the W3C specification.

		this.onload = function () { };
		this.onerror = function () { };
		this.oncuechange = null;
	},

	addCue: function(cue)
	{
		///	<summary>
		///		Adds the given cue to the text track's list of cues.
		///	</summary>

		this.cues.push(cue);
		
		this.cues.sort(function(a, b)
		{
			return a.startTime > b.startTime ? 1 : -1;
		});
	},

	removeCue: function(cue)
	{
		///	<summary>
		///		Removes the given cue from the text track's list of cues.
		///	</summary>

		for(var i = 0; i < this.cues.length; i++)
		{
			if (this.cues[i].id == cue.id)
			{
				this.cues.splice(i, 1);
				break;
			}
		}
	}
});

PlayerFramework.TextTrack.ReadyState =
{
	///	<summary>
	///		A JSON object used to store the values of the text track's ready state.
	///	</summary>

	NONE: 0,
	LOADING: 1,
	LOADED: 2,
	ERROR: 3
};

PlayerFramework.TextTrack.Mode =
{
	///	<summary>
	///		A JSON object used to store the values of the text track's mode.
	///	</summary>

	OFF: 0,
	HIDDEN: 1,
	SHOWING: 2
};

PlayerFramework.TextTrack.DisplayPreference =
{
	///	<summary>
	///		A JSON object used to store the values of the text track's display preference.
	///	</summary>

	NONE: 0,
	CUSTOM: 1,
	NATIVE: 2,
	ALL: 3
};
﻿PlayerFramework.TextTrackCue = PlayerFramework.Object.extend(
{
	init: function(options)
	{
		///	<summary>
		///		Initializes a TextTrackCue that is the unit of time-sensitive data in a text track,
		///		corresponding for instance for subtitles and captions to the text that appears
		///		at a particular time and disappears at another time.
		///	</summary>
		///	<param name="options" type="Object">
		///		The options for the TextTrackCue.
		///	</param>

		this._super(options);

		this.track = this.options.track;
		this.id = this.options.id;
		this.startTime = this.options.startTime;
		this.endTime = this.options.endTime;
		this.pauseOnExit = this.options.pauseOnExit;

		this.onenter = null;
		this.onexit = null;
	},
	
	getCueAsSource: function ()
	{
		///	<summary>
		///		Returns the text track cue text in raw unparsed form.
		///	</summary>
	
		return this.options.text;
	},

	getCueAsHTML: function ()
	{
		///	<summary>
		///		Returns the text track cue text as a DocumentFragment of HTML elements and other DOM nodes.
		///	</summary>

		return this.options.markup;
	}
});
﻿PlayerFramework.TextTrackCueList = function(options)
{
	///	<summary>
	///		Initializes a TextTrackCueList that represents a dynamically updating list of text track cues in a given order.
	///	</summary>
	///	<param name="options" type="Object">
	///		The options for the TextTrackCueList.
	///	</param>

	var list = [];

	if (options && options.list)
	{
		PlayerFramework.forEach(options.list, PlayerFramework.proxy(this, function(item)
		{
			list.push(new PlayerFramework.TextTrackCue(
			{
				track: options.track,
				id: item.id,
				startTime: item.start / 1000,
				endTime: item.end / 1000,
				pauseOnExit: false,
				text: item.caption.innerHTML,
				markup: item.caption,
				uri: item.uri
			}));
		}));
	}

	list.getCueById = function (id)
	{
		///	<summary>
		///		Returns the first text track cue (in text track cue order) with text track cue identifier id.
		///	</summary>.

		if (id === "")
			return null;

		var foundCue = PlayerFramework.first(list, function(cue)
		{
			return cue.id === id;
		});

		return foundCue;
	};

	return list;
};
﻿PlayerFramework.Plugins.ThrobberControlPlugin = PlayerFramework.ControlPlugin.extend(
{
	defaultOptions: function(player)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			strings:
			{
				throbberTitle: "Buffering"
			},
			nodeCount: 12,
			maxOpacity: 0.85,
			animationDelay: 75 /* milliseconds */
		});
	},

	init: function(player, options)
	{
		///	<summary>
		///		Initializes the ControlPlugin that displays a "spinning wheel" while the UI loads.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the ThrobberControlPlugin.
		///	</param>
		///	<returns type="ThrobberControlPlugin" />

		this._super(player, options);

		this.createControl();
		this.animateNodes();
	},

	// ControlPlugin Event Handlers
	onCanPlayThrough: function(e)
	{
		///	<summary>
		///		Called when the media element can play through to the end without having to stop for further buffering.
		///	</summary>
		
		this.hide();
	},

	onError: function(e)
	{
		///	<summary>
		///		Called when the media element encounters an error.
		///	</summary>

		this.hide();
	},

	onUnloadingMediaPlugin: function(e)
	{
		this.element.style.display = "block";
		this.animateNodes();
	},

	onNetworkStateChange: function(e)
	{
		///	<summary>
		///		Called when the media element's network state changes.
		///	</summary>

		if (this.player.networkState() === PlayerFramework.VideoMediaPlugin.NetworkState.NETWORK_NO_SOURCE)
			this.hide();
	},

	// Functions
	createControl: function()
	{
		///	<summary>
		///		Creates and appends all markup for the controls to the DOM.
		///	</summary>
		
		// Throbber control
		this.element = PlayerFramework.createElement(this.player.containerElement,
		[
			"div",
			{
				"class": "pf-throbber-control",
				title: this.options.strings.throbberTitle
			}
		]);

		// Throbber container
		this.throbberContainerElement = PlayerFramework.createElement(this.element,
		[
			"div",
			{
				"class": "pf-throbber-container"
			}
		]);

		// Create throbber nodes
		this.throbberNodeElements = [];
		this.opacityDifference = this.options.maxOpacity / this.options.nodeCount;
		var separationAngle = (2 * Math.PI) / this.options.nodeCount;
		var throbberRadius = parseInt(PlayerFramework.getComputedStyle(this.throbberContainerElement, "width")) / 2;
		
		for (var i = 0; i < this.options.nodeCount; i++)
		{
			var throbberNodeElement = PlayerFramework.createElement(this.throbberContainerElement,
			[
				"div",
				{
					"class": "pf-throbber-node"
				}
			]);
			this.throbberNodeElements.push(throbberNodeElement);
			
			var nodeRadius = parseInt(PlayerFramework.getComputedStyle(throbberNodeElement, "width")) / 2;
			var x = throbberRadius * (Math.cos(i * separationAngle) + 1) - nodeRadius;
			var y = throbberRadius * (Math.sin(i * separationAngle) + 1) - nodeRadius;
			
			throbberNodeElement.style.left = x.toString() + "px";
			throbberNodeElement.style.top = y.toString() + "px";
			throbberNodeElement.style.opacity = this.options.maxOpacity - ((this.options.nodeCount - i) * this.opacityDifference);
		}
	},

	animateNodes: function()
	{
		if (this.element.style.display === "none")
			return;

		window.setTimeout(PlayerFramework.proxy(this, function()
		{
			PlayerFramework.requestAnimationFrame(PlayerFramework.proxy(this, this.animateNodes));
		}), this.options.animationDelay);

		this.fadeNodes();
	},

	fadeNodes: function()
	{
		for (var i = 0; i < this.options.nodeCount; i++)
		{
			var throbberNodeElement = this.throbberNodeElements[i];
			throbberNodeElement.style.opacity = this.options.maxOpacity - ((this.options.nodeCount - i) * this.opacityDifference);
		}

		this.throbberNodeElements.push(this.throbberNodeElements.shift());
	},

	hide: function()
	{
		window.setTimeout(PlayerFramework.proxy(this, function()
		{
			this.element.style.display = "none";
		}), 500);
	}
});
﻿PlayerFramework.Plugins.TimelineTrackControlPlugin = PlayerFramework.ControlPlugin.extend(
{
	defaultOptions: function(player)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			timelineTrackPlugin: PlayerFramework.first(player.modules, function(m)
			{
				return m instanceof PlayerFramework.Plugins.TimelineTrackPlugin;
			}),
			controlStripPlugin: PlayerFramework.first(player.modules, function(m)
			{
				return m instanceof PlayerFramework.Plugins.ControlStripPlugin;
			})
		});
	},

	isEnabled: function(player, options)
	{
		return !!options.timelineTrackPlugin && !!options.controlStripPlugin;
	},

	init: function(player, options)
	{
		///	<summary>
		///		Initializes the TimelineTrackControlPlugin that provides UI for displaying and controlling timeline cues.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the TimelineTrackControlPlugin.
		///	</param>
		///	<returns type="TimelineTrackControlPlugin" />

		this._super(player, options);

		// Find the required plugins.
		this.timelineTrackPlugin = this.options.timelineTrackPlugin;
		this.controlStripPlugin = this.options.controlStripPlugin;

		if (!this.timelineTrackPlugin)
			throw new Error("TimelineTrackPlugin required.");

		if (!this.controlStripPlugin)
			throw new Error("ControlStripPlugin required.");

		this.cuesPositioned = false;
		this.cueElements = [];
	},

	// Event Handlers	
	onTimelineCueAdded: function(e)
	{		
		///	<summary>
		///		Called when a timeline cue is added. Displays the cue control on the timeline.
		///	</summary>
		
		var cueElement = PlayerFramework.createElement(this.timelineCueContainerElement,
		[
			"div",
			{
				"class": "pf-timeline-cue"
			}
		]);

		cueElement.cue = e.cue;

		PlayerFramework.addEvent(cueElement, "click", PlayerFramework.proxy(this, function()
		{
			this.onTimelineCueClicked(e.cue);
		}));

		this.cueElements.push(cueElement);

		if (this.player.duration())
			this.positionCue(cueElement);
	},

	onTimelineCueClicked: function(e)
	{		
		///	<summary>
		///		Called when a timeline cue is clicked. Seeks to the position represented by
		///		the timeline cue.
		///	</summary>
		
		this.player.currentTime(e.startTime);
	},

	onTimelineCueRemoved: function(e)
	{
		///	<summary>
		///		Called when a timeline cue is removed. Removes the cue control from the timeline.
		///	</summary>

		for(var i = 0; i < this.cueElements.length; i++)
		{
			var cueElement = this.cueElements[i];
			if (cueElement.cue == e.cue)
			{
				this.timelineCueContainerElement.removeChild(cueElement);
				this.cueElements.splice(i, 1);
				break;
			}
		}	
	},

	onPlay: function(e)
	{
		///	<summary>
		///		Called when the media plays. Displays and positions all cues. 
		///	</summary>

		if (!this.cuesPositioned)
		{
			this.cuesPositioned = true;
			PlayerFramework.forEach(this.cueElements, PlayerFramework.proxy(this, this.positionCue));
		}
	},

	onReady: function(e)
	{
		///	<summary>
		///		Called when the player is ready for playback. Creates the timeline cue controls and adds event listeners.
		///	</summary>

		this.createControl();
		this.addEventListeners();
	},

	onUnloadingMediaPlugin: function(e)
	{
		///	<summary>
		///		Called when the media element unloads. Removes all cue controls from the timeline.
		///	</summary>

		this.cuesPositioned = false;
		this.cueElements = [];
	},

	// Functions
	addEventListeners: function()
	{
		///	<summary>
		///		Adds event listeners to the control's elements.
		///	</summary>

		PlayerFramework.addEvent(this.player, "timelinecueadded", PlayerFramework.proxy(this, this.onTimelineCueAdded));
		PlayerFramework.addEvent(this.player, "timelinecueremoved", PlayerFramework.proxy(this, this.onTimelineCueRemoved));
		PlayerFramework.addEvent(this.player, "timeupdate", PlayerFramework.proxy(this, this.onTimeUpdate));
	},

	createControl: function()
	{
		///	<summary>
		///		Creates and appends all markup for the controls to the DOM.
		///	</summary>

		this.timelineCueContainerElement = PlayerFramework.createElement(this.controlStripPlugin.timelineControlElement,
		[
			"div",
			{
				"class": "pf-timeline-cues-container"
			}
		]);
	},

	positionCue: function(cueElement)
	{
		///	<summary>
		///		Positions the specified cue element on the timeline.
		///	</summary>
		///	<param name="cueElement" type="Object">
		///		The event object.
		///	</param>
		
		cueElement.style.left = 100 * cueElement.cue.startTime / this.player.duration() + "%";
		cueElement.style.display = "block";
	}
});
﻿PlayerFramework.Plugins.TrackSelectorControlPlugin = PlayerFramework.ControlPlugin.extend(
{
	defaultOptions: function(player)
	{
		return PlayerFramework.mergeOptions(this._super(),
		{
			strings:
			{
				trackSelectorTitle: "Select Captions/Subtitles",
				trackSelectorLabel: "CC",
				trackOffOptionLabel: "(None)"
			},
			accessKeys:
			{
				trackSelectorKey: "t"
			},
			kind: "captions",
			trackPlugin: PlayerFramework.first(player.modules, function(m)
			{
				return m instanceof PlayerFramework.TrackPlugin && m.options.kind == "captions";
			}),
			controlStripPlugin: PlayerFramework.first(player.modules, function(m)
			{
				return m instanceof PlayerFramework.Plugins.ControlStripPlugin;
			})
		});
	},

	isEnabled: function(player, options)
	{
		return !!options.trackPlugin && !!options.controlStripPlugin;
	},

	init: function(player, options)
	{
		///	<summary>
		///		Initializes the TrackSelectorControlPlugin that provides UI for selecting a text track.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the TrackSelectorControlPlugin.
		///	</param>
		///	<returns type="TrackSelectorControlPlugin" />

		this._super(player, options);

		// Find the required plugins.
		this.trackPlugin = this.options.trackPlugin;
		this.controlStripPlugin = this.options.controlStripPlugin;

		if (!this.trackPlugin)
			throw new Error("TrackPlugin required.");

		if (!this.controlStripPlugin)
			throw new Error("ControlStripPlugin required.");
	},

	// Event Handlers
	onTextTrackAdded: function(e)
	{		
		///	<summary>
		///		Called when a chapter cue is added. Displays the chapter navigation arrows next to the timeline.
		///	</summary>

		if (this.controlStripPlugin.element.className.indexOf("pf-track-selector") === -1)
			this.createControl();
	},

	onPlayerMouseOut: function(e)
	{
		///	<summary>
		///		Called when the mouse leaves the player.
		///	</summary>
		
		if (this.popUpSelectorControl && this.player.options.overlayControls)
			this.popUpSelectorControl.style.display = "none";
	},

	onPlayerMouseOver: function(e)
	{
		///	<summary>
		///		Called when the mouse enters the player.
		///	</summary>

		if (this.popUpSelectorControl && this.player.options.overlayControls)
			this.popUpSelectorControl.style.display = "block";		
	},

	onPopUpSelectorOptionClick: function(e)
	{
		if (!this.trackPlugin.isActiveTextTrack(e.textTrack))
		{
			PlayerFramework.forEach(this.player.textTracks, PlayerFramework.proxy(this, function(t)
			{
				if (t.kind == this.options.kind)
					this.trackPlugin.deactivateTextTrack(t);
			}));

			if (e.textTrack.label != this.options.strings.trackOffOptionLabel)
				this.trackPlugin.activateTextTrack(e.textTrack);
		}

		this.removePopUpSelectorControl();
	},

	onSelectTrackClick: function(e)
	{		
		///	<summary>
		///		Called when the skip forward chapter button is clicked.
		///	</summary>

		if (!this.popUpSelectorControl)
			this.createPopUpSelectorControl();
		else
			this.removePopUpSelectorControl();
	},

	onReady: function(e)
	{		
		///	<summary>
		///		Called when the player is ready for playback.
		///	</summary>

		this.addEventListeners();
	},

	// Functions
	addEventListeners: function()
	{
		///	<summary>
		///		Adds event listeners to the control's elements.
		///	</summary>

		PlayerFramework.addEvent(this.player, "texttrackadded", PlayerFramework.proxy(this, this.onTextTrackAdded));		
	},

	createControl: function()
	{
		///	<summary>
		///		Creates and appends all markup for the controls to the DOM.
		///	</summary>

		this.controlStripPlugin.element.className += " pf-track-selector";

		this.selectTrackControlElement = PlayerFramework.createElement(null,
		[
			"div",
			{
				"class": "pf-track-selector-control"
			},
			[
				"button",
				{
					"class": "pf-button",
					type: "button",
					title: this.options.strings.trackSelectorTitle,
					accessKey: this.options.accessKeys.trackSelectorKey
				},
				[
					"span",
					{
						"class": "pf-track-selector-box"
					},
					this.options.strings.trackSelectorLabel
				]
			]
		]);
		
		PlayerFramework.addEvent(this.selectTrackControlElement, "click", PlayerFramework.proxy(this, this.onSelectTrackClick));

		this.controlStripPlugin.element.insertBefore(this.selectTrackControlElement, this.controlStripPlugin.fullBrowserControlElement);

		this.controlStripPlugin.updateLayout();
	},
	
	createPopUpSelectorControl: function()
	{
		var textTracks = PlayerFramework.filter(this.player.textTracks, PlayerFramework.proxy(this, function(t)
		{
			return t.kind == this.options.kind;
		}));

		var selectorHeight = (textTracks.length + 1) * 22;
		var containerHeight = this.player.containerElement.offsetHeight;

		this.popUpSelectorControl = PlayerFramework.createElement(null,
		[
			"div",
			{
				"class": "pf-popup-track-selector-control",
				style: this.style(
				{
					bottom: this.player.options.overlayControls ? this.controlStripPlugin.element.offsetHeight + "px": "0",
					height: (selectorHeight < containerHeight ? selectorHeight : containerHeight) + "px",
					"overflow-x": "hidden",
					"overflow-y": (selectorHeight < containerHeight ? "hidden" : "scroll")
				})
			}
		]);

		var hasActiveTextTrack = false;
		PlayerFramework.forEach(textTracks, PlayerFramework.proxy(this, function(textTrack)
		{
			var isActiveTextTrack = this.trackPlugin.isActiveTextTrack(textTrack);

			if (isActiveTextTrack)
				hasActiveTextTrack = true;

			this.createPopUpSelectorOptionControl(textTrack, isActiveTextTrack);
		}));

		this.createPopUpSelectorOptionControl({ label: this.options.strings.trackOffOptionLabel }, !hasActiveTextTrack);
		
		PlayerFramework.addEvent(this.popUpSelectorControl, "mouseover", PlayerFramework.mouseEventProxy(this.player, "mouseover"));
		PlayerFramework.addEvent(this.popUpSelectorControl, "mouseout", PlayerFramework.mouseEventProxy(this.player, "mouseout"));

		this.player.containerElement.insertBefore(this.popUpSelectorControl, this.trackPlugin.element.nextSibling);
	},

	createPopUpSelectorOptionControl: function(textTrack, isSelected)
	{
		var popUpSelectorOption = PlayerFramework.createElement(this.popUpSelectorControl,
		[
			"div",
			{
				"class": "pf-popup-track-selector-option" + (isSelected ? " selected" : "")
			},
			[
				"button",
				{
					"class": "pf-button",
					type: "button",
					title: textTrack.label
				},
				textTrack.label
			]
		]);

		PlayerFramework.proxy(this, function(textTrack)
		{
			PlayerFramework.addEvent(popUpSelectorOption, "click", PlayerFramework.proxy(this, function(e)
			{
				this.onPopUpSelectorOptionClick(
				{
					textTrack: textTrack
				});
			}));
		})(textTrack);
	},

	removePopUpSelectorControl: function()
	{
		this.player.containerElement.removeChild(this.popUpSelectorControl);
		this.popUpSelectorControl = null;
	},

	style: function(styles)
	{
		var style = "";
		for(var name in styles)
		{
			style += name + ": " + styles[name] + "; ";
		}

		return style;
	}
});
﻿PlayerFramework.TtmlParser = PlayerFramework.Object.extend(
{
	init: function(options)
	{
		///	<summary>
		///		Parses a TTML file per the W3C specification: http://www.w3.org/TR/ttaf1-dfxp/
		///		Based on a library written by Sean Hayes.
		///	</summary>

		this._super();
		
		this.mergeOptions(options,
		{
			xmlNamespace: 'http://www.w3.org/XML/1998/namespace',
			ttmlNamespace: "http://www.w3.org/ns/ttml",
			ttmlStyleNamespace: "http://www.w3.org/ns/ttml#styling",
			ttmlMetaNamespace: "http://www.w3.org/ns/ttml#metadata",
			smpteNamespace: "http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt",
			trackIdPrefix: "",
			mediaFrameRate: 30,
			mediaFrameRateMultiplier: 1,
			mediaSubFrameRate: 1,
			mediaTickRate: 1000,
			mediaStart: 0,
			mediaDuration: 99999,
			clocktime: /^(\d{2,}):(\d{2}):(\d{2})((?:\.\d{1,})|:(\d{2,}(?:\.\d{1,})?))?$/, // hours ":" minutes ":" seconds ( fraction | ":" frames ( "." sub-frames )? )?
			offsettime: /^(\d+(\.\d+)?)(ms|[hmsft])$/ // time-count fraction? metric
		});

		this.root = null;
		this.layout = null;
		this.head = null;
		this.body = null;
		this.regions = null;

		// True unless we see a region definition in the TTML.
		this.usingDefaultRegion = true;

		// Ordered list of events containing times (in ms) and corresponding element.
		this.TTMLEvents = [];

		// List of all audio descriptions.
		this.Descriptions = [];

		// Tree of navigation points.
		this.Navigation = null;

		// Store styles here because IE doesnt support expando's on XML elements.
		this.StyleSetCache = {};
		this.styleSetId = 0;

		// SMPTE-TT image support.
		this.ImageCache = {};
				
		// Keep track of the rightmost element at each level, so that we can include left and right links.
		this.rightMostInLevel = [];

		this.nodeType =
		{
			ELEMENT_NODE: 1,
			ATTRIBUTE_NODE: 2,
			TEXT_NODE: 3,
			CDATA_SECTION_NODE: 4,
			ENTITY_REFERENCE_NODE: 5,
			ENTITY_NODE: 6,
			PROCESSING_INSTRUCTION_NODE: 7,
			COMMENT_NODE: 8,
			DOCUMENT_NODE: 9,
			DOCUMENT_TYPE_NODE: 10,
			DOCUMENT_FRAGMENT_NODE: 11,
			NOTATION_NODE: 12
		};
	},

	parseTtml: function(source)
	{
		// Source is either a wrapped XMLDocument, or a string.
		this.xmlDoc = (typeof source == "string") ? this.parseXml(source) : source; 

		this.root = this.getElementsByTagNameNS(this.xmlDoc, this.options.ttmlNamespace, "tt")[0];
		
		// Exactly one tt root object allowed.
		if (this.root)
		{
			// Find the landmark nodes in the XML.
			this.body = this.getElementsByTagNameNS(this.root, this.options.ttmlNamespace, 'body')[0] || null;
			this.head = this.getElementsByTagNameNS(this.root, this.options.ttmlNamespace, 'head')[0] || null;
			this.layout = this.head ? (this.getElementsByTagNameNS(this.root, this.options.ttmlNamespace, 'layout')[0] || null) : null;
			
			this.loadSMPTEImages();

			// TTML that doesn't declare any layout regions uses a default region.
			if (this.layout)
			{
				this.regions = this.getElementsByTagNameNS(this.layout, this.options.ttmlNamespace, 'region');
				this.usingDefaultRegion = this.regions.length == 0;
			}
			else
			{
				this.regions = [];
				this.usingDefaultRegion = true;
			}

			// Apply the intervals over the tree.
			this.applyTiming(this.root, { first: this.options.mediaStart, second: this.options.mediaDuration }, true);

			// Use the time containement as a structured navigation map.
			this.Navigation = this.getNavigation(this.body)

			// Apply the style inheritance over the tree.
			this.applyStyling();
		}

		// Unroll using TTMLEvents and getCuesAtTime.
		// This then makes it easier to use the <track> API's and also use the same interface for WebVTT, SRT etc.
		var captionArray = [];
		
		for (var i = 0, max = this.TTMLEvents.length; i < max; i++)
		{
			if (this.TTMLEvents[i].elementScope == this.root)
				continue;

			var cues = this.getCuesAtTime(this.TTMLEvents[i].tick, this.TTMLEvents[i].elementScope);
			
			if (i > 0)
			{
				for (var pastCuesIndex = i - 1; pastCuesIndex >= 0; pastCuesIndex--)
				{
					if (this.TTMLEvents[pastCuesIndex].elementScope == this.root || this.TTMLEvents[pastCuesIndex].elementScope == this.TTMLEvents[i].elementScope)
						continue;

					var overlappingCues = this.getCuesAtTime(this.TTMLEvents[i].tick, this.TTMLEvents[pastCuesIndex].elementScope);

					if (overlappingCues.length != 0)
						cues.push(overlappingCues[0]);
					else
						break;
				}
			}
			
			for (var j = 0, cueCount = cues.length; j < cueCount; j++)
			{
				captionArray.push(
				{
					start: this.TTMLEvents[i].tick,
					end: (i + 1 < max) ? this.TTMLEvents[i + 1].tick : this.options.mediaDuration,
					id: "caption" + (captionArray.length + 1),
					caption: cues[j]
				});
			}
		}
		
		return {
			captions: captionArray,
			descriptions: this.Descriptions,
			navigation: this.Navigation,
			xml: this.root
		};
	},

	parseXml: function(data)
	{
		var xml;

		try
		{
			if (window.DOMParser)
			{
				var domParser = new DOMParser();
				xml = domParser.parseFromString(data, "application/xml");
			}
			else
			{
				xml = new ActiveXObject("Microsoft.XMLDOM");
				xml.async = false;
				xml.loadXML(data);
			}
		}
		catch (err)
		{
			xml = null;
		}

		return xml;
	},

	getCuesAtTime: function(tick, elementScope) 
	{
		// Get cue for a given time instant.
		var cues = [];

		if (elementScope && this.isTemporallyActive(elementScope, tick))
		{
			if (!this.usingDefaultRegion)
			{
				PlayerFramework.forEach(this.regions, PlayerFramework.proxy(this, function (region)
				{
					var regionId = this.attrNS(region, 'id', this.options.xmlNamespace);
					var div = this.translateMarkup(region, tick);

					if (div)
					{
						// Create a new subtree for the body element, prune elements not associated
						// with the region, and if its not empty then select it into this region by
						// adding it to div container.
	
						var prunedElement = this.prune(elementScope, regionId, tick);

						if (prunedElement)
							div.appendChild(prunedElement);

						var showBackground = div.getAttribute("data-showBackground") != 'whenActive';
						var text = div.innerHTML.replace(/\s/g, "");

						if (showBackground || text != "")
							cues.push(div);
					}
				}));
			}
			else
			{
				var div = PlayerFramework.createElement(null,
				[
					"div",
					{
						"class": "cue"
					}
				]);

				var prunedElement = this.prune(elementScope, "", tick)

				if (prunedElement)
					div.appendChild(prunedElement);

				if (this.children(div).length > 0)
					cues.push(div);
			}
		}

		return cues;
	},

	applyTiming: function(element, bound, isParallelContext) 
	{
		// Walk the tree to determine the absolute start and end times of all the 
		// elements using the TTML subset of the SMIL timing model.
		// The reference times passed in 'bound' are absolute times, the result of 
		// calling this is to set the local start time and end time to absolute times 
		// between these two reference times, based on the begin, end and dur attributes
		// and to recursively set all of the children.
		
		var begin = this.getTime(this.getAttr(element, "begin")); // Will return 0 if begin is unattested.
		var startTime = bound.first + begin;
		var endTime;
		
		// Compute the simple duration of the interval.
		var defaultDur = 0,
			dur = 0,
			end = 0;

		// Workaround for an issue where some cue ancestor must be offset from 0s.
		if (element.tagName != "body" && startTime == 0)
			startTime = .01;

		if (!this.hasAttr(element, "dur") && !this.hasAttr(element, "end"))
		{
			// No direct timing attested, so use default based on context.
			if (isParallelContext)
			{
				// "par" children have indefinite default duration, truncated by bounds.
				// "seq" children have zero default duration.
				if (startTime <= bound.second)
				{
					defaultDur = Math.max(0, bound.second - startTime);
					endTime = bound.second;
				}
				else
				{
					endTime = 0;
				}
			}
		}
		else if (this.hasAttr(element, "dur") && this.hasAttr(element, "end"))
		{
			// Both dur and end attested, the minimum interval applies.
			dur = this.getTime(this.getAttr(element, "dur"));
			end = this.getTime(this.getAttr(element, "end"));
			var minEnd = Math.min(startTime + dur, bound.first + end);
			endTime = Math.min(minEnd, bound.second);
		}
		else if (this.hasAttr(element, "end"))
		{
			// Only end attested.
			end = this.getTime(this.getAttr(element, "end"));
			endTime = Math.min(bound.first + end, bound.second);
		}
		else
		{
			// Only dur attested.
			dur = this.getTime(this.getAttr(element, "dur"));
			var offsetStart = startTime + dur;
			endTime = Math.min(offsetStart, bound.second);
		}

		if (endTime < startTime)
			endTime = startTime;

		element.setAttribute("data-time-start", startTime);
		element.setAttribute("data-time-end", endTime);

		if (!PlayerFramework.first(this.TTMLEvents, function(event)
		{
			return (event.tick == startTime); // && event.elementScope == element.parentNode);
		}))
		{
			this.TTMLEvents.push(
			{
				tick: startTime,
				elementScope: element
			});
		}
			
		if (!PlayerFramework.first(this.TTMLEvents, function(event)
		{
			return (event.tick == endTime); // && event.elementScope == element.parentNode);
		}))
		{
			this.TTMLEvents.push(
			{
				tick: endTime,
				elementScope: element
			});
		}

		 // Keep events in order.
		this.TTMLEvents.sort(function (a, b) { return a.tick - b.tick; })

		if (this.attrNS(element, 'role', this.options.ttmlMetaNamespace))
		{
			var srcAudio = this.attrNS(element, 'audio', 'http://www.microsoft.com/enable#media');

			if (srcAudio)
			{
				this.Descriptions.push(
				{
					start: startTime,
					end: endTime,
					id: "description" + (this.Descriptions.length + 1),
					uri: srcAudio,
					caption: ""
				});

				// Sort the descriptions by start time.
				this.Descriptions.sort(function (a, b) { return a.start - b.start; });
			}
		}

		var s = startTime;
		var timeContext = this.getAttr(element, "timeContainer");

		PlayerFramework.forEach(this.children(element), PlayerFramework.proxy(this, function (childElement)
		{
			if (timeContext != "seq")
			{
				// Parallel is default so null is OK here.
				this.applyTiming(childElement,
				{
					first: startTime,
					second: endTime
				}, true);
			}
			else
			{
				this.applyTiming(childElement,
				{
					first: s,
					second: endTime
				}, false);
				s = new Number(this.getAttr(childElement, "data-time-end"));
			}
		}));
	},

	getTime: function (timeExpression)
	{
		// Utility object to handle TTML time expressions. Could be improved, but seems to do the job.
		// In particular, we are not currently handling TTML parameters for tick rate and so on.

		// NOTE: IE 10 Consumer Preview cannot parse time formats containing frames (e.g. "00:00:04.18" works, but not "00:00:04:18")
		// To overlay default and native captions for testing/comparison, use the PlayerFramework.TextTrack.DisplayPreference option.

		var time;
		var v1 = this.options.clocktime.exec(timeExpression);
		var v2 = this.options.offsettime.exec(timeExpression);

		if (v1 != null)
		{
			var hours = new Number(v1[1]);
			var minutes = new Number(v1[2]);
			var seconds = new Number(v1[3]);
			var frames = 0;

			if (!isNaN(v1[4]))
				seconds += new Number(v1[4]);

			if (!isNaN(v1[5]))
				frames = new Number(v1[5]);

			time = hours * this.getMetricMultiplier("h") +
				minutes * this.getMetricMultiplier("m") +
				seconds * this.getMetricMultiplier("s") +
				frames * this.getMetricMultiplier("f");
		}
		else if (v2 != null)
		{
			var value = new Number(v2[1]);
			var multiplier = this.getMetricMultiplier(v2[3]);
			
			time = value * multiplier;
		}
		else
		{
			time = 0;
		}

		//console.log("time = " + time);

		return time;
	},

	getMetricMultiplier: function(timeExpression) 
	{
		switch (timeExpression)
		{
			case "h":
				return 1000 * 60 * 60;
			case "m":
				return 1000 * 60;
			case "s":
				return 1000;
			case "ms":
				return 1;
			case "f":
				return 1000 / this.options.mediaFrameRate;
			case "t":
				return 1000 / this.options.mediaTickRate;
			default:
				return 0;
		}
	},

	isTemporallyActive: function(element, time)
	{
		var s = Math.round(1000 * parseFloat(this.getAttr(element, "data-time-start"))) / 1000;
		var e = Math.round(1000 * parseFloat(this.getAttr(element, "data-time-end"))) / 1000;
		var t = Math.round(1000 * time) / 1000;

		//console.log("s = " + s + ", e = " + e + ", t = " + t + ", (s <= t) = " + (s <= t) + ", (t < e) = " + (t < e));

		return (s <= t) && (t < e);
	},

	getNavigation: function(element)
	{
		// Navigation elements are marked with the extensions role="x-nav-..." 
		// we want to find the lists of nav-labels, where each label goes in the right level of list
		// the structure of this is loosely based on daisy NCK files.

		return this.getNavPoint(element, null, 0);
	},

	getNavPoint: function(element, parent, level) 
	{
		// A nav point is an element tagged with role=x-nav-point; containing one label and one list
		// however if the list is empty, then the label can stand on its own for the whole point.

		var label = null;
		var subtree = [];
		var node = {};

		// Keep the high tide mark for how deep in the tree we are.
		if (this.rightMostInLevel.length <= level)
			this.rightMostInLevel.push(null);

		var role = this.attrNS(element, 'role', this.options.ttmlMetaNamespace);
		switch (role)
		{
			case "x-nav-label": // Degenerate form.
				label = this.getNavLabel(element);
				break;
			case "x-nav-point": // Full form contains a label and a list.
				PlayerFramework.forEach(this.children(element), PlayerFramework.proxy(this, function (childElement)
				{
					var childRole = this.attrNS(childElement, 'role', this.options.ttmlMetaNamespace);
					switch (childRole)
					{ 
						// Should only be one of each. but allow last to win.
						case "x-nav-label": // Contains text, and use its timing.
							label = this.getNavLabel(childElement);
							break;
						case "x-nav-list": // Contains either a list of navPoints.
							subtree = this.getNavList(childElement, node, level + 1);
							break;
						default:
							break;
					}
				}));
				break;
			default:
				break; // Ignore anything else.
		}

		if (label != null)
		{
			node.text = label.text;
			node.startTime = new Number(label.startTime) / 1000 + 0.01;
			node.endTime = new Number(label.endTime) / 1000;
			node.parent = parent;
			node.left = this.rightMostInLevel[level]; // Could be null.
			node.right = null;
			node.children = subtree;

			if (this.rightMostInLevel[level] != null)
			{
				this.rightMostInLevel[level].right = node;
			}
			
			this.rightMostInLevel[level] = node;

			return node;
		}
		else
		{
			return null;
		}
	},

	getNavLabel: function(element) 
	{
		// A nav label is just text, but we use its timing to create an interval into the media for navigation.

		var role = this.attrNS(element, 'role', this.options.ttmlMetaNamespace);
		if (role != null && !PlayerFramework.first(role, function(r) { return r === "x-nav-label"; } )) 
		{
			return {
				text: element.innerHTML,
				startTime: this.getAttr(element, "data-time-start"),
				endTime: this.getAttr(element, "data-time-end")
			}
		}
	},

	getNavList: function(element, node, level)
	{
		// A navList is supposed to be a list of navPoints, but a navPoint can be a degenerate navLabel

		var list = [];
		var role = this.attrNS(element, 'role', this.options.ttmlMetaNamespace);

		if (role != null && !PlayerFramework.first(role, function(r) { return r === "x-nav-list"; } ))
		{
			PlayerFramework.forEach(this.children(element), function (childElement)
			{
				var item = getNavPoint(childElement, node, level);
				if (item != null)
				{
					list.push(item);
				}
			});
		}

		return list;
	},

	translateMarkup: function(element, tick)
	{
		// Convert elements in TTML to their equivalent in HTML.

		var translation = undefined;
		var name = this.getTagNameEquivalent(element);
		var htmlName = "";
		var htmlClass = "";
		var htmlAttrs = {};

		if (element && this.isTemporallyActive(element, tick))
		{
			switch (name) {
				case "tt:region":
				case "tt:tt": // We get this if there is no region.
					htmlClass = "cue "; // To simulate the ::cue selector.
					htmlName = "div";
					break;
				case "tt:body":
				case "tt:div":
					htmlName = "div";
					break;
				case "tt:p":
					htmlName = "p";
					break;
				case "tt:span":
					htmlName = "span";
					break;
				case "tt:br":
					htmlName = "br";
					break;
				case "":
					break;
				default:
					htmlName = name;
					
					PlayerFramework.forEach(PlayerFramework.convertNodeListToArray(element.attributes), function (pair)
					{
						htmlAttrs[pair.name] = pair.value;
					});

					break;
			}
			var role = this.attrNS(element, 'role', this.options.ttmlMetaNamespace);
			if (role) htmlClass += ((role) + ' ');

			var classAttr = this.attrNS(element, 'class', 'http://www.w3.org/1999/xhtml');
			if (classAttr) htmlClass += ((classAttr) + ' ');

			// Hack until display:ruby on other elements works.
			if (role == "x-ruby") htmlName = ("ruby");
			if (role == "x-rubybase") htmlName = ("rb");
			if (role == "x-rubytext") htmlName = ("rt");

			// Convert image based captions here; and move the text into its alt.
			// If I could get inline CSS to work div's then this would be set as style. 
			var image = this.getAttr(element, 'image');
			if (image != null)
				htmlName = "img"

			if (htmlName != "")
			{
				translation = PlayerFramework.createElement(null,
				[
					htmlName,
					{
						"class": htmlClass.replace(/^\s+|\s+$/g, "") || null
					}
				]);

				// Move ID's over. Use trackIdPrefix to ensure there are no name clases on id's already in target doc.
				var id = this.attrNS(element, 'id', this.options.xmlNamespace);
				
				// If (id) translation.attr('id', this.options.trackIdPrefix + id);
				if (id) translation.setAttribute('id', this.options.trackIdPrefix + id);

				// Copy style from element over to html, translating into CSS as we go
				this.translateStyle(element, translation, tick);

				// If we are copying over html elements, then copy any attributes too.
				for (attr in htmlAttrs)
				{
					translation.setAttribute(attr, htmlAttrs[attr]);
				}

				if (image != null)
				{
					translation.setAttribute("src", image);
					translation.setAttribute("alt", element.innerHTML);
				}
			}
		}

		return translation;
	},

	translateStyle: function(element, htmlElement, tick) 
	{
		// Convert from TTML style names to CSS.

		// Clone of the base style set.
		var computedStyleSet = {};

		// Iterate over the computed styleset and copy into computed style set.
		var styles = this.StyleSetCache[this.getAttr(element, "__styleSet__")];
		for (var name in styles)
		{
			computedStyleSet[name] = styles[name];
		}

		PlayerFramework.forEach(this.getElementsByTagNameNS(element, this.options.ttmlNamespace, 'set'), PlayerFramework.proxy(this, function (childElement)
		{
			if (this.isTemporallyActive(childElement, tick))
				this.applyInlineStyles(computedStyleSet, childElement);
		}));

		// Apply properties.
		for (var name in computedStyleSet)
		{
			this.convertTtmlToCss(htmlElement, name, computedStyleSet[name]);
		}
	},

	convertTtmlToCss: function(obj, style, value)
	{
		// Convert TTML style into CSS equivalent. Mostly just the name change used in js, but some are slightly different.

		var cssStyle;

		switch (style)
		{
			case "origin":
				var coords = value.split(/\s/); // Get the individual components.
				cssStyle =
				{
					position: "absolute",
					left: coords[0],
					top: coords[1]
				};
				break;
			case "extent":
				var coords = value.split(/\s/); // Get the individual components.
				cssStyle = 
				{
					width: coords[0],
					height: coords[1]
				};
				break;
			case "displayAlign":
				cssStyle =
				{
					textAlign: value
				};
				break;
			case "wrapOption":
				cssStyle =
				{
					whiteSpace: value == "nowrap" ? "nowrap" : "normal"
				};
				break;
			default:
				cssStyle = {};
				cssStyle[style] = value;
				break;
		}

		this.setStyle(obj, cssStyle);

		return obj;
	},

	applyStyling: function() 
	{
		// Apply style to every element in the body.

		PlayerFramework.forEach(this.root.getElementsByTagName("*"), PlayerFramework.proxy(this, function (element)
		{
				this.applyStyle(element);
		}));
	},

	applyStyle: function(element)
	{
		// Apply styles in the correct order to element.

		var styleSet = {};

		// Find all the applicable styles and set them as properties on styleSet. 
		this.applyStylesheet(styleSet, element);
		this.applyInlineStyles(styleSet, element);

		// Record the applied set to the element
		this.StyleSetCache[this.styleSetId] = styleSet;
		element.setAttribute("__styleSet__", this.styleSetId++);
	},

	applyInlineStyles: function(styleSet, element)
	{
		// Apply style attributes into styleset.
		
		PlayerFramework.forEach(PlayerFramework.convertNodeListToArray(element.attributes), PlayerFramework.proxy(this, function (attribute)
		{
			if (attribute.namespaceURI == this.options.ttmlStyleNamespace)
			{
				styleSet[this.getLocalTagName(attribute)] = attribute.nodeValue;
			}

			if (attribute.namespaceURI == this.options.smpteNamespace && this.getLocalTagName(this) == "backgroundImage")
			{
				var imageId = attribute.nodeValue;

				if (imageId.indexOf("#") == 0)
					element.setAttribute("image", "data:image/png;base64," + this.ImageCache[imageId]);
				else
					element.setAttribute("image", imageId);
			}
		}));
	},

	applyStylesheet: function(styleSet, element) 
	{
		// For each style id on element, find the corresponding style element 
		// and then apply the stylesheet into styleset; this recurses over the tree of referenced styles.

		if (!this.hasAttr(element, 'style'))
			return;

		var isStyle = this.isTagNS(element, "style", this.options.ttmlNamespace); // Detect if we are referencing style from a style.
		var ids = this.getAttr(element, 'style').split(/\s/); // Find all the style ID references.
			
		PlayerFramework.forEach(ids, PlayerFramework.proxy(this, function (styleId) 
		{
			// Find all the style elements in the TTML namespace.
			PlayerFramework.forEach(this.getElementsByTagNameNS(this.head, this.options.ttmlNamespace, 'style'), PlayerFramework.proxy(this, function (headChildElement)
			{
				if (this.attrNS(headChildElement, 'id', this.options.xmlNamespace) == styleId)
				{
					this.applyStylesheet(styleSet, headChildElement);

					// If the element is region, do nested styles (note regions can only be referenced from elements in the body).
					if (!isStyle && this.isTagNS(headChildElement, "region", this.options.ttmlNamespace))
					{
						//this.getElementsByTagNameNS(element, this.options.ttmlNamespace, 'style').each(function () {
						PlayerFramework.forEach(this.getElementsByTagNameNS(headChildElement, this.options.ttmlNamespace, 'style'), PlayerFramework.proxy(this, function (childElement)
						{
							this.applyStylesheet(styleSet, childElement);
						}));
					}

					// Do inline styles.
					this.applyInlineStyles(styleSet, headChildElement);
				}
			}));
		}));
	},

	isInRegion: function(element, regionId) 
	{
		// A content element is associated with a region according to the following ordered rules, 
		// where the first rule satisfied is used and remaining rules are skipped:

		// Quick test: Out of normal order, but makes following rules simpler.
		if (regionId == "" || regionId == undefined) return this.usingDefaultRegion;

		// 1. If the element specifies a region attribute, then the element is
		// associated with the region referenced by that attribute;
		if (this.getAttr(element, 'region') == regionId) return true;

		// 2. If some ancestor of that element specifies a region attribute, then the element is 
		// associated with the region referenced by the most immediate ancestor that specifies 
		// this attribute;
		var ancestor = element.parentNode;
		while (ancestor != null && ancestor.nodeType == this.nodeType.ELEMENT_NODE) 
		{
			var r = this.getAttr(ancestor, "region");
			if (r)
				return r == regionId;
			ancestor = ancestor.parentNode;
		}

		// 3. If the element contains a descendant element that specifies a region attribute, 
		//	then the element is associated with the region referenced by that attribute;
		var nodes = element.getElementsByTagName('*');
		for (var n = 0, len = nodes.length; n < len; n++)
		{
			if ((this.getAttr(nodes[n], 'region') == regionId) && nodes[n].namespaceURI == this.options.ttmlNamespace)
				// Can't cache this result, because a node may contain more than one region.
				return true;
		}

		// 4. If a default region was implied (due to the absence of any region element), 
		//	then the element is associated with the default region;
		if (this.usingDefaultRegion)
			return regionId == "";

		// 5. The element is not associated with any region.
		return false;
	},

	loadSMPTEImages: function()
	{
		this.ImageCache = {};
		var images = this.getElementsByTagNameNS(this.root, this.options.smpteNamespace, 'image');

		PlayerFramework.forEach(images, PlayerFramework.proxy(this, function (image)
		{
			var id = this.attrNS(image, 'id', this.options.xmlNamespace);
			if (id != null)
				this.ImageCache["#" + id] = image.innerHTML;
		}));
	},

	getTagNameEquivalent: function(element) 
	{
		var tag = this.getLocalTagName(element);
		switch (element.namespaceURI)
		{
			case 'http://www.w3.org/1999/xhtml':
				return tag;
			case 'http://www.w3.org/ns/ttml':
				return 'tt:' + tag;
			case 'http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt':
				return 'smpte:' + tag;
			default:
				return "";
		}
	},

	prune: function(element, regionId, tick)
	{
		/// Convert the element if it is in the region, then recurse into its contents.
		/// If it ends up with no children, then we dont add it to the region.

		var clone = undefined;
		
		if (this.isInRegion(element, regionId))
		{
			clone = this.translateMarkup(element, tick);

			if (!clone)
				return clone;

			PlayerFramework.forEach(element.childNodes, PlayerFramework.proxy(this, function (childElement)
			{
				if (childElement.nodeType != this.nodeType.COMMENT_NODE)
				{
					if (childElement.nodeType == this.nodeType.TEXT_NODE)
					{
						clone.appendChild(document.createTextNode(childElement.data));
					}
					else
					{
						var prunedChildElement = this.prune(childElement, regionId, tick);

						if (prunedChildElement)
							clone.appendChild(prunedChildElement);
					}
				}
			}));
		}

		return clone;
	},

	getLocalTagName: function(element) 
	{
		if (element.localName) // W3C
			return element.localName;
		else
			return element.baseName;
	},

	getElementsByTagNameNS: function(element, namespace, name) 
	{
		var result = [];
		var nodes = element.getElementsByTagName('*');

		for (var i = 0; i < nodes.length; i++)
		{
			if (this.getLocalTagName(nodes[i]) == name && nodes[i].namespaceURI == namespace)
			{
				result.push((nodes[i]));
			}
		}

		return result; 
	},

	prefixNS: function(element, ns)
	{
		// Find the closest ancestor that attests an xmlns with the required value, and return the prefix it used.

		if (ns == 'http://www.w3.org/XML/1998/namespace') return "xml:"
		if (element == null || element == undefined || element.nodeType == this.nodeType.DOCUMENT_NODE)
			return "";
			
		var attributes = element.attributes;
		for (var i = 0; i < attributes.length; i++)
		{
			var attribute = attributes[i];
				
			if ((attribute.name.indexOf("xmlns") == 0) && attribute.value == ns)
			{
				if (attribute.localName) return attribute.localName + ":";
				if (attribute.baseName) return attribute.baseName + ":";
			}
		}
	
		return this.prefixNS(element.parentNode, ns);
	},

	attrNS: function(element, name, ns, value)
	{
		var prefix = ns ? this.prefixNS(element, ns) : "";

		return element.getAttribute(prefix + name);
	},

	hasAttr: function(element, name)
	{
		// Test for the existence of an attribute.

		return this.getAttr(element, name) != undefined;
	},

	getAttr: function(element, name)
	{
		// Return an attribute.

		if (element.nodeType != this.nodeType.ELEMENT_NODE)
			return undefined;

		var val = element.getAttribute(name);

		// Bug in Encoder moves unprefixed attributes
		if (val == undefined && (element.prefix != null && element.prefix != ""))
			val = element.getAttribute(element.prefix + ":" + name);

		return val;
	},

	isTagNS: function(element, tag, namespace)
	{
		// Check an elements against a tag name in a namespace.

		var match = false;

		if (element.localName) // W3C
			match = (tag == element.localName);
		else
			match = (tag == element.baseName);

		match &= (element.namespaceURI == namespace);
		return (match);
	},

	children: function(element)
	{
		var childElement = element.firstChild;
		var children = [];

		for ( ; childElement; childElement = childElement.nextSibling)
		{
			if (childElement.nodeType === this.nodeType.ELEMENT_NODE)
				children.push(childElement);
		}

		return children;
	},

	style: function(styles)
	{
		var style = "";

		for(var name in styles)
		{
			style += name + ": " + styles[name] + "; ";
		}

		return style;
	},

	setStyle: function(element, styles)
	{
		for(var name in styles)
		{
			element.style[name] = styles[name];
		}
	}
});
﻿PlayerFramework.Plugins.VideoElementMediaPlugin = PlayerFramework.Plugins.VideoElementMediaPluginBase.extend(
{
	init: function(player, options, playerOptions)
	{
		///	<summary>
		///		Initializes the VideoMediaPlugin that injects and wraps the HTML5 video element.
		///	</summary>
		///	<param name="player" type="Object">
		///		The Player object.
		///	</param>
		///	<param name="options" type="Object">
		///		The options for the VideoElementMediaPlugin.
		///	</param>
		///	<param name="playerOptions" type="Object">
		///		The merged player options for the current media source.
		///	</param>
		///	<returns type="VideoElementMediaPlugin" />

		this._super(player, options, playerOptions);

		this.render();
	},

	render: function()
	{
		///	<summary>
		///		Creates and sets the MediaPlugin's element given the plugin and player options
		///		and a specific template.
		///	</summary>

		this.element = PlayerFramework.createElement(null,
		[
			"video",
			{
				"class": this.options["class"],
				width: this.playerOptions.width,
				height: this.playerOptions.height,
				controls: "controls", /* Controls must be turned on initially for compatibility with some browsers. */
				poster: this.playerOptions.poster || null,
				autoplay: this.playerOptions.autoplay || null
			}
		]);

		for (var i = 0; i < this.playerOptions.sources.length; i++)
		{
			var source = this.playerOptions.sources[i];
			if (this.canPlayType(source.type))
			{
				PlayerFramework.createElement(this.element,
				[
					"source",
					source
				]);
			}
		}
	}
});
;
function trackNavClick(menuItem) {
          try {
              wa_trackNavClick(menuItem);
          }
          catch (ex) { return false; }
      }

function trackSearchClick(menuItem) {
    try {
        wa_trackSearchClick(menuItem);
    }
    catch (ex) { return false; }
}

function trackNewsFeatures(action, label) {
    try {
        wa_trackNewsFeatures(action, label);
    }
    catch (ex) { return false; }
}

;

function MyGarageOptions() {
    this.compareUrl;
    this.compareNowText;
    this.compareOthersText;
    this.savedAdText;
    this.saveAdTooltipText;
    this.removedAdText;
    this.removeAdTooltipText;
    this.signinUrl;
    this.signinText;
    this.registerText;
    this.closeText;
    this.myGarageHeader;
    this.errorAdsExceedsLimit;
    this.errorNotInSameCategory;
    this.enableCompareTool;
    this.compareText;
    this.comparedText;
    this.saveText;
    this.savedText;
    this.toasterComparedText;
    this.adsExceedsLimitUrl;
    this.saveLoginReturnUrl;
};

function MyGarageModel(options) {
    var _self = this;
    this.options = options;

    this.compareUrl = this.options.compareUrl;
    this.compareNowText = this.options.compareNowText;
    this.compareOthersText = this.options.compareOthersText;
    this.savedAdText = this.options.savedAdText;
    this.saveAdTooltipText = this.options.saveAdTooltipText;
    this.removedAdText = this.options.removedAdText;
    this.removeAdTooltipText = this.options.removeAdTooltipText;
    this.signinUrl = this.options.signinUrl;
    this.signinText = this.options.signinText;
    this.registerText = this.options.registerText;
    this.closeText = this.options.closeText;
    this.myGarageHeader = this.options.myGarageHeader;
    this.errorAdsExceedsLimit = this.options.errorAdsExceedsLimit;
    this.errorNotInSameCategory = this.options.errorNotInSameCategory;
    this.enableCompareTool = this.options.enableCompareTool;
    this.compareText = this.options.compareText;
    this.comparedText = this.options.comparedText;
    this.saveText = this.options.saveText;
    this.savedText = this.options.savedText;
    this.toasterComparedText = this.options.toasterComparedText;
    this.adsExceedsLimitUrl = this.options.adsExceedsLimitUrl;
    this.saveLoginReturnUrl = this.options.saveLoginReturnUrl;

    this.timeoutVar;

    this.SaveAdToMG = function (sourceId, foreignId, settings) {
        settings = $.extend(settings, {
            sourceId: sourceId,
            foreignId: foreignId
        });

        if (settings.fromCompareWindow === undefined)
            settings.fromCompareWindow = false;

        if (settings.controlId !== undefined && settings.controlId != '')
            settings.control = $("#" + settings.controlId);

        _self.hideQTip(settings);
        _self.trackSaveAdToMG();

        var now = new Date();
        var currentTime = now.getFullYear() + '-' + (now.getMonth() + 1) + '-' + now.getDate() + ' ' + now.getHours() + ':' + now.getMinutes() + ":" + now.getSeconds();

        var self = this;
        var postData = JSON.stringify({
            sourceId: sourceId,
            foreignId: foreignId,
            userSavedTime: currentTime
        });

        $.ajax({
            url: "/WebServices/AutomotiveProfileService.svc/SaveAdById",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'POST',
            data: postData,
            success: function (data) {
                self.SaveAdToMG_OnSuccess(data, settings);
            },
            error: function () {
                self.AdOperation_OnError();
            },
        });
    };

    this.SaveAdToMG_OnSuccess = function (response, settings) {
        var results = response.d;
        if (results.Success) {
            if (_self.enableCompareTool) {
                _self.ChangeToSaved(settings.sourceId, settings.foreignId);

                _self.myGarageHeader.updateHeaderSVCounts(results.SavedAdCount);

                dl_trackSaveToMyGarage(settings.ordinalPosition, settings.listKey);

                if (typeof settings.successCallback == "function") {
                    settings.successCallback();
                }
            } else {
                var controlParent = settings.control.parents('.at_result');
                var overlayId = controlParent.attr("overlayId");
                var overlayDiv = $("div#" + overlayId);
                var span = overlayDiv.find("span");
                var link = overlayDiv.find("a#link");
                var close = overlayDiv.find("a#close");
                close.hide();

                var starLinks = $("div[sourceid='" + settings.sourceId + "'][foreignid='" + settings.foreignId + "'] a[group='starLink']");

                starLinks.attr("class", "addToGarage resultItemStar_saved");
                var divAddToMyGarage = starLinks.find("#divAddToMyGarage");
                var adStatus = divAddToMyGarage.attr("adStatus");
                _self.trackSaveToMyGarage(adStatus);

                divAddToMyGarage.removeClass().addClass("starGarage-on at_sprite");

                span.text(_self.savedAdText);
                link.attr("href", "javascript:myGarageModel.CompareAdInMG(" + settings.sourceId + ", '" + settings.foreignId + "', { controlId: '" + settings.control.attr("id") + "', forceRedirect: false });");
                link.text(_self.compareNowText);
                link.show();
                overlayDiv.show();
                _self.timeoutVar = setTimeout(function () { overlayDiv.hide(); }, 3000);

                _self.myGarageHeader.updateHeaderSVCounts(results.SavedAdCount);

                starLinks.off("mouseenter");
                starLinks.off("mouseleave");
                starLinks.off("click");

                starLinks.on("click", function () { _self.savedStarClick($(this)); });
                starLinks.on("mouseenter", function () { _self.showRemoveAdTooltip($(this)); });

                dl_trackSaveToMyGarage(settings.ordinalPosition, settings.listKey);
            }
        }
        else {
            if (results.ErrorCode == 1)
                if (_self.enableCompareTool) {
                    createCookie('TrackSaveToGarageAfterSignInOrdinalPosition', settings.ordinalPosition);
                    createCookie('TrackSaveToGarageAfterSignInListKey', settings.listKey);
                    signInOutControl.doLoginAndSave(settings);
                } else {
                    console.log("You must log in to save vehicle!");
                }
            else
                console.log("Failed to save vehicle!");
        }
    };

    this.RemoveAdFromMG = function (sourceId, foreignId, settings) {
        settings = $.extend(settings, {
            sourceId: sourceId,
            foreignId: foreignId
        });

        if (settings.fromCompareWindow === undefined)
            settings.fromCompareWindow = false;

        if (settings.controlId !== undefined && settings.controlId != '')
            settings.control = $("#" + settings.controlId);

        _self.hideQTip(settings);
        _self.trackRemoveAdFromMG();

        var self = this;
        var postData = JSON.stringify({
            sourceId: sourceId,
            foreignId: foreignId,
        });

        $.ajax({
            url: "/WebServices/AutomotiveProfileService.svc/RemoveAd",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'POST',
            data: postData,
            success: function (data) {
                self.RemoveAdFromMG_OnSuccess(data, settings);
            },
            error: function () {
                self.AdOperation_OnError();
            },
        });

    };

    this.RemoveAdFromMG_OnSuccess = function (response, settings) {
        var results = response.d;
        if (results.Success) {
            if (_self.enableCompareTool) {
                _self.ChangeToSave(settings.sourceId, settings.foreignId);

                _self.myGarageHeader.updateHeaderSVCounts(results.SavedAdCount);

                dl_trackRemoveFromMyGarage(settings.ordinalPosition, settings.listKey);

                if (typeof settings.successCallback == "function") {
                    settings.successCallback();
                }
            } else {
                var starLinks = $("div[sourceid='" + settings.sourceId + "'][foreignid='" + settings.foreignId + "'] a[group='starLink']");

                starLinks.attr("class", "addToGarage resultItemStar_not_saved");
                starLinks.find("#divAddToMyGarage").removeClass().addClass("starGarage-off at_sprite");

                var controlParent = settings.control.parents('.at_result');
                var overlayId = controlParent.attr("overlayId");
                var overlayDiv = $("div#" + overlayId);
                var span = overlayDiv.find("span");
                var link = overlayDiv.find("a#link");

                var close = overlayDiv.find("a#close");
                close.hide();

                span.text(_self.removedAdText);
                link.attr("href", _self.compareUrl);
                link.text(_self.compareOthersText);
                link.show();
                overlayDiv.show();
                _self.timeoutVar = setTimeout(function () { overlayDiv.hide(); }, 3000);

                _self.myGarageHeader.updateHeaderSVCounts(results.SavedAdCount);

                starLinks.off("mouseenter");
                starLinks.off("mouseleave");
                starLinks.off("click");

                starLinks.on("mouseenter", function () { _self.showHoverStar($(this)); _self.showSaveAdTooltip($(this)); });

                starLinks.on("mouseleave", function () { _self.showOffStar($(this)); });

                starLinks.on("click", function () { _self.notSavedStarClick($(this)); });

                dl_trackRemoveFromMyGarage(settings.ordinalPosition, settings.listKey);
            }
        }
        else {
            console.log("Failed to deselect vehicle!");
        }
    };

    this.CompareAdInMG = function (sourceId, foreignId, settings) {
        settings = $.extend(settings, {
            sourceId: sourceId,
            foreignId: foreignId
        });

        if (settings.fromCompareWindow === undefined)
            settings.fromCompareWindow = false;

        if (settings.controlId !== undefined && settings.controlId != '')
            settings.control = $("#" + settings.controlId);

        _self.hideQTip(settings);
        _self.trackCompareAdInMG();

        var self = this;
        var postData = JSON.stringify({
            sourceId: sourceId,
            foreignId: foreignId,
        });

        $.ajax({
            url: "/WebServices/AutomotiveProfileService.svc/AddAdToCompare",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'POST',
            data: postData,
            success: function (data) {
                self.CompareAdInMG_OnSuccess(data, settings);
            },
            error: function () {
                self.AdOperation_OnError();
            },
        });
    };

    this.CompareAdInMG_OnSuccess = function (response, settings) {
        var results = response.d;
        if (results.Success) {
            if (_self.enableCompareTool) {
                _self.updateCompareToolCount(results.AdToCompareCount);
		
                _self.ChangeToCompared(settings.sourceId, settings.foreignId);

                if (settings.fromCompareWindow != true && (settings.forceRedirect === undefined || settings.forceRedirect === false)) {
                    _self.showToastr();
                }

                if (settings.control != null) {
                    var divResult = settings.control.closest(".at_result");
                    var ordinalPosition = $(divResult).attr('data-list-numerical-position');
                    var listKey = $(divResult).attr('data-list-key');

                    dl_trackAddAdToCompare(ordinalPosition, listKey);
                }

                if (typeof settings.successCallback == "function") {
                    settings.successCallback();
                }
            }

            if (!_self.enableCompareTool || settings.forceRedirect) {
                window.location = _self.compareUrl;
            }
        } else {

            if (_self.enableCompareTool)
            {
                // Open adsExceedsLimit Colorbox Modal
                var isIPadBrowser = navigator.userAgent != null && navigator.userAgent.toLowerCase().indexOf('ipad') >= 0;

                if (isIPadBrowser)
                {
                    switch (results.ErrorCode)
                    {
                        case 7:
                            showColorboxModalCustom("adsExceedsLimit", 765, 490, _self.adsExceedsLimitUrl + '?srcid=' + settings.sourceId + '&frnid=' + settings.foreignId);
                            break;
                        case 8:
                            _self.showMessage(_self.errorNotInSameCategory);
                            break;
                    }
                }
                else
                {
                    switch (results.ErrorCode)
                    {
                        case 7:
                            showColorboxModalCustom("adsExceedsLimit", 740, 490, _self.adsExceedsLimitUrl + '?srcid=' + settings.sourceId + '&frnid=' + settings.foreignId);
                            break;
                        case 8:
                            _self.showMessage(_self.errorNotInSameCategory);
                            break;
                    }
                }

            } else {
                
                if (results.ErrorCode == 7 || results.ErrorCode == 8) {
                    var overlayId = settings.control.attr("overlayId");
                    var overlayDiv = $("div#" + overlayId);
                    var span = overlayDiv.find("span");
                    var close = overlayDiv.find("a#close");
                    var link = overlayDiv.find("a#link");
                    link.hide();

                    if (results.ErrorCode == 7)
                        span.text(_self.errorAdsExceedsLimit);
                    else
                        span.text(_self.errorNotInSameCategory);

                    if (_self.timeoutVar != null)
                        clearTimeout(_self.timeoutVar);

                    close.on("click", function () { overlayDiv.hide(); });
                    close.text(_self.closeText);
                    close.show();                
                }
                else
                    console.log("Failed to compare vehicle!");
            }
        }
    };

    this.RemoveAdFromCompare = function (sourceId, foreignId, settings) {
        settings = $.extend(settings, {
            sourceId: sourceId,
            foreignId: foreignId
        });

        if (settings.fromCompareWindow === undefined)
            settings.fromCompareWindow = false;

        if (settings.controlId !== undefined && settings.controlId != '')
            settings.control = $("#" + settings.controlId);

        _self.hideQTip(settings);
        _self.trackRemoveAdFromCompare();

        var self = this;
        var postData = JSON.stringify({
            sourceId: sourceId,
            foreignId: foreignId,
        });

        $.ajax({
            url: "/WebServices/AutomotiveProfileService.svc/RemoveAdToCompare",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'POST',
            data: postData,
            success: function (data) {
                self.RemoveAdFromCompare_OnSuccess(data, settings);
            },
            error: function () {
                self.AdOperation_OnError();
            },
        });
    };

    this.RemoveAdFromCompare_OnSuccess = function (response, settings) {
        var results = response.d;
        if (results.Success) {
            _self.updateCompareToolCount(results.AdToCompareCount);

            _self.ChangeToCompare(settings.sourceId, settings.foreignId);

            if (settings.control != null) {
                var divResult = settings.control.closest(".at_result");
                var ordinalPosition = $(divResult).attr('data-list-numerical-position');
                var listKey = $(divResult).attr('data-list-key');

                dl_trackRemoveAdFromCompare(ordinalPosition, listKey);
            }

            if (typeof settings.successCallback == "function") {
                settings.successCallback();
            }
        }
    };

    this.UpdateComparedSaved = function () {
        if (navigator.userAgent.indexOf("Chrome/") == -1 && navigator.userAgent.indexOf("Safari/") > -1) 
            return;

        if (!_self.enableCompareTool)
            return;

        var self = this;

        $.ajax({
            url: "/WebServices/AutomotiveProfileService.svc/GetComparedSavedList",
            contentType: "application/json; charset=utf-8",
            type: 'POST',
            dataType: "json",
            success: function (data) {
                self.UpdateComparedSaved_OnSuccess(data);
            }
        });
    };

    this.UpdateComparedSaved_OnSuccess = function (response) {
        var results = response.d;
        _self.ResetAllToSave();
        _self.ResetAllToCompare();

        if (results != "") {
            _self.ChangeResultToSaved(results);
            _self.ChangeResultToCompared(results);
        }
    };

    this.ResetAllToSave = function () {
        $('.at_result').each(function (index, item) {
            var sourceId = $(item).attr('sourceId');
            var foreignId = $(item).attr('foreignId');

            _self.ChangeToSave(sourceId, foreignId);
        });
    };

    this.ChangeToSave = function (sourceId, foreignId) {
        $("div[sourceid='" + sourceId + "'][foreignid='" + foreignId + "']").each(function (index, item) {
            var saveToMyGarageArea = $('.saveToMyGarageArea', item);
            saveToMyGarageArea.removeClass('saved');
            saveToMyGarageArea.addClass('save');

            var divResult = saveToMyGarageArea.closest(".at_result");
            var ordinalPosition = $(divResult).attr('data-list-numerical-position');

            var divResultList = saveToMyGarageArea.closest(".at_resultList");
            var listKey = $(divResultList).attr('data-list-key');

            var saveToMyGarageAreaLink = $('a', saveToMyGarageArea);
            saveToMyGarageArea.attr("onclick", "myGarageModel.SaveAdToMG(" + sourceId + ", '" + foreignId + "', { controlId: '" + saveToMyGarageAreaLink.attr("id") + "', ordinalPosition: " + ordinalPosition + ", listKey: '" + listKey + "' });");
            saveToMyGarageAreaLink.text(_self.saveText);
        });
    };

    this.ChangeToSaved = function (sourceId, foreignId) {
        $("div[sourceid='" + sourceId + "'][foreignid='" + foreignId + "']").each(function (index, item) {
            var saveToMyGarageArea = $('.saveToMyGarageArea', item);
            saveToMyGarageArea.removeClass('save');
            saveToMyGarageArea.addClass('saved');

            var divResult = saveToMyGarageArea.closest(".at_result");
            var ordinalPosition = $(divResult).attr('data-list-numerical-position');
            var listKey = $(divResult).attr('data-list-key');

            var saveToMyGarageAreaLink = $('a', saveToMyGarageArea);

            if ((ordinalPosition !== undefined && ordinalPosition !== null && ordinalPosition.length > 0) && (listKey !== undefined && listKey !== null & listKey.length > 0))
                saveToMyGarageArea.attr("onclick", "myGarageModel.RemoveAdFromMG(" + sourceId + ", '" + foreignId + "', { controlId: '" + saveToMyGarageAreaLink.attr("id") + "', ordinalPosition: " + ordinalPosition + ", listKey: '" + listKey + "' });");
            else
                saveToMyGarageArea.attr("onclick", "myGarageModel.RemoveAdFromMG(" + sourceId + ", '" + foreignId + "', { controlId: '" + saveToMyGarageAreaLink.attr("id") + "' });");

            saveToMyGarageAreaLink.text(_self.savedText);
        });
    };

    this.ChangeResultToSaved = function (results) {
        var savedString = results.split("|")[1];
        var savedCompositeKeys = _self.getCompositeKeys(savedString);
        _self.myGarageHeader.updateHeaderSVCounts(savedCompositeKeys.length);
        for (var savedIndex = 0; savedIndex < savedCompositeKeys.length; savedIndex++) {
            var savedItem = savedCompositeKeys[savedIndex];

            _self.ChangeToSaved(savedItem.sourceId, savedItem.foreignId);
        }
    };

    this.ResetAllToCompare = function () {
        $('.at_result').each(function (index, item) {
            var sourceId = $(item).attr('sourceId');
            var foreignId = $(item).attr('foreignId');

            _self.ChangeToCompare(sourceId, foreignId);
        });
    };

    this.ChangeToCompare = function (sourceId, foreignId) {
        $("div[sourceid='" + sourceId + "'][foreignid='" + foreignId + "']").each(function (index, item) {
            var compareArea = $('.compareArea', item);
            compareArea.removeClass('compared');
            compareArea.addClass('compare');

            var compareAreaLink = $('a', compareArea);
            compareArea.attr("onclick", "myGarageModel.CompareAdInMG(" + sourceId + ", '" + foreignId + "', { controlId: '" + compareAreaLink.attr("id") + "' });");
            compareAreaLink.text(_self.compareText);
        });
    };

    this.ChangeToCompared = function (sourceId, foreignId) {
        $("div[sourceid='" + sourceId + "'][foreignid='" + foreignId + "']").each(function (index, item) {
            var compareArea = $('.compareArea', item);
            compareArea.removeClass('compare');
            compareArea.addClass('compared');

            var compareAreaLink = $('a', compareArea);
            compareArea.attr("onclick", "myGarageModel.RemoveAdFromCompare(" + sourceId + ", '" + foreignId + "', { controlId: '" + compareAreaLink.attr("id") + "' });");
            compareAreaLink.text(_self.comparedText);
        });
    };

    this.ChangeResultToCompared = function (results) {
        var comparedString = results.split("|")[0];
        var comparedCompositeKeys = _self.getCompositeKeys(comparedString);
        _self.updateCompareToolCount(comparedCompositeKeys.length);
        for (var comparedIndex = 0; comparedIndex < comparedCompositeKeys.length; comparedIndex++) {
            var comparedItem = comparedCompositeKeys[comparedIndex];

            _self.ChangeToCompared(comparedItem.sourceId, comparedItem.foreignId);
        }
    };

    this.getCompositeKeys = function (resultAds) {
        var compositeKeys = [];
        var adIdArray = resultAds.split(",");
        for (var index = 0; index < adIdArray.length; index++) {
            if (adIdArray[index] == "")
                continue;

            compositeKeys.push({
                sourceId: adIdArray[index].split("-")[0],
                foreignId: adIdArray[index].split("-")[1]
            });
        }
        return compositeKeys;
    };

    this.notSavedStarClick = function (control) {
        var controlParent = control.parents('.at_result');
        var sourceId = parseInt(controlParent.attr("sourceid"));
        var foreignId = controlParent.attr("foreignid");
        _self.SaveAdToMG(sourceId, foreignId, { controlId: control.attr('id') });
    };

    this.savedStarClick = function (control) {
        var controlParent = control.parents('.at_result');
        var sourceId = parseInt(controlParent.attr("sourceid"));
        var foreignId = controlParent.attr("foreignid");
        _self.RemoveAdFromMG(sourceId, foreignId, { controlId: control.attr('id') });
    };

    this.notLoggindinStarClick = function (control) {
        var controlParent = control.parents('.at_result');
        var sourceId = parseInt(controlParent.attr("sourceid"));
        var foreignId = controlParent.attr("foreignid");
        var overlayId = controlParent.attr("overlayId");

        var overlayDiv = $("div#" + overlayId);
        var span = overlayDiv.find("span");
        var link = overlayDiv.find("a#link");
        //var close = overlayDiv.find("a#close");
        span.text(_self.registerText);

        link.attr("href", _self.signinUrl + "%26upac%3Daddv" + "%26srcID%3D" + sourceId + "%26frnID%3D" + foreignId);

        link.text(_self.signinText);
        //close.on("click", function () { overlayDiv.hide(); });
        //close.text(_self.closeText);
        overlayDiv.show();
        setTimeout(function () { overlayDiv.hide(); }, 3000);
    };

    this.updateCompareToolCount = function (count) {
        $.each($('.compareNumber'), function (index, item) {
            $(item).text(count);
        });
    };

    this.showRemoveAdTooltip = function (control) {
        control.attr("title", _self.removeAdTooltipText);
    };

    this.showSaveAdTooltip = function (control) {
        control.attr("title", _self.saveAdTooltipText);
    };

    this.hideTooltip = function (control) {
        control.attr("title", "");
    };

    this.showOffStar = function (control) {
        control.find("#divAddToMyGarage").removeClass().addClass("starGarage-off at_sprite");
    };

    this.showHoverStar = function (control) {
        control.find("#divAddToMyGarage").removeClass().addClass("starGarage-hover at_sprite");
    };

    this.showOnStar = function (control) {
        control.find("#divAddToMyGarage").removeClass().addClass("starGarage-on at_sprite");
    };

    this.trackSaveToMyGarage = function (status) {
        var period = 'Clicks from Search Results star icon';
        if (status != null) {
            period = period + '|' + status;
        }
        wa_trackManageAccountAction('save car', period);
    };

    this.trackSaveAdToMG = function (status) {
        if (!_self.enableCompareTool)
            return;

        var period = _self.trackPeriod(status);
        wa_trackEventNoInteraction('Manage Account', 'Save Car', period, null);
    };

    this.trackRemoveAdFromMG = function (status) {
        if (!_self.enableCompareTool)
            return;

        var period = _self.trackPeriod(status);
        wa_trackEventNoInteraction('Manage Account', 'Delete Car', period, null);
    };

    this.trackPeriod = function (status) {
        var period = 'Clicks from ';

        if (WaData) {
            if (WaData.isDetailPage === true) {
                period += 'Ad Details page';
            } else {
                period += WaData.resultPageType;
            }
        } else {
            period += 'Not Defined';
        }

        if (status != null) {
            period = period + '|' + status;
        }

        return period;
    };

    this.trackCompareAdInMG = function (status) {
        if (_self.enableCompareTool) {
            var period = _self.trackPeriod(status);
            wa_trackEventNoInteraction('Compare Tool', 'Add Compare', period, null);
        } else {
            wa_trackManageAccountAction('Compare Vehicles', 'Clicks from Search Results List View');
        }
    };

    this.trackRemoveAdFromCompare = function (status) {
        if (!_self.enableCompareTool)
            return;

        var period = _self.trackPeriod(status);
        wa_trackEventNoInteraction('Compare Tool', 'Remove Compare', period, null);
    };

    this.AdOperation_OnError = function () {
        console.log("AutomotiveProfileService operation error!");
    };

    this.showMessage = function (text) {
        var baseContainerId = 'dynamicMessage';

        var container = $('#' + baseContainerId + 'PopupContainer');
        if (container.length == 0) {
            container = $(
                '<div id="' + baseContainerId + 'PopupContainer" style="display: none;">' +
                    '<div id="' + baseContainerId + 'Popup" class="modalPopup at_postalCodePopup">' +
                        '<div class="dynamicMessageText"></div>' +
                        '<div class="dynamicMessageButton">' +
                            '<a class="at_btn at_marginR" >OK</a>' +
                        '</div>' +
                        '<div class="at_clear"></div>' +
                    '</div>' +
                '</div>');

            $('a', container).click(function () {
                $.colorbox.close();
                $('#' + baseContainerId + 'PopupContainer').hide();
                return false;
            });

            $('body').append(container);
        }

        $('.dynamicMessageText', container).text(text);

        // Options for colorbox modal 
        var modalWidth = 335;
        var modalHeight = 130;

        // Add event listener for orientaiton change
        if (isIPadBrowser) {
            window.addEventListener('orientationchange',
                function () {
                    doOnOrientationChange_Modal(modalWidth, modalHeight);
                },
                false
            );
            // Initial execution if needed
            doOnOrientationChange_Modal(modalWidth, modalHeight);
        }

        // Call colorbox open function
        showColorboxModal(modalWidth, modalHeight, baseContainerId, undefined, function() {
            $('#' + baseContainerId + 'PopupContainer').hide();
        });
    };

    this.hideQTip = function (settings) {
        if (settings.control === undefined || settings.control === null)
            return;

        var qtipId = settings.control.parent().attr('aria-describedby');
        if (qtipId != undefined && qtipId != '') {
            $('#' + qtipId).qtip('hide');
        }
    };

    this.showToastr = function () {
        var text = _self.toasterComparedText.replace(/#CompareNumber#/g, $('.compareNumber:first').text());

        toastr.info(text, '', {
            "closeButton": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-bottom-right",
            "preventDuplicates": false,
            "onclick": function () {
                window.location = _self.compareUrl;
            },
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        });
    };
};

function MyGarageHeader(savedVehicleClientId, savedsearchClientId) {
    var _self = this;
    this.svClientId = savedVehicleClientId;
    this.ssClientId = savedsearchClientId;

    this.updateHeaderSVCounts = function (count) {
        var svCount = jQuery("#" + _self.svClientId);
        if (svCount != null)
            svCount.text(count);
    };

    this.updateHeaderSSCounts = function (count) {
        var ssCount = jQuery("#" + _self.ssClientId);
        if (ssCount != null)
            ssCount.text(count);
    };

    this.trackClicks = function (menuItem) {
        try {
            wa_trackToolbarClick(menuItem);
        }
        catch (ex) { return false; }
    };

    this.trackSignoutClick = function () {
        wa_trackSignoutClick();
        this.trackClicks('Sign Out');
    };
}

jQuery('document').ready(function () {
    jQuery('.myGarage').fixedMenu();
});
;
var Trader = Trader || {};

if (!Trader.PushDown) {
    Trader.PushDown = (function () {
        function showpushdownModal()
        {          
            // Adjust Location Suggestion dropdown position in Chrome - other browsers auto-adjust
            $('.suggestionCompletionListElementChrome').animate({ 'top': '501px' }, 999);

            if ($("body").hasClass("iPad"))
            {
                var ipadOrientation = Math.abs(window.orientation) == 90 ? 'landscape' : 'portrait';

                if (ipadOrientation.toString() == 'landscape')
                {                    
                    $('.suggestionCompletionListElementPViPad').addClass('pushdownOpenLandscape').removeClass('pushdownOpenPortrait').removeClass('pushdownClosedLandscape').removeClass('pushdownClosedPortrait');
                }
                else 
                {
                    $('.suggestionCompletionListElementPViPad').addClass('pushdownOpenPortrait').removeClass('pushdownOpenLandscape').removeClass('pushdownClosedLandscape').removeClass('pushdownClosedPortrait');
                }
            }

            // Push down modal
            $('#pushdownModal').slideToggle(1000);
        }


        function doSetShowPushDownUntilCookie() {
            var today = new Date();

            var expiryTime = new Date(today.setMonth(today.getMonth() + 2));
            var value = this.currentTime + "; expires=" + expiryTime + "; path=/ ;";
            document.cookie = "ShowPushDownUntil=" + value;
        }

        function doInstallPushDownModalTimer() {
            setTimeout(showpushdownModal, 3000);
        }

        return {
            setShowPushDownUntilCookie: doSetShowPushDownUntilCookie,
            installPushDownModalTimer: doInstallPushDownModalTimer
        };
    })();
}
else
{
    $('.suggestionCompletionListElementPViPad').addClass('pushdownClosedPortrait').removeClass('pushdownClosedLandscape').removeClass('pushdownOpenLandscape').removeClass('pushdownOpenPortrait');
}

$(document).on('click', '.pushDownClose', function () {
    // Adjust Location Suggestion dropdown position in Chrome - other browsers auto-adjust
    $('.suggestionCompletionListElementChrome').animate({ 'top': '347px' }, 999);

    if ($("body").hasClass("iPad"))
    {
        var ipadOrientation = Math.abs(window.orientation) == 90 ? 'landscape' : 'portrait';

        if (ipadOrientation.toString() == 'landscape')
        {
            $('.suggestionCompletionListElementPViPad').addClass('pushdownClosedLandscape').removeClass('pushdownClosedPortrait').removeClass('pushdownOpenLandscape').removeClass('pushdownOpenPortrait');
        }
        else
        {

            $('.suggestionCompletionListElementPViPad').addClass('pushdownClosedPortrait').removeClass('pushdownClosedLandscape').removeClass('pushdownOpenLandscape').removeClass('pushdownOpenPortrait');
        }
    }

    // Push down modal
    $(this).parent().slideToggle(1000);
    Trader.PushDown.setShowPushDownUntilCookie();

});

$(window).load(function()
{
    // Adjust location suggestion dropdown position based on whether iPad is in portrait or landscape, and whether the pushdown modal is open or closed

    var isIPadBrowser = navigator.userAgent != null && navigator.userAgent.toLowerCase().indexOf('ipad') >= 0;

    if (isIPadBrowser)
    {
        var ipadOrientation = Math.abs(window.orientation) == 90 ? 'landscape' : 'portrait';
        if (ipadOrientation.toString() == 'landscape')
        {
            if ($('#pushdownModal').length == 0)     
            {
                $('.suggestionCompletionListElementPViPad').addClass('pushdownClosedLandscape').removeClass('pushdownClosedPortrait').removeClass('pushdownOpenLandscape').removeClass('pushdownOpenPortrait');
            }
            else
            {
                $('.suggestionCompletionListElementPViPad').addClass('pushdownOpenLandscape').removeClass('pushdownOpenPortrait').removeClass('pushdownClosedLandscape').removeClass('pushdownClosedPortrait');
            }
        }
        else
        {
            if ($('#pushdownModal').length == 0) 
            {
                $('.suggestionCompletionListElementPViPad').addClass('pushdownClosedPortrait').removeClass('pushdownClosedLandscape').removeClass('pushdownOpenPortrait').removeClass('pushdownOpenLandscape');
            }
            else
            {
                $('.suggestionCompletionListElementPViPad').addClass('pushdownOpenPortrait').removeClass('pushdownOpenLandscape').removeClass('pushdownClosedLandscape').removeClass('pushdownClosedPortrait');
            }
        }
    }


    if (typeof Trader.PushDown.scriptVisible  !== "undefined" && Trader.PushDown.scriptVisible) {
        Trader.PushDown.installPushDownModalTimer();

        $(document).ready(function () {

            if ($("body").hasClass("iPad")) {
                $('.iPad #header .at_globalNav .at_globalNavItems li a').css({
                    'padding-top': '16px'
                });

                var ipadOrientation = Math.abs(window.orientation) == 90 ? 'landscape' : 'portrait';

                if (ipadOrientation.toString() == 'landscape') {
                    $('.iPad .suggestionCompletionListElementPViPad').css({
                        'top': '496px !important',
                        'margin-top': '-1px !important'
                    });
                } else {
                    $('.iPad .suggestionCompletionListElementPViPad').css({
                        'top': '496px !important'
                    });
                }
            }
        });
    };
});
;
/*!
 * Knockout JavaScript library v3.4.0
 * (c) Steven Sanderson - http://knockoutjs.com/
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */

(function() {(function(n){var x=this||(0,eval)("this"),u=x.document,M=x.navigator,v=x.jQuery,F=x.JSON;(function(n){"function"===typeof define&&define.amd?define(["exports","require"],n):"object"===typeof exports&&"object"===typeof module?n(module.exports||exports):n(x.ko={})})(function(N,O){function J(a,c){return null===a||typeof a in T?a===c:!1}function U(b,c){var d;return function(){d||(d=a.a.setTimeout(function(){d=n;b()},c))}}function V(b,c){var d;return function(){clearTimeout(d);d=a.a.setTimeout(b,c)}}function W(a,
c){c&&c!==I?"beforeChange"===c?this.Kb(a):this.Ha(a,c):this.Lb(a)}function X(a,c){null!==c&&c.k&&c.k()}function Y(a,c){var d=this.Hc,e=d[s];e.R||(this.lb&&this.Ma[c]?(d.Pb(c,a,this.Ma[c]),this.Ma[c]=null,--this.lb):e.r[c]||d.Pb(c,a,e.s?{ia:a}:d.uc(a)))}function K(b,c,d,e){a.d[b]={init:function(b,g,k,l,m){var h,r;a.m(function(){var q=a.a.c(g()),p=!d!==!q,A=!r;if(A||c||p!==h)A&&a.va.Aa()&&(r=a.a.ua(a.f.childNodes(b),!0)),p?(A||a.f.da(b,a.a.ua(r)),a.eb(e?e(m,q):m,b)):a.f.xa(b),h=p},null,{i:b});return{controlsDescendantBindings:!0}}};
a.h.ta[b]=!1;a.f.Z[b]=!0}var a="undefined"!==typeof N?N:{};a.b=function(b,c){for(var d=b.split("."),e=a,f=0;f<d.length-1;f++)e=e[d[f]];e[d[d.length-1]]=c};a.G=function(a,c,d){a[c]=d};a.version="3.4.0";a.b("version",a.version);a.options={deferUpdates:!1,useOnlyNativeEvents:!1};a.a=function(){function b(a,b){for(var c in a)a.hasOwnProperty(c)&&b(c,a[c])}function c(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a}function d(a,b){a.__proto__=b;return a}function e(b,c,d,e){var h=b[c].match(r)||
[];a.a.q(d.match(r),function(b){a.a.pa(h,b,e)});b[c]=h.join(" ")}var f={__proto__:[]}instanceof Array,g="function"===typeof Symbol,k={},l={};k[M&&/Firefox\/2/i.test(M.userAgent)?"KeyboardEvent":"UIEvents"]=["keyup","keydown","keypress"];k.MouseEvents="click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave".split(" ");b(k,function(a,b){if(b.length)for(var c=0,d=b.length;c<d;c++)l[b[c]]=a});var m={propertychange:!0},h=u&&function(){for(var a=3,b=u.createElement("div"),c=
b.getElementsByTagName("i");b.innerHTML="\x3c!--[if gt IE "+ ++a+"]><i></i><![endif]--\x3e",c[0];);return 4<a?a:n}(),r=/\S+/g;return{cc:["authenticity_token",/^__RequestVerificationToken(_.*)?$/],q:function(a,b){for(var c=0,d=a.length;c<d;c++)b(a[c],c)},o:function(a,b){if("function"==typeof Array.prototype.indexOf)return Array.prototype.indexOf.call(a,b);for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},Sb:function(a,b,c){for(var d=0,e=a.length;d<e;d++)if(b.call(c,a[d],d))return a[d];
return null},La:function(b,c){var d=a.a.o(b,c);0<d?b.splice(d,1):0===d&&b.shift()},Tb:function(b){b=b||[];for(var c=[],d=0,e=b.length;d<e;d++)0>a.a.o(c,b[d])&&c.push(b[d]);return c},fb:function(a,b){a=a||[];for(var c=[],d=0,e=a.length;d<e;d++)c.push(b(a[d],d));return c},Ka:function(a,b){a=a||[];for(var c=[],d=0,e=a.length;d<e;d++)b(a[d],d)&&c.push(a[d]);return c},ra:function(a,b){if(b instanceof Array)a.push.apply(a,b);else for(var c=0,d=b.length;c<d;c++)a.push(b[c]);return a},pa:function(b,c,d){var e=
a.a.o(a.a.zb(b),c);0>e?d&&b.push(c):d||b.splice(e,1)},ka:f,extend:c,Xa:d,Ya:f?d:c,D:b,Ca:function(a,b){if(!a)return a;var c={},d;for(d in a)a.hasOwnProperty(d)&&(c[d]=b(a[d],d,a));return c},ob:function(b){for(;b.firstChild;)a.removeNode(b.firstChild)},jc:function(b){b=a.a.V(b);for(var c=(b[0]&&b[0].ownerDocument||u).createElement("div"),d=0,e=b.length;d<e;d++)c.appendChild(a.$(b[d]));return c},ua:function(b,c){for(var d=0,e=b.length,h=[];d<e;d++){var m=b[d].cloneNode(!0);h.push(c?a.$(m):m)}return h},
da:function(b,c){a.a.ob(b);if(c)for(var d=0,e=c.length;d<e;d++)b.appendChild(c[d])},qc:function(b,c){var d=b.nodeType?[b]:b;if(0<d.length){for(var e=d[0],h=e.parentNode,m=0,l=c.length;m<l;m++)h.insertBefore(c[m],e);m=0;for(l=d.length;m<l;m++)a.removeNode(d[m])}},za:function(a,b){if(a.length){for(b=8===b.nodeType&&b.parentNode||b;a.length&&a[0].parentNode!==b;)a.splice(0,1);for(;1<a.length&&a[a.length-1].parentNode!==b;)a.length--;if(1<a.length){var c=a[0],d=a[a.length-1];for(a.length=0;c!==d;)a.push(c),
c=c.nextSibling;a.push(d)}}return a},sc:function(a,b){7>h?a.setAttribute("selected",b):a.selected=b},$a:function(a){return null===a||a===n?"":a.trim?a.trim():a.toString().replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")},nd:function(a,b){a=a||"";return b.length>a.length?!1:a.substring(0,b.length)===b},Mc:function(a,b){if(a===b)return!0;if(11===a.nodeType)return!1;if(b.contains)return b.contains(3===a.nodeType?a.parentNode:a);if(b.compareDocumentPosition)return 16==(b.compareDocumentPosition(a)&16);for(;a&&a!=
b;)a=a.parentNode;return!!a},nb:function(b){return a.a.Mc(b,b.ownerDocument.documentElement)},Qb:function(b){return!!a.a.Sb(b,a.a.nb)},A:function(a){return a&&a.tagName&&a.tagName.toLowerCase()},Wb:function(b){return a.onError?function(){try{return b.apply(this,arguments)}catch(c){throw a.onError&&a.onError(c),c;}}:b},setTimeout:function(b,c){return setTimeout(a.a.Wb(b),c)},$b:function(b){setTimeout(function(){a.onError&&a.onError(b);throw b;},0)},p:function(b,c,d){var e=a.a.Wb(d);d=h&&m[c];if(a.options.useOnlyNativeEvents||
d||!v)if(d||"function"!=typeof b.addEventListener)if("undefined"!=typeof b.attachEvent){var l=function(a){e.call(b,a)},f="on"+c;b.attachEvent(f,l);a.a.F.oa(b,function(){b.detachEvent(f,l)})}else throw Error("Browser doesn't support addEventListener or attachEvent");else b.addEventListener(c,e,!1);else v(b).bind(c,e)},Da:function(b,c){if(!b||!b.nodeType)throw Error("element must be a DOM node when calling triggerEvent");var d;"input"===a.a.A(b)&&b.type&&"click"==c.toLowerCase()?(d=b.type,d="checkbox"==
d||"radio"==d):d=!1;if(a.options.useOnlyNativeEvents||!v||d)if("function"==typeof u.createEvent)if("function"==typeof b.dispatchEvent)d=u.createEvent(l[c]||"HTMLEvents"),d.initEvent(c,!0,!0,x,0,0,0,0,0,!1,!1,!1,!1,0,b),b.dispatchEvent(d);else throw Error("The supplied element doesn't support dispatchEvent");else if(d&&b.click)b.click();else if("undefined"!=typeof b.fireEvent)b.fireEvent("on"+c);else throw Error("Browser doesn't support triggering events");else v(b).trigger(c)},c:function(b){return a.H(b)?
b():b},zb:function(b){return a.H(b)?b.t():b},bb:function(b,c,d){var h;c&&("object"===typeof b.classList?(h=b.classList[d?"add":"remove"],a.a.q(c.match(r),function(a){h.call(b.classList,a)})):"string"===typeof b.className.baseVal?e(b.className,"baseVal",c,d):e(b,"className",c,d))},Za:function(b,c){var d=a.a.c(c);if(null===d||d===n)d="";var e=a.f.firstChild(b);!e||3!=e.nodeType||a.f.nextSibling(e)?a.f.da(b,[b.ownerDocument.createTextNode(d)]):e.data=d;a.a.Rc(b)},rc:function(a,b){a.name=b;if(7>=h)try{a.mergeAttributes(u.createElement("<input name='"+
a.name+"'/>"),!1)}catch(c){}},Rc:function(a){9<=h&&(a=1==a.nodeType?a:a.parentNode,a.style&&(a.style.zoom=a.style.zoom))},Nc:function(a){if(h){var b=a.style.width;a.style.width=0;a.style.width=b}},hd:function(b,c){b=a.a.c(b);c=a.a.c(c);for(var d=[],e=b;e<=c;e++)d.push(e);return d},V:function(a){for(var b=[],c=0,d=a.length;c<d;c++)b.push(a[c]);return b},Yb:function(a){return g?Symbol(a):a},rd:6===h,sd:7===h,C:h,ec:function(b,c){for(var d=a.a.V(b.getElementsByTagName("input")).concat(a.a.V(b.getElementsByTagName("textarea"))),
e="string"==typeof c?function(a){return a.name===c}:function(a){return c.test(a.name)},h=[],m=d.length-1;0<=m;m--)e(d[m])&&h.push(d[m]);return h},ed:function(b){return"string"==typeof b&&(b=a.a.$a(b))?F&&F.parse?F.parse(b):(new Function("return "+b))():null},Eb:function(b,c,d){if(!F||!F.stringify)throw Error("Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js");
return F.stringify(a.a.c(b),c,d)},fd:function(c,d,e){e=e||{};var h=e.params||{},m=e.includeFields||this.cc,l=c;if("object"==typeof c&&"form"===a.a.A(c))for(var l=c.action,f=m.length-1;0<=f;f--)for(var g=a.a.ec(c,m[f]),k=g.length-1;0<=k;k--)h[g[k].name]=g[k].value;d=a.a.c(d);var r=u.createElement("form");r.style.display="none";r.action=l;r.method="post";for(var n in d)c=u.createElement("input"),c.type="hidden",c.name=n,c.value=a.a.Eb(a.a.c(d[n])),r.appendChild(c);b(h,function(a,b){var c=u.createElement("input");
c.type="hidden";c.name=a;c.value=b;r.appendChild(c)});u.body.appendChild(r);e.submitter?e.submitter(r):r.submit();setTimeout(function(){r.parentNode.removeChild(r)},0)}}}();a.b("utils",a.a);a.b("utils.arrayForEach",a.a.q);a.b("utils.arrayFirst",a.a.Sb);a.b("utils.arrayFilter",a.a.Ka);a.b("utils.arrayGetDistinctValues",a.a.Tb);a.b("utils.arrayIndexOf",a.a.o);a.b("utils.arrayMap",a.a.fb);a.b("utils.arrayPushAll",a.a.ra);a.b("utils.arrayRemoveItem",a.a.La);a.b("utils.extend",a.a.extend);a.b("utils.fieldsIncludedWithJsonPost",
a.a.cc);a.b("utils.getFormFields",a.a.ec);a.b("utils.peekObservable",a.a.zb);a.b("utils.postJson",a.a.fd);a.b("utils.parseJson",a.a.ed);a.b("utils.registerEventHandler",a.a.p);a.b("utils.stringifyJson",a.a.Eb);a.b("utils.range",a.a.hd);a.b("utils.toggleDomNodeCssClass",a.a.bb);a.b("utils.triggerEvent",a.a.Da);a.b("utils.unwrapObservable",a.a.c);a.b("utils.objectForEach",a.a.D);a.b("utils.addOrRemoveItem",a.a.pa);a.b("utils.setTextContent",a.a.Za);a.b("unwrap",a.a.c);Function.prototype.bind||(Function.prototype.bind=
function(a){var c=this;if(1===arguments.length)return function(){return c.apply(a,arguments)};var d=Array.prototype.slice.call(arguments,1);return function(){var e=d.slice(0);e.push.apply(e,arguments);return c.apply(a,e)}});a.a.e=new function(){function a(b,g){var k=b[d];if(!k||"null"===k||!e[k]){if(!g)return n;k=b[d]="ko"+c++;e[k]={}}return e[k]}var c=0,d="__ko__"+(new Date).getTime(),e={};return{get:function(c,d){var e=a(c,!1);return e===n?n:e[d]},set:function(c,d,e){if(e!==n||a(c,!1)!==n)a(c,!0)[d]=
e},clear:function(a){var b=a[d];return b?(delete e[b],a[d]=null,!0):!1},I:function(){return c++ +d}}};a.b("utils.domData",a.a.e);a.b("utils.domData.clear",a.a.e.clear);a.a.F=new function(){function b(b,c){var e=a.a.e.get(b,d);e===n&&c&&(e=[],a.a.e.set(b,d,e));return e}function c(d){var e=b(d,!1);if(e)for(var e=e.slice(0),l=0;l<e.length;l++)e[l](d);a.a.e.clear(d);a.a.F.cleanExternalData(d);if(f[d.nodeType])for(e=d.firstChild;d=e;)e=d.nextSibling,8===d.nodeType&&c(d)}var d=a.a.e.I(),e={1:!0,8:!0,9:!0},
f={1:!0,9:!0};return{oa:function(a,c){if("function"!=typeof c)throw Error("Callback must be a function");b(a,!0).push(c)},pc:function(c,e){var l=b(c,!1);l&&(a.a.La(l,e),0==l.length&&a.a.e.set(c,d,n))},$:function(b){if(e[b.nodeType]&&(c(b),f[b.nodeType])){var d=[];a.a.ra(d,b.getElementsByTagName("*"));for(var l=0,m=d.length;l<m;l++)c(d[l])}return b},removeNode:function(b){a.$(b);b.parentNode&&b.parentNode.removeChild(b)},cleanExternalData:function(a){v&&"function"==typeof v.cleanData&&v.cleanData([a])}}};
a.$=a.a.F.$;a.removeNode=a.a.F.removeNode;a.b("cleanNode",a.$);a.b("removeNode",a.removeNode);a.b("utils.domNodeDisposal",a.a.F);a.b("utils.domNodeDisposal.addDisposeCallback",a.a.F.oa);a.b("utils.domNodeDisposal.removeDisposeCallback",a.a.F.pc);(function(){var b=[0,"",""],c=[1,"<table>","</table>"],d=[3,"<table><tbody><tr>","</tr></tbody></table>"],e=[1,"<select multiple='multiple'>","</select>"],f={thead:c,tbody:c,tfoot:c,tr:[2,"<table><tbody>","</tbody></table>"],td:d,th:d,option:e,optgroup:e},
g=8>=a.a.C;a.a.ma=function(c,d){var e;if(v)if(v.parseHTML)e=v.parseHTML(c,d)||[];else{if((e=v.clean([c],d))&&e[0]){for(var h=e[0];h.parentNode&&11!==h.parentNode.nodeType;)h=h.parentNode;h.parentNode&&h.parentNode.removeChild(h)}}else{(e=d)||(e=u);var h=e.parentWindow||e.defaultView||x,r=a.a.$a(c).toLowerCase(),q=e.createElement("div"),p;p=(r=r.match(/^<([a-z]+)[ >]/))&&f[r[1]]||b;r=p[0];p="ignored<div>"+p[1]+c+p[2]+"</div>";"function"==typeof h.innerShiv?q.appendChild(h.innerShiv(p)):(g&&e.appendChild(q),
q.innerHTML=p,g&&q.parentNode.removeChild(q));for(;r--;)q=q.lastChild;e=a.a.V(q.lastChild.childNodes)}return e};a.a.Cb=function(b,c){a.a.ob(b);c=a.a.c(c);if(null!==c&&c!==n)if("string"!=typeof c&&(c=c.toString()),v)v(b).html(c);else for(var d=a.a.ma(c,b.ownerDocument),e=0;e<d.length;e++)b.appendChild(d[e])}})();a.b("utils.parseHtmlFragment",a.a.ma);a.b("utils.setHtml",a.a.Cb);a.M=function(){function b(c,e){if(c)if(8==c.nodeType){var f=a.M.lc(c.nodeValue);null!=f&&e.push({Lc:c,cd:f})}else if(1==c.nodeType)for(var f=
0,g=c.childNodes,k=g.length;f<k;f++)b(g[f],e)}var c={};return{wb:function(a){if("function"!=typeof a)throw Error("You can only pass a function to ko.memoization.memoize()");var b=(4294967296*(1+Math.random())|0).toString(16).substring(1)+(4294967296*(1+Math.random())|0).toString(16).substring(1);c[b]=a;return"\x3c!--[ko_memo:"+b+"]--\x3e"},xc:function(a,b){var f=c[a];if(f===n)throw Error("Couldn't find any memo with ID "+a+". Perhaps it's already been unmemoized.");try{return f.apply(null,b||[]),
!0}finally{delete c[a]}},yc:function(c,e){var f=[];b(c,f);for(var g=0,k=f.length;g<k;g++){var l=f[g].Lc,m=[l];e&&a.a.ra(m,e);a.M.xc(f[g].cd,m);l.nodeValue="";l.parentNode&&l.parentNode.removeChild(l)}},lc:function(a){return(a=a.match(/^\[ko_memo\:(.*?)\]$/))?a[1]:null}}}();a.b("memoization",a.M);a.b("memoization.memoize",a.M.wb);a.b("memoization.unmemoize",a.M.xc);a.b("memoization.parseMemoText",a.M.lc);a.b("memoization.unmemoizeDomNodeAndDescendants",a.M.yc);a.Y=function(){function b(){if(e)for(var b=
e,c=0,m;g<e;)if(m=d[g++]){if(g>b){if(5E3<=++c){g=e;a.a.$b(Error("'Too much recursion' after processing "+c+" task groups."));break}b=e}try{m()}catch(h){a.a.$b(h)}}}function c(){b();g=e=d.length=0}var d=[],e=0,f=1,g=0;return{scheduler:x.MutationObserver?function(a){var b=u.createElement("div");(new MutationObserver(a)).observe(b,{attributes:!0});return function(){b.classList.toggle("foo")}}(c):u&&"onreadystatechange"in u.createElement("script")?function(a){var b=u.createElement("script");b.onreadystatechange=
function(){b.onreadystatechange=null;u.documentElement.removeChild(b);b=null;a()};u.documentElement.appendChild(b)}:function(a){setTimeout(a,0)},Wa:function(b){e||a.Y.scheduler(c);d[e++]=b;return f++},cancel:function(a){a-=f-e;a>=g&&a<e&&(d[a]=null)},resetForTesting:function(){var a=e-g;g=e=d.length=0;return a},md:b}}();a.b("tasks",a.Y);a.b("tasks.schedule",a.Y.Wa);a.b("tasks.runEarly",a.Y.md);a.ya={throttle:function(b,c){b.throttleEvaluation=c;var d=null;return a.B({read:b,write:function(e){clearTimeout(d);
d=a.a.setTimeout(function(){b(e)},c)}})},rateLimit:function(a,c){var d,e,f;"number"==typeof c?d=c:(d=c.timeout,e=c.method);a.cb=!1;f="notifyWhenChangesStop"==e?V:U;a.Ta(function(a){return f(a,d)})},deferred:function(b,c){if(!0!==c)throw Error("The 'deferred' extender only accepts the value 'true', because it is not supported to turn deferral off once enabled.");b.cb||(b.cb=!0,b.Ta(function(c){var e;return function(){a.Y.cancel(e);e=a.Y.Wa(c);b.notifySubscribers(n,"dirty")}}))},notify:function(a,c){a.equalityComparer=
"always"==c?null:J}};var T={undefined:1,"boolean":1,number:1,string:1};a.b("extenders",a.ya);a.vc=function(b,c,d){this.ia=b;this.gb=c;this.Kc=d;this.R=!1;a.G(this,"dispose",this.k)};a.vc.prototype.k=function(){this.R=!0;this.Kc()};a.J=function(){a.a.Ya(this,D);D.rb(this)};var I="change",D={rb:function(a){a.K={};a.Nb=1},X:function(b,c,d){var e=this;d=d||I;var f=new a.vc(e,c?b.bind(c):b,function(){a.a.La(e.K[d],f);e.Ia&&e.Ia(d)});e.sa&&e.sa(d);e.K[d]||(e.K[d]=[]);e.K[d].push(f);return f},notifySubscribers:function(b,
c){c=c||I;c===I&&this.zc();if(this.Pa(c))try{a.l.Ub();for(var d=this.K[c].slice(0),e=0,f;f=d[e];++e)f.R||f.gb(b)}finally{a.l.end()}},Na:function(){return this.Nb},Uc:function(a){return this.Na()!==a},zc:function(){++this.Nb},Ta:function(b){var c=this,d=a.H(c),e,f,g;c.Ha||(c.Ha=c.notifySubscribers,c.notifySubscribers=W);var k=b(function(){c.Mb=!1;d&&g===c&&(g=c());e=!1;c.tb(f,g)&&c.Ha(f=g)});c.Lb=function(a){c.Mb=e=!0;g=a;k()};c.Kb=function(a){e||(f=a,c.Ha(a,"beforeChange"))}},Pa:function(a){return this.K[a]&&
this.K[a].length},Sc:function(b){if(b)return this.K[b]&&this.K[b].length||0;var c=0;a.a.D(this.K,function(a,b){"dirty"!==a&&(c+=b.length)});return c},tb:function(a,c){return!this.equalityComparer||!this.equalityComparer(a,c)},extend:function(b){var c=this;b&&a.a.D(b,function(b,e){var f=a.ya[b];"function"==typeof f&&(c=f(c,e)||c)});return c}};a.G(D,"subscribe",D.X);a.G(D,"extend",D.extend);a.G(D,"getSubscriptionsCount",D.Sc);a.a.ka&&a.a.Xa(D,Function.prototype);a.J.fn=D;a.hc=function(a){return null!=
a&&"function"==typeof a.X&&"function"==typeof a.notifySubscribers};a.b("subscribable",a.J);a.b("isSubscribable",a.hc);a.va=a.l=function(){function b(a){d.push(e);e=a}function c(){e=d.pop()}var d=[],e,f=0;return{Ub:b,end:c,oc:function(b){if(e){if(!a.hc(b))throw Error("Only subscribable things can act as dependencies");e.gb.call(e.Gc,b,b.Cc||(b.Cc=++f))}},w:function(a,d,e){try{return b(),a.apply(d,e||[])}finally{c()}},Aa:function(){if(e)return e.m.Aa()},Sa:function(){if(e)return e.Sa}}}();a.b("computedContext",
a.va);a.b("computedContext.getDependenciesCount",a.va.Aa);a.b("computedContext.isInitial",a.va.Sa);a.b("ignoreDependencies",a.qd=a.l.w);var E=a.a.Yb("_latestValue");a.N=function(b){function c(){if(0<arguments.length)return c.tb(c[E],arguments[0])&&(c.ga(),c[E]=arguments[0],c.fa()),this;a.l.oc(c);return c[E]}c[E]=b;a.a.ka||a.a.extend(c,a.J.fn);a.J.fn.rb(c);a.a.Ya(c,B);a.options.deferUpdates&&a.ya.deferred(c,!0);return c};var B={equalityComparer:J,t:function(){return this[E]},fa:function(){this.notifySubscribers(this[E])},
ga:function(){this.notifySubscribers(this[E],"beforeChange")}};a.a.ka&&a.a.Xa(B,a.J.fn);var H=a.N.gd="__ko_proto__";B[H]=a.N;a.Oa=function(b,c){return null===b||b===n||b[H]===n?!1:b[H]===c?!0:a.Oa(b[H],c)};a.H=function(b){return a.Oa(b,a.N)};a.Ba=function(b){return"function"==typeof b&&b[H]===a.N||"function"==typeof b&&b[H]===a.B&&b.Vc?!0:!1};a.b("observable",a.N);a.b("isObservable",a.H);a.b("isWriteableObservable",a.Ba);a.b("isWritableObservable",a.Ba);a.b("observable.fn",B);a.G(B,"peek",B.t);a.G(B,
"valueHasMutated",B.fa);a.G(B,"valueWillMutate",B.ga);a.la=function(b){b=b||[];if("object"!=typeof b||!("length"in b))throw Error("The argument passed when initializing an observable array must be an array, or null, or undefined.");b=a.N(b);a.a.Ya(b,a.la.fn);return b.extend({trackArrayChanges:!0})};a.la.fn={remove:function(b){for(var c=this.t(),d=[],e="function"!=typeof b||a.H(b)?function(a){return a===b}:b,f=0;f<c.length;f++){var g=c[f];e(g)&&(0===d.length&&this.ga(),d.push(g),c.splice(f,1),f--)}d.length&&
this.fa();return d},removeAll:function(b){if(b===n){var c=this.t(),d=c.slice(0);this.ga();c.splice(0,c.length);this.fa();return d}return b?this.remove(function(c){return 0<=a.a.o(b,c)}):[]},destroy:function(b){var c=this.t(),d="function"!=typeof b||a.H(b)?function(a){return a===b}:b;this.ga();for(var e=c.length-1;0<=e;e--)d(c[e])&&(c[e]._destroy=!0);this.fa()},destroyAll:function(b){return b===n?this.destroy(function(){return!0}):b?this.destroy(function(c){return 0<=a.a.o(b,c)}):[]},indexOf:function(b){var c=
this();return a.a.o(c,b)},replace:function(a,c){var d=this.indexOf(a);0<=d&&(this.ga(),this.t()[d]=c,this.fa())}};a.a.ka&&a.a.Xa(a.la.fn,a.N.fn);a.a.q("pop push reverse shift sort splice unshift".split(" "),function(b){a.la.fn[b]=function(){var a=this.t();this.ga();this.Vb(a,b,arguments);var d=a[b].apply(a,arguments);this.fa();return d===a?this:d}});a.a.q(["slice"],function(b){a.la.fn[b]=function(){var a=this();return a[b].apply(a,arguments)}});a.b("observableArray",a.la);a.ya.trackArrayChanges=function(b,
c){function d(){if(!e){e=!0;var c=b.notifySubscribers;b.notifySubscribers=function(a,b){b&&b!==I||++k;return c.apply(this,arguments)};var d=[].concat(b.t()||[]);f=null;g=b.X(function(c){c=[].concat(c||[]);if(b.Pa("arrayChange")){var e;if(!f||1<k)f=a.a.ib(d,c,b.hb);e=f}d=c;f=null;k=0;e&&e.length&&b.notifySubscribers(e,"arrayChange")})}}b.hb={};c&&"object"==typeof c&&a.a.extend(b.hb,c);b.hb.sparse=!0;if(!b.Vb){var e=!1,f=null,g,k=0,l=b.sa,m=b.Ia;b.sa=function(a){l&&l.call(b,a);"arrayChange"===a&&d()};
b.Ia=function(a){m&&m.call(b,a);"arrayChange"!==a||b.Pa("arrayChange")||(g.k(),e=!1)};b.Vb=function(b,c,d){function m(a,b,c){return l[l.length]={status:a,value:b,index:c}}if(e&&!k){var l=[],g=b.length,t=d.length,G=0;switch(c){case "push":G=g;case "unshift":for(c=0;c<t;c++)m("added",d[c],G+c);break;case "pop":G=g-1;case "shift":g&&m("deleted",b[G],G);break;case "splice":c=Math.min(Math.max(0,0>d[0]?g+d[0]:d[0]),g);for(var g=1===t?g:Math.min(c+(d[1]||0),g),t=c+t-2,G=Math.max(g,t),P=[],n=[],Q=2;c<G;++c,
++Q)c<g&&n.push(m("deleted",b[c],c)),c<t&&P.push(m("added",d[Q],c));a.a.dc(n,P);break;default:return}f=l}}}};var s=a.a.Yb("_state");a.m=a.B=function(b,c,d){function e(){if(0<arguments.length){if("function"===typeof f)f.apply(g.pb,arguments);else throw Error("Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.");return this}a.l.oc(e);(g.S||g.s&&e.Qa())&&e.aa();return g.T}"object"===typeof b?d=b:(d=d||{},b&&(d.read=
b));if("function"!=typeof d.read)throw Error("Pass a function that returns the value of the ko.computed");var f=d.write,g={T:n,S:!0,Ra:!1,Fb:!1,R:!1,Va:!1,s:!1,jd:d.read,pb:c||d.owner,i:d.disposeWhenNodeIsRemoved||d.i||null,wa:d.disposeWhen||d.wa,mb:null,r:{},L:0,bc:null};e[s]=g;e.Vc="function"===typeof f;a.a.ka||a.a.extend(e,a.J.fn);a.J.fn.rb(e);a.a.Ya(e,z);d.pure?(g.Va=!0,g.s=!0,a.a.extend(e,$)):d.deferEvaluation&&a.a.extend(e,aa);a.options.deferUpdates&&a.ya.deferred(e,!0);g.i&&(g.Fb=!0,g.i.nodeType||
(g.i=null));g.s||d.deferEvaluation||e.aa();g.i&&e.ba()&&a.a.F.oa(g.i,g.mb=function(){e.k()});return e};var z={equalityComparer:J,Aa:function(){return this[s].L},Pb:function(a,c,d){if(this[s].Va&&c===this)throw Error("A 'pure' computed must not be called recursively");this[s].r[a]=d;d.Ga=this[s].L++;d.na=c.Na()},Qa:function(){var a,c,d=this[s].r;for(a in d)if(d.hasOwnProperty(a)&&(c=d[a],c.ia.Uc(c.na)))return!0},bd:function(){this.Fa&&!this[s].Ra&&this.Fa()},ba:function(){return this[s].S||0<this[s].L},
ld:function(){this.Mb||this.ac()},uc:function(a){if(a.cb&&!this[s].i){var c=a.X(this.bd,this,"dirty"),d=a.X(this.ld,this);return{ia:a,k:function(){c.k();d.k()}}}return a.X(this.ac,this)},ac:function(){var b=this,c=b.throttleEvaluation;c&&0<=c?(clearTimeout(this[s].bc),this[s].bc=a.a.setTimeout(function(){b.aa(!0)},c)):b.Fa?b.Fa():b.aa(!0)},aa:function(b){var c=this[s],d=c.wa;if(!c.Ra&&!c.R){if(c.i&&!a.a.nb(c.i)||d&&d()){if(!c.Fb){this.k();return}}else c.Fb=!1;c.Ra=!0;try{this.Qc(b)}finally{c.Ra=!1}c.L||
this.k()}},Qc:function(b){var c=this[s],d=c.Va?n:!c.L,e={Hc:this,Ma:c.r,lb:c.L};a.l.Ub({Gc:e,gb:Y,m:this,Sa:d});c.r={};c.L=0;e=this.Pc(c,e);this.tb(c.T,e)&&(c.s||this.notifySubscribers(c.T,"beforeChange"),c.T=e,c.s?this.zc():b&&this.notifySubscribers(c.T));d&&this.notifySubscribers(c.T,"awake")},Pc:function(b,c){try{var d=b.jd;return b.pb?d.call(b.pb):d()}finally{a.l.end(),c.lb&&!b.s&&a.a.D(c.Ma,X),b.S=!1}},t:function(){var a=this[s];(a.S&&!a.L||a.s&&this.Qa())&&this.aa();return a.T},Ta:function(b){a.J.fn.Ta.call(this,
b);this.Fa=function(){this.Kb(this[s].T);this[s].S=!0;this.Lb(this)}},k:function(){var b=this[s];!b.s&&b.r&&a.a.D(b.r,function(a,b){b.k&&b.k()});b.i&&b.mb&&a.a.F.pc(b.i,b.mb);b.r=null;b.L=0;b.R=!0;b.S=!1;b.s=!1;b.i=null}},$={sa:function(b){var c=this,d=c[s];if(!d.R&&d.s&&"change"==b){d.s=!1;if(d.S||c.Qa())d.r=null,d.L=0,d.S=!0,c.aa();else{var e=[];a.a.D(d.r,function(a,b){e[b.Ga]=a});a.a.q(e,function(a,b){var e=d.r[a],l=c.uc(e.ia);l.Ga=b;l.na=e.na;d.r[a]=l})}d.R||c.notifySubscribers(d.T,"awake")}},
Ia:function(b){var c=this[s];c.R||"change"!=b||this.Pa("change")||(a.a.D(c.r,function(a,b){b.k&&(c.r[a]={ia:b.ia,Ga:b.Ga,na:b.na},b.k())}),c.s=!0,this.notifySubscribers(n,"asleep"))},Na:function(){var b=this[s];b.s&&(b.S||this.Qa())&&this.aa();return a.J.fn.Na.call(this)}},aa={sa:function(a){"change"!=a&&"beforeChange"!=a||this.t()}};a.a.ka&&a.a.Xa(z,a.J.fn);var R=a.N.gd;a.m[R]=a.N;z[R]=a.m;a.Xc=function(b){return a.Oa(b,a.m)};a.Yc=function(b){return a.Oa(b,a.m)&&b[s]&&b[s].Va};a.b("computed",a.m);
a.b("dependentObservable",a.m);a.b("isComputed",a.Xc);a.b("isPureComputed",a.Yc);a.b("computed.fn",z);a.G(z,"peek",z.t);a.G(z,"dispose",z.k);a.G(z,"isActive",z.ba);a.G(z,"getDependenciesCount",z.Aa);a.nc=function(b,c){if("function"===typeof b)return a.m(b,c,{pure:!0});b=a.a.extend({},b);b.pure=!0;return a.m(b,c)};a.b("pureComputed",a.nc);(function(){function b(a,f,g){g=g||new d;a=f(a);if("object"!=typeof a||null===a||a===n||a instanceof RegExp||a instanceof Date||a instanceof String||a instanceof
Number||a instanceof Boolean)return a;var k=a instanceof Array?[]:{};g.save(a,k);c(a,function(c){var d=f(a[c]);switch(typeof d){case "boolean":case "number":case "string":case "function":k[c]=d;break;case "object":case "undefined":var h=g.get(d);k[c]=h!==n?h:b(d,f,g)}});return k}function c(a,b){if(a instanceof Array){for(var c=0;c<a.length;c++)b(c);"function"==typeof a.toJSON&&b("toJSON")}else for(c in a)b(c)}function d(){this.keys=[];this.Ib=[]}a.wc=function(c){if(0==arguments.length)throw Error("When calling ko.toJS, pass the object you want to convert.");
return b(c,function(b){for(var c=0;a.H(b)&&10>c;c++)b=b();return b})};a.toJSON=function(b,c,d){b=a.wc(b);return a.a.Eb(b,c,d)};d.prototype={save:function(b,c){var d=a.a.o(this.keys,b);0<=d?this.Ib[d]=c:(this.keys.push(b),this.Ib.push(c))},get:function(b){b=a.a.o(this.keys,b);return 0<=b?this.Ib[b]:n}}})();a.b("toJS",a.wc);a.b("toJSON",a.toJSON);(function(){a.j={u:function(b){switch(a.a.A(b)){case "option":return!0===b.__ko__hasDomDataOptionValue__?a.a.e.get(b,a.d.options.xb):7>=a.a.C?b.getAttributeNode("value")&&
b.getAttributeNode("value").specified?b.value:b.text:b.value;case "select":return 0<=b.selectedIndex?a.j.u(b.options[b.selectedIndex]):n;default:return b.value}},ha:function(b,c,d){switch(a.a.A(b)){case "option":switch(typeof c){case "string":a.a.e.set(b,a.d.options.xb,n);"__ko__hasDomDataOptionValue__"in b&&delete b.__ko__hasDomDataOptionValue__;b.value=c;break;default:a.a.e.set(b,a.d.options.xb,c),b.__ko__hasDomDataOptionValue__=!0,b.value="number"===typeof c?c:""}break;case "select":if(""===c||
null===c)c=n;for(var e=-1,f=0,g=b.options.length,k;f<g;++f)if(k=a.j.u(b.options[f]),k==c||""==k&&c===n){e=f;break}if(d||0<=e||c===n&&1<b.size)b.selectedIndex=e;break;default:if(null===c||c===n)c="";b.value=c}}}})();a.b("selectExtensions",a.j);a.b("selectExtensions.readValue",a.j.u);a.b("selectExtensions.writeValue",a.j.ha);a.h=function(){function b(b){b=a.a.$a(b);123===b.charCodeAt(0)&&(b=b.slice(1,-1));var c=[],d=b.match(e),r,k=[],p=0;if(d){d.push(",");for(var A=0,y;y=d[A];++A){var t=y.charCodeAt(0);
if(44===t){if(0>=p){c.push(r&&k.length?{key:r,value:k.join("")}:{unknown:r||k.join("")});r=p=0;k=[];continue}}else if(58===t){if(!p&&!r&&1===k.length){r=k.pop();continue}}else 47===t&&A&&1<y.length?(t=d[A-1].match(f))&&!g[t[0]]&&(b=b.substr(b.indexOf(y)+1),d=b.match(e),d.push(","),A=-1,y="/"):40===t||123===t||91===t?++p:41===t||125===t||93===t?--p:r||k.length||34!==t&&39!==t||(y=y.slice(1,-1));k.push(y)}}return c}var c=["true","false","null","undefined"],d=/^(?:[$_a-z][$\w]*|(.+)(\.\s*[$_a-z][$\w]*|\[.+\]))$/i,
e=RegExp("\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|/(?:[^/\\\\]|\\\\.)*/w*|[^\\s:,/][^,\"'{}()/:[\\]]*[^\\s,\"'{}()/:[\\]]|[^\\s]","g"),f=/[\])"'A-Za-z0-9_$]+$/,g={"in":1,"return":1,"typeof":1},k={};return{ta:[],ea:k,yb:b,Ua:function(e,m){function h(b,e){var m;if(!A){var l=a.getBindingHandler(b);if(l&&l.preprocess&&!(e=l.preprocess(e,b,h)))return;if(l=k[b])m=e,0<=a.a.o(c,m)?m=!1:(l=m.match(d),m=null===l?!1:l[1]?"Object("+l[1]+")"+l[2]:m),l=m;l&&g.push("'"+b+"':function(_z){"+m+"=_z}")}p&&(e=
"function(){return "+e+" }");f.push("'"+b+"':"+e)}m=m||{};var f=[],g=[],p=m.valueAccessors,A=m.bindingParams,y="string"===typeof e?b(e):e;a.a.q(y,function(a){h(a.key||a.unknown,a.value)});g.length&&h("_ko_property_writers","{"+g.join(",")+" }");return f.join(",")},ad:function(a,b){for(var c=0;c<a.length;c++)if(a[c].key==b)return!0;return!1},Ea:function(b,c,d,e,f){if(b&&a.H(b))!a.Ba(b)||f&&b.t()===e||b(e);else if((b=c.get("_ko_property_writers"))&&b[d])b[d](e)}}}();a.b("expressionRewriting",a.h);a.b("expressionRewriting.bindingRewriteValidators",
a.h.ta);a.b("expressionRewriting.parseObjectLiteral",a.h.yb);a.b("expressionRewriting.preProcessBindings",a.h.Ua);a.b("expressionRewriting._twoWayBindings",a.h.ea);a.b("jsonExpressionRewriting",a.h);a.b("jsonExpressionRewriting.insertPropertyAccessorsIntoJson",a.h.Ua);(function(){function b(a){return 8==a.nodeType&&g.test(f?a.text:a.nodeValue)}function c(a){return 8==a.nodeType&&k.test(f?a.text:a.nodeValue)}function d(a,d){for(var e=a,f=1,l=[];e=e.nextSibling;){if(c(e)&&(f--,0===f))return l;l.push(e);
b(e)&&f++}if(!d)throw Error("Cannot find closing comment tag to match: "+a.nodeValue);return null}function e(a,b){var c=d(a,b);return c?0<c.length?c[c.length-1].nextSibling:a.nextSibling:null}var f=u&&"\x3c!--test--\x3e"===u.createComment("test").text,g=f?/^\x3c!--\s*ko(?:\s+([\s\S]+))?\s*--\x3e$/:/^\s*ko(?:\s+([\s\S]+))?\s*$/,k=f?/^\x3c!--\s*\/ko\s*--\x3e$/:/^\s*\/ko\s*$/,l={ul:!0,ol:!0};a.f={Z:{},childNodes:function(a){return b(a)?d(a):a.childNodes},xa:function(c){if(b(c)){c=a.f.childNodes(c);for(var d=
0,e=c.length;d<e;d++)a.removeNode(c[d])}else a.a.ob(c)},da:function(c,d){if(b(c)){a.f.xa(c);for(var e=c.nextSibling,f=0,l=d.length;f<l;f++)e.parentNode.insertBefore(d[f],e)}else a.a.da(c,d)},mc:function(a,c){b(a)?a.parentNode.insertBefore(c,a.nextSibling):a.firstChild?a.insertBefore(c,a.firstChild):a.appendChild(c)},gc:function(c,d,e){e?b(c)?c.parentNode.insertBefore(d,e.nextSibling):e.nextSibling?c.insertBefore(d,e.nextSibling):c.appendChild(d):a.f.mc(c,d)},firstChild:function(a){return b(a)?!a.nextSibling||
c(a.nextSibling)?null:a.nextSibling:a.firstChild},nextSibling:function(a){b(a)&&(a=e(a));return a.nextSibling&&c(a.nextSibling)?null:a.nextSibling},Tc:b,pd:function(a){return(a=(f?a.text:a.nodeValue).match(g))?a[1]:null},kc:function(d){if(l[a.a.A(d)]){var h=d.firstChild;if(h){do if(1===h.nodeType){var f;f=h.firstChild;var g=null;if(f){do if(g)g.push(f);else if(b(f)){var k=e(f,!0);k?f=k:g=[f]}else c(f)&&(g=[f]);while(f=f.nextSibling)}if(f=g)for(g=h.nextSibling,k=0;k<f.length;k++)g?d.insertBefore(f[k],
g):d.appendChild(f[k])}while(h=h.nextSibling)}}}}})();a.b("virtualElements",a.f);a.b("virtualElements.allowedBindings",a.f.Z);a.b("virtualElements.emptyNode",a.f.xa);a.b("virtualElements.insertAfter",a.f.gc);a.b("virtualElements.prepend",a.f.mc);a.b("virtualElements.setDomNodeChildren",a.f.da);(function(){a.Q=function(){this.Fc={}};a.a.extend(a.Q.prototype,{nodeHasBindings:function(b){switch(b.nodeType){case 1:return null!=b.getAttribute("data-bind")||a.g.getComponentNameForNode(b);case 8:return a.f.Tc(b);
default:return!1}},getBindings:function(b,c){var d=this.getBindingsString(b,c),d=d?this.parseBindingsString(d,c,b):null;return a.g.Ob(d,b,c,!1)},getBindingAccessors:function(b,c){var d=this.getBindingsString(b,c),d=d?this.parseBindingsString(d,c,b,{valueAccessors:!0}):null;return a.g.Ob(d,b,c,!0)},getBindingsString:function(b){switch(b.nodeType){case 1:return b.getAttribute("data-bind");case 8:return a.f.pd(b);default:return null}},parseBindingsString:function(b,c,d,e){try{var f=this.Fc,g=b+(e&&e.valueAccessors||
""),k;if(!(k=f[g])){var l,m="with($context){with($data||{}){return{"+a.h.Ua(b,e)+"}}}";l=new Function("$context","$element",m);k=f[g]=l}return k(c,d)}catch(h){throw h.message="Unable to parse bindings.\nBindings value: "+b+"\nMessage: "+h.message,h;}}});a.Q.instance=new a.Q})();a.b("bindingProvider",a.Q);(function(){function b(a){return function(){return a}}function c(a){return a()}function d(b){return a.a.Ca(a.l.w(b),function(a,c){return function(){return b()[c]}})}function e(c,e,h){return"function"===
typeof c?d(c.bind(null,e,h)):a.a.Ca(c,b)}function f(a,b){return d(this.getBindings.bind(this,a,b))}function g(b,c,d){var e,h=a.f.firstChild(c),f=a.Q.instance,m=f.preprocessNode;if(m){for(;e=h;)h=a.f.nextSibling(e),m.call(f,e);h=a.f.firstChild(c)}for(;e=h;)h=a.f.nextSibling(e),k(b,e,d)}function k(b,c,d){var e=!0,h=1===c.nodeType;h&&a.f.kc(c);if(h&&d||a.Q.instance.nodeHasBindings(c))e=m(c,null,b,d).shouldBindDescendants;e&&!r[a.a.A(c)]&&g(b,c,!h)}function l(b){var c=[],d={},e=[];a.a.D(b,function Z(h){if(!d[h]){var f=
a.getBindingHandler(h);f&&(f.after&&(e.push(h),a.a.q(f.after,function(c){if(b[c]){if(-1!==a.a.o(e,c))throw Error("Cannot combine the following bindings, because they have a cyclic dependency: "+e.join(", "));Z(c)}}),e.length--),c.push({key:h,fc:f}));d[h]=!0}});return c}function m(b,d,e,h){var m=a.a.e.get(b,q);if(!d){if(m)throw Error("You cannot apply bindings multiple times to the same element.");a.a.e.set(b,q,!0)}!m&&h&&a.tc(b,e);var g;if(d&&"function"!==typeof d)g=d;else{var k=a.Q.instance,r=k.getBindingAccessors||
f,p=a.B(function(){(g=d?d(e,b):r.call(k,b,e))&&e.P&&e.P();return g},null,{i:b});g&&p.ba()||(p=null)}var u;if(g){var v=p?function(a){return function(){return c(p()[a])}}:function(a){return g[a]},s=function(){return a.a.Ca(p?p():g,c)};s.get=function(a){return g[a]&&c(v(a))};s.has=function(a){return a in g};h=l(g);a.a.q(h,function(c){var d=c.fc.init,h=c.fc.update,f=c.key;if(8===b.nodeType&&!a.f.Z[f])throw Error("The binding '"+f+"' cannot be used with virtual elements");try{"function"==typeof d&&a.l.w(function(){var a=
d(b,v(f),s,e.$data,e);if(a&&a.controlsDescendantBindings){if(u!==n)throw Error("Multiple bindings ("+u+" and "+f+") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.");u=f}}),"function"==typeof h&&a.B(function(){h(b,v(f),s,e.$data,e)},null,{i:b})}catch(m){throw m.message='Unable to process binding "'+f+": "+g[f]+'"\nMessage: '+m.message,m;}})}return{shouldBindDescendants:u===n}}function h(b){return b&&b instanceof a.U?b:new a.U(b)}
a.d={};var r={script:!0,textarea:!0,template:!0};a.getBindingHandler=function(b){return a.d[b]};a.U=function(b,c,d,e){var h=this,f="function"==typeof b&&!a.H(b),m,g=a.B(function(){var m=f?b():b,l=a.a.c(m);c?(c.P&&c.P(),a.a.extend(h,c),g&&(h.P=g)):(h.$parents=[],h.$root=l,h.ko=a);h.$rawData=m;h.$data=l;d&&(h[d]=l);e&&e(h,c,l);return h.$data},null,{wa:function(){return m&&!a.a.Qb(m)},i:!0});g.ba()&&(h.P=g,g.equalityComparer=null,m=[],g.Ac=function(b){m.push(b);a.a.F.oa(b,function(b){a.a.La(m,b);m.length||
(g.k(),h.P=g=n)})})};a.U.prototype.createChildContext=function(b,c,d){return new a.U(b,this,c,function(a,b){a.$parentContext=b;a.$parent=b.$data;a.$parents=(b.$parents||[]).slice(0);a.$parents.unshift(a.$parent);d&&d(a)})};a.U.prototype.extend=function(b){return new a.U(this.P||this.$data,this,null,function(c,d){c.$rawData=d.$rawData;a.a.extend(c,"function"==typeof b?b():b)})};var q=a.a.e.I(),p=a.a.e.I();a.tc=function(b,c){if(2==arguments.length)a.a.e.set(b,p,c),c.P&&c.P.Ac(b);else return a.a.e.get(b,
p)};a.Ja=function(b,c,d){1===b.nodeType&&a.f.kc(b);return m(b,c,h(d),!0)};a.Dc=function(b,c,d){d=h(d);return a.Ja(b,e(c,d,b),d)};a.eb=function(a,b){1!==b.nodeType&&8!==b.nodeType||g(h(a),b,!0)};a.Rb=function(a,b){!v&&x.jQuery&&(v=x.jQuery);if(b&&1!==b.nodeType&&8!==b.nodeType)throw Error("ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node");b=b||x.document.body;k(h(a),b,!0)};a.kb=function(b){switch(b.nodeType){case 1:case 8:var c=a.tc(b);if(c)return c;
if(b.parentNode)return a.kb(b.parentNode)}return n};a.Jc=function(b){return(b=a.kb(b))?b.$data:n};a.b("bindingHandlers",a.d);a.b("applyBindings",a.Rb);a.b("applyBindingsToDescendants",a.eb);a.b("applyBindingAccessorsToNode",a.Ja);a.b("applyBindingsToNode",a.Dc);a.b("contextFor",a.kb);a.b("dataFor",a.Jc)})();(function(b){function c(c,e){var m=f.hasOwnProperty(c)?f[c]:b,h;m?m.X(e):(m=f[c]=new a.J,m.X(e),d(c,function(b,d){var e=!(!d||!d.synchronous);g[c]={definition:b,Zc:e};delete f[c];h||e?m.notifySubscribers(b):
a.Y.Wa(function(){m.notifySubscribers(b)})}),h=!0)}function d(a,b){e("getConfig",[a],function(c){c?e("loadComponent",[a,c],function(a){b(a,c)}):b(null,null)})}function e(c,d,f,h){h||(h=a.g.loaders.slice(0));var g=h.shift();if(g){var q=g[c];if(q){var p=!1;if(q.apply(g,d.concat(function(a){p?f(null):null!==a?f(a):e(c,d,f,h)}))!==b&&(p=!0,!g.suppressLoaderExceptions))throw Error("Component loaders must supply values by invoking the callback, not by returning values synchronously.");}else e(c,d,f,h)}else f(null)}
var f={},g={};a.g={get:function(d,e){var f=g.hasOwnProperty(d)?g[d]:b;f?f.Zc?a.l.w(function(){e(f.definition)}):a.Y.Wa(function(){e(f.definition)}):c(d,e)},Xb:function(a){delete g[a]},Jb:e};a.g.loaders=[];a.b("components",a.g);a.b("components.get",a.g.get);a.b("components.clearCachedDefinition",a.g.Xb)})();(function(){function b(b,c,d,e){function g(){0===--y&&e(k)}var k={},y=2,t=d.template;d=d.viewModel;t?f(c,t,function(c){a.g.Jb("loadTemplate",[b,c],function(a){k.template=a;g()})}):g();d?f(c,d,function(c){a.g.Jb("loadViewModel",
[b,c],function(a){k[l]=a;g()})}):g()}function c(a,b,d){if("function"===typeof b)d(function(a){return new b(a)});else if("function"===typeof b[l])d(b[l]);else if("instance"in b){var e=b.instance;d(function(){return e})}else"viewModel"in b?c(a,b.viewModel,d):a("Unknown viewModel value: "+b)}function d(b){switch(a.a.A(b)){case "script":return a.a.ma(b.text);case "textarea":return a.a.ma(b.value);case "template":if(e(b.content))return a.a.ua(b.content.childNodes)}return a.a.ua(b.childNodes)}function e(a){return x.DocumentFragment?
a instanceof DocumentFragment:a&&11===a.nodeType}function f(a,b,c){"string"===typeof b.require?O||x.require?(O||x.require)([b.require],c):a("Uses require, but no AMD loader is present"):c(b)}function g(a){return function(b){throw Error("Component '"+a+"': "+b);}}var k={};a.g.register=function(b,c){if(!c)throw Error("Invalid configuration for "+b);if(a.g.ub(b))throw Error("Component "+b+" is already registered");k[b]=c};a.g.ub=function(a){return k.hasOwnProperty(a)};a.g.od=function(b){delete k[b];
a.g.Xb(b)};a.g.Zb={getConfig:function(a,b){b(k.hasOwnProperty(a)?k[a]:null)},loadComponent:function(a,c,d){var e=g(a);f(e,c,function(c){b(a,e,c,d)})},loadTemplate:function(b,c,f){b=g(b);if("string"===typeof c)f(a.a.ma(c));else if(c instanceof Array)f(c);else if(e(c))f(a.a.V(c.childNodes));else if(c.element)if(c=c.element,x.HTMLElement?c instanceof HTMLElement:c&&c.tagName&&1===c.nodeType)f(d(c));else if("string"===typeof c){var l=u.getElementById(c);l?f(d(l)):b("Cannot find element with ID "+c)}else b("Unknown element type: "+
c);else b("Unknown template value: "+c)},loadViewModel:function(a,b,d){c(g(a),b,d)}};var l="createViewModel";a.b("components.register",a.g.register);a.b("components.isRegistered",a.g.ub);a.b("components.unregister",a.g.od);a.b("components.defaultLoader",a.g.Zb);a.g.loaders.push(a.g.Zb);a.g.Bc=k})();(function(){function b(b,e){var f=b.getAttribute("params");if(f){var f=c.parseBindingsString(f,e,b,{valueAccessors:!0,bindingParams:!0}),f=a.a.Ca(f,function(c){return a.m(c,null,{i:b})}),g=a.a.Ca(f,function(c){var e=
c.t();return c.ba()?a.m({read:function(){return a.a.c(c())},write:a.Ba(e)&&function(a){c()(a)},i:b}):e});g.hasOwnProperty("$raw")||(g.$raw=f);return g}return{$raw:{}}}a.g.getComponentNameForNode=function(b){var c=a.a.A(b);if(a.g.ub(c)&&(-1!=c.indexOf("-")||"[object HTMLUnknownElement]"==""+b||8>=a.a.C&&b.tagName===c))return c};a.g.Ob=function(c,e,f,g){if(1===e.nodeType){var k=a.g.getComponentNameForNode(e);if(k){c=c||{};if(c.component)throw Error('Cannot use the "component" binding on a custom element matching a component');
var l={name:k,params:b(e,f)};c.component=g?function(){return l}:l}}return c};var c=new a.Q;9>a.a.C&&(a.g.register=function(a){return function(b){u.createElement(b);return a.apply(this,arguments)}}(a.g.register),u.createDocumentFragment=function(b){return function(){var c=b(),f=a.g.Bc,g;for(g in f)f.hasOwnProperty(g)&&c.createElement(g);return c}}(u.createDocumentFragment))})();(function(b){function c(b,c,d){c=c.template;if(!c)throw Error("Component '"+b+"' has no template");b=a.a.ua(c);a.f.da(d,b)}
function d(a,b,c,d){var e=a.createViewModel;return e?e.call(a,d,{element:b,templateNodes:c}):d}var e=0;a.d.component={init:function(f,g,k,l,m){function h(){var a=r&&r.dispose;"function"===typeof a&&a.call(r);q=r=null}var r,q,p=a.a.V(a.f.childNodes(f));a.a.F.oa(f,h);a.m(function(){var l=a.a.c(g()),k,t;"string"===typeof l?k=l:(k=a.a.c(l.name),t=a.a.c(l.params));if(!k)throw Error("No component name specified");var n=q=++e;a.g.get(k,function(e){if(q===n){h();if(!e)throw Error("Unknown component '"+k+
"'");c(k,e,f);var g=d(e,f,p,t);e=m.createChildContext(g,b,function(a){a.$component=g;a.$componentTemplateNodes=p});r=g;a.eb(e,f)}})},null,{i:f});return{controlsDescendantBindings:!0}}};a.f.Z.component=!0})();var S={"class":"className","for":"htmlFor"};a.d.attr={update:function(b,c){var d=a.a.c(c())||{};a.a.D(d,function(c,d){d=a.a.c(d);var g=!1===d||null===d||d===n;g&&b.removeAttribute(c);8>=a.a.C&&c in S?(c=S[c],g?b.removeAttribute(c):b[c]=d):g||b.setAttribute(c,d.toString());"name"===c&&a.a.rc(b,
g?"":d.toString())})}};(function(){a.d.checked={after:["value","attr"],init:function(b,c,d){function e(){var e=b.checked,f=p?g():e;if(!a.va.Sa()&&(!l||e)){var m=a.l.w(c);if(h){var k=r?m.t():m;q!==f?(e&&(a.a.pa(k,f,!0),a.a.pa(k,q,!1)),q=f):a.a.pa(k,f,e);r&&a.Ba(m)&&m(k)}else a.h.Ea(m,d,"checked",f,!0)}}function f(){var d=a.a.c(c());b.checked=h?0<=a.a.o(d,g()):k?d:g()===d}var g=a.nc(function(){return d.has("checkedValue")?a.a.c(d.get("checkedValue")):d.has("value")?a.a.c(d.get("value")):b.value}),k=
"checkbox"==b.type,l="radio"==b.type;if(k||l){var m=c(),h=k&&a.a.c(m)instanceof Array,r=!(h&&m.push&&m.splice),q=h?g():n,p=l||h;l&&!b.name&&a.d.uniqueName.init(b,function(){return!0});a.m(e,null,{i:b});a.a.p(b,"click",e);a.m(f,null,{i:b});m=n}}};a.h.ea.checked=!0;a.d.checkedValue={update:function(b,c){b.value=a.a.c(c())}}})();a.d.css={update:function(b,c){var d=a.a.c(c());null!==d&&"object"==typeof d?a.a.D(d,function(c,d){d=a.a.c(d);a.a.bb(b,c,d)}):(d=a.a.$a(String(d||"")),a.a.bb(b,b.__ko__cssValue,
!1),b.__ko__cssValue=d,a.a.bb(b,d,!0))}};a.d.enable={update:function(b,c){var d=a.a.c(c());d&&b.disabled?b.removeAttribute("disabled"):d||b.disabled||(b.disabled=!0)}};a.d.disable={update:function(b,c){a.d.enable.update(b,function(){return!a.a.c(c())})}};a.d.event={init:function(b,c,d,e,f){var g=c()||{};a.a.D(g,function(g){"string"==typeof g&&a.a.p(b,g,function(b){var m,h=c()[g];if(h){try{var r=a.a.V(arguments);e=f.$data;r.unshift(e);m=h.apply(e,r)}finally{!0!==m&&(b.preventDefault?b.preventDefault():
b.returnValue=!1)}!1===d.get(g+"Bubble")&&(b.cancelBubble=!0,b.stopPropagation&&b.stopPropagation())}})})}};a.d.foreach={ic:function(b){return function(){var c=b(),d=a.a.zb(c);if(!d||"number"==typeof d.length)return{foreach:c,templateEngine:a.W.sb};a.a.c(c);return{foreach:d.data,as:d.as,includeDestroyed:d.includeDestroyed,afterAdd:d.afterAdd,beforeRemove:d.beforeRemove,afterRender:d.afterRender,beforeMove:d.beforeMove,afterMove:d.afterMove,templateEngine:a.W.sb}}},init:function(b,c){return a.d.template.init(b,
a.d.foreach.ic(c))},update:function(b,c,d,e,f){return a.d.template.update(b,a.d.foreach.ic(c),d,e,f)}};a.h.ta.foreach=!1;a.f.Z.foreach=!0;a.d.hasfocus={init:function(b,c,d){function e(e){b.__ko_hasfocusUpdating=!0;var f=b.ownerDocument;if("activeElement"in f){var g;try{g=f.activeElement}catch(h){g=f.body}e=g===b}f=c();a.h.Ea(f,d,"hasfocus",e,!0);b.__ko_hasfocusLastValue=e;b.__ko_hasfocusUpdating=!1}var f=e.bind(null,!0),g=e.bind(null,!1);a.a.p(b,"focus",f);a.a.p(b,"focusin",f);a.a.p(b,"blur",g);a.a.p(b,
"focusout",g)},update:function(b,c){var d=!!a.a.c(c());b.__ko_hasfocusUpdating||b.__ko_hasfocusLastValue===d||(d?b.focus():b.blur(),!d&&b.__ko_hasfocusLastValue&&b.ownerDocument.body.focus(),a.l.w(a.a.Da,null,[b,d?"focusin":"focusout"]))}};a.h.ea.hasfocus=!0;a.d.hasFocus=a.d.hasfocus;a.h.ea.hasFocus=!0;a.d.html={init:function(){return{controlsDescendantBindings:!0}},update:function(b,c){a.a.Cb(b,c())}};K("if");K("ifnot",!1,!0);K("with",!0,!1,function(a,c){return a.createChildContext(c)});var L={};
a.d.options={init:function(b){if("select"!==a.a.A(b))throw Error("options binding applies only to SELECT elements");for(;0<b.length;)b.remove(0);return{controlsDescendantBindings:!0}},update:function(b,c,d){function e(){return a.a.Ka(b.options,function(a){return a.selected})}function f(a,b,c){var d=typeof b;return"function"==d?b(a):"string"==d?a[b]:c}function g(c,e){if(A&&h)a.j.ha(b,a.a.c(d.get("value")),!0);else if(p.length){var f=0<=a.a.o(p,a.j.u(e[0]));a.a.sc(e[0],f);A&&!f&&a.l.w(a.a.Da,null,[b,
"change"])}}var k=b.multiple,l=0!=b.length&&k?b.scrollTop:null,m=a.a.c(c()),h=d.get("valueAllowUnset")&&d.has("value"),r=d.get("optionsIncludeDestroyed");c={};var q,p=[];h||(k?p=a.a.fb(e(),a.j.u):0<=b.selectedIndex&&p.push(a.j.u(b.options[b.selectedIndex])));m&&("undefined"==typeof m.length&&(m=[m]),q=a.a.Ka(m,function(b){return r||b===n||null===b||!a.a.c(b._destroy)}),d.has("optionsCaption")&&(m=a.a.c(d.get("optionsCaption")),null!==m&&m!==n&&q.unshift(L)));var A=!1;c.beforeRemove=function(a){b.removeChild(a)};
m=g;d.has("optionsAfterRender")&&"function"==typeof d.get("optionsAfterRender")&&(m=function(b,c){g(0,c);a.l.w(d.get("optionsAfterRender"),null,[c[0],b!==L?b:n])});a.a.Bb(b,q,function(c,e,g){g.length&&(p=!h&&g[0].selected?[a.j.u(g[0])]:[],A=!0);e=b.ownerDocument.createElement("option");c===L?(a.a.Za(e,d.get("optionsCaption")),a.j.ha(e,n)):(g=f(c,d.get("optionsValue"),c),a.j.ha(e,a.a.c(g)),c=f(c,d.get("optionsText"),g),a.a.Za(e,c));return[e]},c,m);a.l.w(function(){h?a.j.ha(b,a.a.c(d.get("value")),
!0):(k?p.length&&e().length<p.length:p.length&&0<=b.selectedIndex?a.j.u(b.options[b.selectedIndex])!==p[0]:p.length||0<=b.selectedIndex)&&a.a.Da(b,"change")});a.a.Nc(b);l&&20<Math.abs(l-b.scrollTop)&&(b.scrollTop=l)}};a.d.options.xb=a.a.e.I();a.d.selectedOptions={after:["options","foreach"],init:function(b,c,d){a.a.p(b,"change",function(){var e=c(),f=[];a.a.q(b.getElementsByTagName("option"),function(b){b.selected&&f.push(a.j.u(b))});a.h.Ea(e,d,"selectedOptions",f)})},update:function(b,c){if("select"!=
a.a.A(b))throw Error("values binding applies only to SELECT elements");var d=a.a.c(c()),e=b.scrollTop;d&&"number"==typeof d.length&&a.a.q(b.getElementsByTagName("option"),function(b){var c=0<=a.a.o(d,a.j.u(b));b.selected!=c&&a.a.sc(b,c)});b.scrollTop=e}};a.h.ea.selectedOptions=!0;a.d.style={update:function(b,c){var d=a.a.c(c()||{});a.a.D(d,function(c,d){d=a.a.c(d);if(null===d||d===n||!1===d)d="";b.style[c]=d})}};a.d.submit={init:function(b,c,d,e,f){if("function"!=typeof c())throw Error("The value for a submit binding must be a function");
a.a.p(b,"submit",function(a){var d,e=c();try{d=e.call(f.$data,b)}finally{!0!==d&&(a.preventDefault?a.preventDefault():a.returnValue=!1)}})}};a.d.text={init:function(){return{controlsDescendantBindings:!0}},update:function(b,c){a.a.Za(b,c())}};a.f.Z.text=!0;(function(){if(x&&x.navigator)var b=function(a){if(a)return parseFloat(a[1])},c=x.opera&&x.opera.version&&parseInt(x.opera.version()),d=x.navigator.userAgent,e=b(d.match(/^(?:(?!chrome).)*version\/([^ ]*) safari/i)),f=b(d.match(/Firefox\/([^ ]*)/));
if(10>a.a.C)var g=a.a.e.I(),k=a.a.e.I(),l=function(b){var c=this.activeElement;(c=c&&a.a.e.get(c,k))&&c(b)},m=function(b,c){var d=b.ownerDocument;a.a.e.get(d,g)||(a.a.e.set(d,g,!0),a.a.p(d,"selectionchange",l));a.a.e.set(b,k,c)};a.d.textInput={init:function(b,d,g){function l(c,d){a.a.p(b,c,d)}function k(){var c=a.a.c(d());if(null===c||c===n)c="";v!==n&&c===v?a.a.setTimeout(k,4):b.value!==c&&(u=c,b.value=c)}function y(){s||(v=b.value,s=a.a.setTimeout(t,4))}function t(){clearTimeout(s);v=s=n;var c=
b.value;u!==c&&(u=c,a.h.Ea(d(),g,"textInput",c))}var u=b.value,s,v,x=9==a.a.C?y:t;10>a.a.C?(l("propertychange",function(a){"value"===a.propertyName&&x(a)}),8==a.a.C&&(l("keyup",t),l("keydown",t)),8<=a.a.C&&(m(b,x),l("dragend",y))):(l("input",t),5>e&&"textarea"===a.a.A(b)?(l("keydown",y),l("paste",y),l("cut",y)):11>c?l("keydown",y):4>f&&(l("DOMAutoComplete",t),l("dragdrop",t),l("drop",t)));l("change",t);a.m(k,null,{i:b})}};a.h.ea.textInput=!0;a.d.textinput={preprocess:function(a,b,c){c("textInput",
a)}}})();a.d.uniqueName={init:function(b,c){if(c()){var d="ko_unique_"+ ++a.d.uniqueName.Ic;a.a.rc(b,d)}}};a.d.uniqueName.Ic=0;a.d.value={after:["options","foreach"],init:function(b,c,d){if("input"!=b.tagName.toLowerCase()||"checkbox"!=b.type&&"radio"!=b.type){var e=["change"],f=d.get("valueUpdate"),g=!1,k=null;f&&("string"==typeof f&&(f=[f]),a.a.ra(e,f),e=a.a.Tb(e));var l=function(){k=null;g=!1;var e=c(),f=a.j.u(b);a.h.Ea(e,d,"value",f)};!a.a.C||"input"!=b.tagName.toLowerCase()||"text"!=b.type||
"off"==b.autocomplete||b.form&&"off"==b.form.autocomplete||-1!=a.a.o(e,"propertychange")||(a.a.p(b,"propertychange",function(){g=!0}),a.a.p(b,"focus",function(){g=!1}),a.a.p(b,"blur",function(){g&&l()}));a.a.q(e,function(c){var d=l;a.a.nd(c,"after")&&(d=function(){k=a.j.u(b);a.a.setTimeout(l,0)},c=c.substring(5));a.a.p(b,c,d)});var m=function(){var e=a.a.c(c()),f=a.j.u(b);if(null!==k&&e===k)a.a.setTimeout(m,0);else if(e!==f)if("select"===a.a.A(b)){var g=d.get("valueAllowUnset"),f=function(){a.j.ha(b,
e,g)};f();g||e===a.j.u(b)?a.a.setTimeout(f,0):a.l.w(a.a.Da,null,[b,"change"])}else a.j.ha(b,e)};a.m(m,null,{i:b})}else a.Ja(b,{checkedValue:c})},update:function(){}};a.h.ea.value=!0;a.d.visible={update:function(b,c){var d=a.a.c(c()),e="none"!=b.style.display;d&&!e?b.style.display="":!d&&e&&(b.style.display="none")}};(function(b){a.d[b]={init:function(c,d,e,f,g){return a.d.event.init.call(this,c,function(){var a={};a[b]=d();return a},e,f,g)}}})("click");a.O=function(){};a.O.prototype.renderTemplateSource=
function(){throw Error("Override renderTemplateSource");};a.O.prototype.createJavaScriptEvaluatorBlock=function(){throw Error("Override createJavaScriptEvaluatorBlock");};a.O.prototype.makeTemplateSource=function(b,c){if("string"==typeof b){c=c||u;var d=c.getElementById(b);if(!d)throw Error("Cannot find template with ID "+b);return new a.v.n(d)}if(1==b.nodeType||8==b.nodeType)return new a.v.qa(b);throw Error("Unknown template type: "+b);};a.O.prototype.renderTemplate=function(a,c,d,e){a=this.makeTemplateSource(a,
e);return this.renderTemplateSource(a,c,d,e)};a.O.prototype.isTemplateRewritten=function(a,c){return!1===this.allowTemplateRewriting?!0:this.makeTemplateSource(a,c).data("isRewritten")};a.O.prototype.rewriteTemplate=function(a,c,d){a=this.makeTemplateSource(a,d);c=c(a.text());a.text(c);a.data("isRewritten",!0)};a.b("templateEngine",a.O);a.Gb=function(){function b(b,c,d,k){b=a.h.yb(b);for(var l=a.h.ta,m=0;m<b.length;m++){var h=b[m].key;if(l.hasOwnProperty(h)){var r=l[h];if("function"===typeof r){if(h=
r(b[m].value))throw Error(h);}else if(!r)throw Error("This template engine does not support the '"+h+"' binding within its templates");}}d="ko.__tr_ambtns(function($context,$element){return(function(){return{ "+a.h.Ua(b,{valueAccessors:!0})+" } })()},'"+d.toLowerCase()+"')";return k.createJavaScriptEvaluatorBlock(d)+c}var c=/(<([a-z]+\d*)(?:\s+(?!data-bind\s*=\s*)[a-z0-9\-]+(?:=(?:\"[^\"]*\"|\'[^\']*\'|[^>]*))?)*\s+)data-bind\s*=\s*(["'])([\s\S]*?)\3/gi,d=/\x3c!--\s*ko\b\s*([\s\S]*?)\s*--\x3e/g;return{Oc:function(b,
c,d){c.isTemplateRewritten(b,d)||c.rewriteTemplate(b,function(b){return a.Gb.dd(b,c)},d)},dd:function(a,f){return a.replace(c,function(a,c,d,e,h){return b(h,c,d,f)}).replace(d,function(a,c){return b(c,"\x3c!-- ko --\x3e","#comment",f)})},Ec:function(b,c){return a.M.wb(function(d,k){var l=d.nextSibling;l&&l.nodeName.toLowerCase()===c&&a.Ja(l,b,k)})}}}();a.b("__tr_ambtns",a.Gb.Ec);(function(){a.v={};a.v.n=function(b){if(this.n=b){var c=a.a.A(b);this.ab="script"===c?1:"textarea"===c?2:"template"==c&&
b.content&&11===b.content.nodeType?3:4}};a.v.n.prototype.text=function(){var b=1===this.ab?"text":2===this.ab?"value":"innerHTML";if(0==arguments.length)return this.n[b];var c=arguments[0];"innerHTML"===b?a.a.Cb(this.n,c):this.n[b]=c};var b=a.a.e.I()+"_";a.v.n.prototype.data=function(c){if(1===arguments.length)return a.a.e.get(this.n,b+c);a.a.e.set(this.n,b+c,arguments[1])};var c=a.a.e.I();a.v.n.prototype.nodes=function(){var b=this.n;if(0==arguments.length)return(a.a.e.get(b,c)||{}).jb||(3===this.ab?
b.content:4===this.ab?b:n);a.a.e.set(b,c,{jb:arguments[0]})};a.v.qa=function(a){this.n=a};a.v.qa.prototype=new a.v.n;a.v.qa.prototype.text=function(){if(0==arguments.length){var b=a.a.e.get(this.n,c)||{};b.Hb===n&&b.jb&&(b.Hb=b.jb.innerHTML);return b.Hb}a.a.e.set(this.n,c,{Hb:arguments[0]})};a.b("templateSources",a.v);a.b("templateSources.domElement",a.v.n);a.b("templateSources.anonymousTemplate",a.v.qa)})();(function(){function b(b,c,d){var e;for(c=a.f.nextSibling(c);b&&(e=b)!==c;)b=a.f.nextSibling(e),
d(e,b)}function c(c,d){if(c.length){var e=c[0],f=c[c.length-1],g=e.parentNode,k=a.Q.instance,n=k.preprocessNode;if(n){b(e,f,function(a,b){var c=a.previousSibling,d=n.call(k,a);d&&(a===e&&(e=d[0]||b),a===f&&(f=d[d.length-1]||c))});c.length=0;if(!e)return;e===f?c.push(e):(c.push(e,f),a.a.za(c,g))}b(e,f,function(b){1!==b.nodeType&&8!==b.nodeType||a.Rb(d,b)});b(e,f,function(b){1!==b.nodeType&&8!==b.nodeType||a.M.yc(b,[d])});a.a.za(c,g)}}function d(a){return a.nodeType?a:0<a.length?a[0]:null}function e(b,
e,f,k,q){q=q||{};var p=(b&&d(b)||f||{}).ownerDocument,n=q.templateEngine||g;a.Gb.Oc(f,n,p);f=n.renderTemplate(f,k,q,p);if("number"!=typeof f.length||0<f.length&&"number"!=typeof f[0].nodeType)throw Error("Template engine must return an array of DOM nodes");p=!1;switch(e){case "replaceChildren":a.f.da(b,f);p=!0;break;case "replaceNode":a.a.qc(b,f);p=!0;break;case "ignoreTargetNode":break;default:throw Error("Unknown renderMode: "+e);}p&&(c(f,k),q.afterRender&&a.l.w(q.afterRender,null,[f,k.$data]));
return f}function f(b,c,d){return a.H(b)?b():"function"===typeof b?b(c,d):b}var g;a.Db=function(b){if(b!=n&&!(b instanceof a.O))throw Error("templateEngine must inherit from ko.templateEngine");g=b};a.Ab=function(b,c,h,k,q){h=h||{};if((h.templateEngine||g)==n)throw Error("Set a template engine before calling renderTemplate");q=q||"replaceChildren";if(k){var p=d(k);return a.B(function(){var g=c&&c instanceof a.U?c:new a.U(a.a.c(c)),n=f(b,g.$data,g),g=e(k,q,n,g,h);"replaceNode"==q&&(k=g,p=d(k))},null,
{wa:function(){return!p||!a.a.nb(p)},i:p&&"replaceNode"==q?p.parentNode:p})}return a.M.wb(function(d){a.Ab(b,c,h,d,"replaceNode")})};a.kd=function(b,d,g,k,q){function p(a,b){c(b,s);g.afterRender&&g.afterRender(b,a);s=null}function u(a,c){s=q.createChildContext(a,g.as,function(a){a.$index=c});var d=f(b,a,s);return e(null,"ignoreTargetNode",d,s,g)}var s;return a.B(function(){var b=a.a.c(d)||[];"undefined"==typeof b.length&&(b=[b]);b=a.a.Ka(b,function(b){return g.includeDestroyed||b===n||null===b||!a.a.c(b._destroy)});
a.l.w(a.a.Bb,null,[k,b,u,g,p])},null,{i:k})};var k=a.a.e.I();a.d.template={init:function(b,c){var d=a.a.c(c());if("string"==typeof d||d.name)a.f.xa(b);else{if("nodes"in d){if(d=d.nodes||[],a.H(d))throw Error('The "nodes" option must be a plain, non-observable array.');}else d=a.f.childNodes(b);d=a.a.jc(d);(new a.v.qa(b)).nodes(d)}return{controlsDescendantBindings:!0}},update:function(b,c,d,e,f){var g=c(),s;c=a.a.c(g);d=!0;e=null;"string"==typeof c?c={}:(g=c.name,"if"in c&&(d=a.a.c(c["if"])),d&&"ifnot"in
c&&(d=!a.a.c(c.ifnot)),s=a.a.c(c.data));"foreach"in c?e=a.kd(g||b,d&&c.foreach||[],c,b,f):d?(f="data"in c?f.createChildContext(s,c.as):f,e=a.Ab(g||b,f,c,b)):a.f.xa(b);f=e;(s=a.a.e.get(b,k))&&"function"==typeof s.k&&s.k();a.a.e.set(b,k,f&&f.ba()?f:n)}};a.h.ta.template=function(b){b=a.h.yb(b);return 1==b.length&&b[0].unknown||a.h.ad(b,"name")?null:"This template engine does not support anonymous templates nested within its templates"};a.f.Z.template=!0})();a.b("setTemplateEngine",a.Db);a.b("renderTemplate",
a.Ab);a.a.dc=function(a,c,d){if(a.length&&c.length){var e,f,g,k,l;for(e=f=0;(!d||e<d)&&(k=a[f]);++f){for(g=0;l=c[g];++g)if(k.value===l.value){k.moved=l.index;l.moved=k.index;c.splice(g,1);e=g=0;break}e+=g}}};a.a.ib=function(){function b(b,d,e,f,g){var k=Math.min,l=Math.max,m=[],h,n=b.length,q,p=d.length,s=p-n||1,u=n+p+1,t,v,x;for(h=0;h<=n;h++)for(v=t,m.push(t=[]),x=k(p,h+s),q=l(0,h-1);q<=x;q++)t[q]=q?h?b[h-1]===d[q-1]?v[q-1]:k(v[q]||u,t[q-1]||u)+1:q+1:h+1;k=[];l=[];s=[];h=n;for(q=p;h||q;)p=m[h][q]-
1,q&&p===m[h][q-1]?l.push(k[k.length]={status:e,value:d[--q],index:q}):h&&p===m[h-1][q]?s.push(k[k.length]={status:f,value:b[--h],index:h}):(--q,--h,g.sparse||k.push({status:"retained",value:d[q]}));a.a.dc(s,l,!g.dontLimitMoves&&10*n);return k.reverse()}return function(a,d,e){e="boolean"===typeof e?{dontLimitMoves:e}:e||{};a=a||[];d=d||[];return a.length<d.length?b(a,d,"added","deleted",e):b(d,a,"deleted","added",e)}}();a.b("utils.compareArrays",a.a.ib);(function(){function b(b,c,d,k,l){var m=[],
h=a.B(function(){var h=c(d,l,a.a.za(m,b))||[];0<m.length&&(a.a.qc(m,h),k&&a.l.w(k,null,[d,h,l]));m.length=0;a.a.ra(m,h)},null,{i:b,wa:function(){return!a.a.Qb(m)}});return{ca:m,B:h.ba()?h:n}}var c=a.a.e.I(),d=a.a.e.I();a.a.Bb=function(e,f,g,k,l){function m(b,c){w=q[c];v!==c&&(D[b]=w);w.qb(v++);a.a.za(w.ca,e);u.push(w);z.push(w)}function h(b,c){if(b)for(var d=0,e=c.length;d<e;d++)c[d]&&a.a.q(c[d].ca,function(a){b(a,d,c[d].ja)})}f=f||[];k=k||{};var r=a.a.e.get(e,c)===n,q=a.a.e.get(e,c)||[],p=a.a.fb(q,
function(a){return a.ja}),s=a.a.ib(p,f,k.dontLimitMoves),u=[],t=0,v=0,x=[],z=[];f=[];for(var D=[],p=[],w,C=0,B,E;B=s[C];C++)switch(E=B.moved,B.status){case "deleted":E===n&&(w=q[t],w.B&&(w.B.k(),w.B=n),a.a.za(w.ca,e).length&&(k.beforeRemove&&(u.push(w),z.push(w),w.ja===d?w=null:f[C]=w),w&&x.push.apply(x,w.ca)));t++;break;case "retained":m(C,t++);break;case "added":E!==n?m(C,E):(w={ja:B.value,qb:a.N(v++)},u.push(w),z.push(w),r||(p[C]=w))}a.a.e.set(e,c,u);h(k.beforeMove,D);a.a.q(x,k.beforeRemove?a.$:
a.removeNode);for(var C=0,r=a.f.firstChild(e),F;w=z[C];C++){w.ca||a.a.extend(w,b(e,g,w.ja,l,w.qb));for(t=0;s=w.ca[t];r=s.nextSibling,F=s,t++)s!==r&&a.f.gc(e,s,F);!w.Wc&&l&&(l(w.ja,w.ca,w.qb),w.Wc=!0)}h(k.beforeRemove,f);for(C=0;C<f.length;++C)f[C]&&(f[C].ja=d);h(k.afterMove,D);h(k.afterAdd,p)}})();a.b("utils.setDomNodeChildrenFromArrayMapping",a.a.Bb);a.W=function(){this.allowTemplateRewriting=!1};a.W.prototype=new a.O;a.W.prototype.renderTemplateSource=function(b,c,d,e){if(c=(9>a.a.C?0:b.nodes)?
b.nodes():null)return a.a.V(c.cloneNode(!0).childNodes);b=b.text();return a.a.ma(b,e)};a.W.sb=new a.W;a.Db(a.W.sb);a.b("nativeTemplateEngine",a.W);(function(){a.vb=function(){var a=this.$c=function(){if(!v||!v.tmpl)return 0;try{if(0<=v.tmpl.tag.tmpl.open.toString().indexOf("__"))return 2}catch(a){}return 1}();this.renderTemplateSource=function(b,e,f,g){g=g||u;f=f||{};if(2>a)throw Error("Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.");var k=b.data("precompiled");
k||(k=b.text()||"",k=v.template(null,"{{ko_with $item.koBindingContext}}"+k+"{{/ko_with}}"),b.data("precompiled",k));b=[e.$data];e=v.extend({koBindingContext:e},f.templateOptions);e=v.tmpl(k,b,e);e.appendTo(g.createElement("div"));v.fragments={};return e};this.createJavaScriptEvaluatorBlock=function(a){return"{{ko_code ((function() { return "+a+" })()) }}"};this.addTemplate=function(a,b){u.write("<script type='text/html' id='"+a+"'>"+b+"\x3c/script>")};0<a&&(v.tmpl.tag.ko_code={open:"__.push($1 || '');"},
v.tmpl.tag.ko_with={open:"with($1) {",close:"} "})};a.vb.prototype=new a.O;var b=new a.vb;0<b.$c&&a.Db(b);a.b("jqueryTmplTemplateEngine",a.vb)})()})})();})();
;
/* qTip2 v2.2.1 | Plugins: tips | Styles: core basic css3 | qtip2.com | Licensed MIT | Sun Sep 07 2014 08:23:14 */

!function(a,b,c){!function(a){"use strict";"function"==typeof define&&define.amd?define(["jquery"],a):jQuery&&!jQuery.fn.qtip&&a(jQuery)}(function(d){"use strict";function e(a,b,c,e){this.id=c,this.target=a,this.tooltip=D,this.elements={target:a},this._id=P+"-"+c,this.timers={img:{}},this.options=b,this.plugins={},this.cache={event:{},target:d(),disabled:C,attr:e,onTooltip:C,lastClass:""},this.rendered=this.destroyed=this.disabled=this.waiting=this.hiddenDuringWait=this.positioning=this.triggering=C}function f(a){return a===D||"object"!==d.type(a)}function g(a){return!(d.isFunction(a)||a&&a.attr||a.length||"object"===d.type(a)&&(a.jquery||a.then))}function h(a){var b,c,e,h;return f(a)?C:(f(a.metadata)&&(a.metadata={type:a.metadata}),"content"in a&&(b=a.content,f(b)||b.jquery||b.done?b=a.content={text:c=g(b)?C:b}:c=b.text,"ajax"in b&&(e=b.ajax,h=e&&e.once!==C,delete b.ajax,b.text=function(a,b){var f=c||d(this).attr(b.options.content.attr)||"Loading...",g=d.ajax(d.extend({},e,{context:b})).then(e.success,D,e.error).then(function(a){return a&&h&&b.set("content.text",a),a},function(a,c,d){b.destroyed||0===a.status||b.set("content.text",c+": "+d)});return h?f:(b.set("content.text",f),g)}),"title"in b&&(d.isPlainObject(b.title)&&(b.button=b.title.button,b.title=b.title.text),g(b.title||C)&&(b.title=C))),"position"in a&&f(a.position)&&(a.position={my:a.position,at:a.position}),"show"in a&&f(a.show)&&(a.show=a.show.jquery?{target:a.show}:a.show===B?{ready:B}:{event:a.show}),"hide"in a&&f(a.hide)&&(a.hide=a.hide.jquery?{target:a.hide}:{event:a.hide}),"style"in a&&f(a.style)&&(a.style={classes:a.style}),d.each(O,function(){this.sanitize&&this.sanitize(a)}),a)}function i(a,b){for(var c,d=0,e=a,f=b.split(".");e=e[f[d++]];)d<f.length&&(c=e);return[c||a,f.pop()]}function j(a,b){var c,d,e;for(c in this.checks)for(d in this.checks[c])(e=new RegExp(d,"i").exec(a))&&(b.push(e),("builtin"===c||this.plugins[c])&&this.checks[c][d].apply(this.plugins[c]||this,b))}function k(a){return S.concat("").join(a?"-"+a+" ":" ")}function l(a,b){return b>0?setTimeout(d.proxy(a,this),b):void a.call(this)}function m(a){this.tooltip.hasClass(Z)||(clearTimeout(this.timers.show),clearTimeout(this.timers.hide),this.timers.show=l.call(this,function(){this.toggle(B,a)},this.options.show.delay))}function n(a){if(!this.tooltip.hasClass(Z)&&!this.destroyed){var b=d(a.relatedTarget),c=b.closest(T)[0]===this.tooltip[0],e=b[0]===this.options.show.target[0];if(clearTimeout(this.timers.show),clearTimeout(this.timers.hide),this!==b[0]&&"mouse"===this.options.position.target&&c||this.options.hide.fixed&&/mouse(out|leave|move)/.test(a.type)&&(c||e))try{a.preventDefault(),a.stopImmediatePropagation()}catch(f){}else this.timers.hide=l.call(this,function(){this.toggle(C,a)},this.options.hide.delay,this)}}function o(a){!this.tooltip.hasClass(Z)&&this.options.hide.inactive&&(clearTimeout(this.timers.inactive),this.timers.inactive=l.call(this,function(){this.hide(a)},this.options.hide.inactive))}function p(a){this.rendered&&this.tooltip[0].offsetWidth>0&&this.reposition(a)}function q(a,c,e){d(b.body).delegate(a,(c.split?c:c.join("."+P+" "))+"."+P,function(){var a=w.api[d.attr(this,R)];a&&!a.disabled&&e.apply(a,arguments)})}function r(a,c,f){var g,i,j,k,l,m=d(b.body),n=a[0]===b?m:a,o=a.metadata?a.metadata(f.metadata):D,p="html5"===f.metadata.type&&o?o[f.metadata.name]:D,q=a.data(f.metadata.name||"qtipopts");try{q="string"==typeof q?d.parseJSON(q):q}catch(r){}if(k=d.extend(B,{},w.defaults,f,"object"==typeof q?h(q):D,h(p||o)),i=k.position,k.id=c,"boolean"==typeof k.content.text){if(j=a.attr(k.content.attr),k.content.attr===C||!j)return C;k.content.text=j}if(i.container.length||(i.container=m),i.target===C&&(i.target=n),k.show.target===C&&(k.show.target=n),k.show.solo===B&&(k.show.solo=i.container.closest("body")),k.hide.target===C&&(k.hide.target=n),k.position.viewport===B&&(k.position.viewport=i.container),i.container=i.container.eq(0),i.at=new y(i.at,B),i.my=new y(i.my),a.data(P))if(k.overwrite)a.qtip("destroy",!0);else if(k.overwrite===C)return C;return a.attr(Q,c),k.suppress&&(l=a.attr("title"))&&a.removeAttr("title").attr(_,l).attr("title",""),g=new e(a,k,c,!!j),a.data(P,g),g}function s(a){return a.charAt(0).toUpperCase()+a.slice(1)}function t(a,b){var d,e,f=b.charAt(0).toUpperCase()+b.slice(1),g=(b+" "+ob.join(f+" ")+f).split(" "),h=0;if(nb[b])return a.css(nb[b]);for(;d=g[h++];)if((e=a.css(d))!==c)return nb[b]=d,e}function u(a,b){return Math.ceil(parseFloat(t(a,b)))}function v(a,b){this._ns="tip",this.options=b,this.offset=b.offset,this.size=[b.width,b.height],this.init(this.qtip=a)}var w,x,y,z,A,B=!0,C=!1,D=null,E="x",F="y",G="width",H="height",I="top",J="left",K="bottom",L="right",M="center",N="shift",O={},P="qtip",Q="data-hasqtip",R="data-qtip-id",S=["ui-widget","ui-tooltip"],T="."+P,U="click dblclick mousedown mouseup mousemove mouseleave mouseenter".split(" "),V=P+"-fixed",W=P+"-default",X=P+"-focus",Y=P+"-hover",Z=P+"-disabled",$="_replacedByqTip",_="oldtitle",ab={ie:function(){for(var a=4,c=b.createElement("div");(c.innerHTML="<!--[if gt IE "+a+"]><i></i><![endif]-->")&&c.getElementsByTagName("i")[0];a+=1);return a>4?a:0/0}(),iOS:parseFloat((""+(/CPU.*OS ([0-9_]{1,5})|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent)||[0,""])[1]).replace("undefined","3_2").replace("_",".").replace("_",""))||C};x=e.prototype,x._when=function(a){return d.when.apply(d,a)},x.render=function(a){if(this.rendered||this.destroyed)return this;var b,c=this,e=this.options,f=this.cache,g=this.elements,h=e.content.text,i=e.content.title,j=e.content.button,k=e.position,l=("."+this._id+" ",[]);return d.attr(this.target[0],"aria-describedby",this._id),f.posClass=this._createPosClass((this.position={my:k.my,at:k.at}).my),this.tooltip=g.tooltip=b=d("<div/>",{id:this._id,"class":[P,W,e.style.classes,f.posClass].join(" "),width:e.style.width||"",height:e.style.height||"",tracking:"mouse"===k.target&&k.adjust.mouse,role:"alert","aria-live":"polite","aria-atomic":C,"aria-describedby":this._id+"-content","aria-hidden":B}).toggleClass(Z,this.disabled).attr(R,this.id).data(P,this).appendTo(k.container).append(g.content=d("<div />",{"class":P+"-content",id:this._id+"-content","aria-atomic":B})),this.rendered=-1,this.positioning=B,i&&(this._createTitle(),d.isFunction(i)||l.push(this._updateTitle(i,C))),j&&this._createButton(),d.isFunction(h)||l.push(this._updateContent(h,C)),this.rendered=B,this._setWidget(),d.each(O,function(a){var b;"render"===this.initialize&&(b=this(c))&&(c.plugins[a]=b)}),this._unassignEvents(),this._assignEvents(),this._when(l).then(function(){c._trigger("render"),c.positioning=C,c.hiddenDuringWait||!e.show.ready&&!a||c.toggle(B,f.event,C),c.hiddenDuringWait=C}),w.api[this.id]=this,this},x.destroy=function(a){function b(){if(!this.destroyed){this.destroyed=B;var a,b=this.target,c=b.attr(_);this.rendered&&this.tooltip.stop(1,0).find("*").remove().end().remove(),d.each(this.plugins,function(){this.destroy&&this.destroy()});for(a in this.timers)clearTimeout(this.timers[a]);b.removeData(P).removeAttr(R).removeAttr(Q).removeAttr("aria-describedby"),this.options.suppress&&c&&b.attr("title",c).removeAttr(_),this._unassignEvents(),this.options=this.elements=this.cache=this.timers=this.plugins=this.mouse=D,delete w.api[this.id]}}return this.destroyed?this.target:(a===B&&"hide"!==this.triggering||!this.rendered?b.call(this):(this.tooltip.one("tooltiphidden",d.proxy(b,this)),!this.triggering&&this.hide()),this.target)},z=x.checks={builtin:{"^id$":function(a,b,c,e){var f=c===B?w.nextid:c,g=P+"-"+f;f!==C&&f.length>0&&!d("#"+g).length?(this._id=g,this.rendered&&(this.tooltip[0].id=this._id,this.elements.content[0].id=this._id+"-content",this.elements.title[0].id=this._id+"-title")):a[b]=e},"^prerender":function(a,b,c){c&&!this.rendered&&this.render(this.options.show.ready)},"^content.text$":function(a,b,c){this._updateContent(c)},"^content.attr$":function(a,b,c,d){this.options.content.text===this.target.attr(d)&&this._updateContent(this.target.attr(c))},"^content.title$":function(a,b,c){return c?(c&&!this.elements.title&&this._createTitle(),void this._updateTitle(c)):this._removeTitle()},"^content.button$":function(a,b,c){this._updateButton(c)},"^content.title.(text|button)$":function(a,b,c){this.set("content."+b,c)},"^position.(my|at)$":function(a,b,c){"string"==typeof c&&(this.position[b]=a[b]=new y(c,"at"===b))},"^position.container$":function(a,b,c){this.rendered&&this.tooltip.appendTo(c)},"^show.ready$":function(a,b,c){c&&(!this.rendered&&this.render(B)||this.toggle(B))},"^style.classes$":function(a,b,c,d){this.rendered&&this.tooltip.removeClass(d).addClass(c)},"^style.(width|height)":function(a,b,c){this.rendered&&this.tooltip.css(b,c)},"^style.widget|content.title":function(){this.rendered&&this._setWidget()},"^style.def":function(a,b,c){this.rendered&&this.tooltip.toggleClass(W,!!c)},"^events.(render|show|move|hide|focus|blur)$":function(a,b,c){this.rendered&&this.tooltip[(d.isFunction(c)?"":"un")+"bind"]("tooltip"+b,c)},"^(show|hide|position).(event|target|fixed|inactive|leave|distance|viewport|adjust)":function(){if(this.rendered){var a=this.options.position;this.tooltip.attr("tracking","mouse"===a.target&&a.adjust.mouse),this._unassignEvents(),this._assignEvents()}}}},x.get=function(a){if(this.destroyed)return this;var b=i(this.options,a.toLowerCase()),c=b[0][b[1]];return c.precedance?c.string():c};var bb=/^position\.(my|at|adjust|target|container|viewport)|style|content|show\.ready/i,cb=/^prerender|show\.ready/i;x.set=function(a,b){if(this.destroyed)return this;{var c,e=this.rendered,f=C,g=this.options;this.checks}return"string"==typeof a?(c=a,a={},a[c]=b):a=d.extend({},a),d.each(a,function(b,c){if(e&&cb.test(b))return void delete a[b];var h,j=i(g,b.toLowerCase());h=j[0][j[1]],j[0][j[1]]=c&&c.nodeType?d(c):c,f=bb.test(b)||f,a[b]=[j[0],j[1],c,h]}),h(g),this.positioning=B,d.each(a,d.proxy(j,this)),this.positioning=C,this.rendered&&this.tooltip[0].offsetWidth>0&&f&&this.reposition("mouse"===g.position.target?D:this.cache.event),this},x._update=function(a,b){var c=this,e=this.cache;return this.rendered&&a?(d.isFunction(a)&&(a=a.call(this.elements.target,e.event,this)||""),d.isFunction(a.then)?(e.waiting=B,a.then(function(a){return e.waiting=C,c._update(a,b)},D,function(a){return c._update(a,b)})):a===C||!a&&""!==a?C:(a.jquery&&a.length>0?b.empty().append(a.css({display:"block",visibility:"visible"})):b.html(a),this._waitForContent(b).then(function(a){c.rendered&&c.tooltip[0].offsetWidth>0&&c.reposition(e.event,!a.length)}))):C},x._waitForContent=function(a){var b=this.cache;return b.waiting=B,(d.fn.imagesLoaded?a.imagesLoaded():d.Deferred().resolve([])).done(function(){b.waiting=C}).promise()},x._updateContent=function(a,b){this._update(a,this.elements.content,b)},x._updateTitle=function(a,b){this._update(a,this.elements.title,b)===C&&this._removeTitle(C)},x._createTitle=function(){var a=this.elements,b=this._id+"-title";a.titlebar&&this._removeTitle(),a.titlebar=d("<div />",{"class":P+"-titlebar "+(this.options.style.widget?k("header"):"")}).append(a.title=d("<div />",{id:b,"class":P+"-title","aria-atomic":B})).insertBefore(a.content).delegate(".qtip-close","mousedown keydown mouseup keyup mouseout",function(a){d(this).toggleClass("ui-state-active ui-state-focus","down"===a.type.substr(-4))}).delegate(".qtip-close","mouseover mouseout",function(a){d(this).toggleClass("ui-state-hover","mouseover"===a.type)}),this.options.content.button&&this._createButton()},x._removeTitle=function(a){var b=this.elements;b.title&&(b.titlebar.remove(),b.titlebar=b.title=b.button=D,a!==C&&this.reposition())},x._createPosClass=function(a){return P+"-pos-"+(a||this.options.position.my).abbrev()},x.reposition=function(c,e){if(!this.rendered||this.positioning||this.destroyed)return this;this.positioning=B;var f,g,h,i,j=this.cache,k=this.tooltip,l=this.options.position,m=l.target,n=l.my,o=l.at,p=l.viewport,q=l.container,r=l.adjust,s=r.method.split(" "),t=k.outerWidth(C),u=k.outerHeight(C),v=0,w=0,x=k.css("position"),y={left:0,top:0},z=k[0].offsetWidth>0,A=c&&"scroll"===c.type,D=d(a),E=q[0].ownerDocument,F=this.mouse;if(d.isArray(m)&&2===m.length)o={x:J,y:I},y={left:m[0],top:m[1]};else if("mouse"===m)o={x:J,y:I},(!r.mouse||this.options.hide.distance)&&j.origin&&j.origin.pageX?c=j.origin:!c||c&&("resize"===c.type||"scroll"===c.type)?c=j.event:F&&F.pageX&&(c=F),"static"!==x&&(y=q.offset()),E.body.offsetWidth!==(a.innerWidth||E.documentElement.clientWidth)&&(g=d(b.body).offset()),y={left:c.pageX-y.left+(g&&g.left||0),top:c.pageY-y.top+(g&&g.top||0)},r.mouse&&A&&F&&(y.left-=(F.scrollX||0)-D.scrollLeft(),y.top-=(F.scrollY||0)-D.scrollTop());else{if("event"===m?c&&c.target&&"scroll"!==c.type&&"resize"!==c.type?j.target=d(c.target):c.target||(j.target=this.elements.target):"event"!==m&&(j.target=d(m.jquery?m:this.elements.target)),m=j.target,m=d(m).eq(0),0===m.length)return this;m[0]===b||m[0]===a?(v=ab.iOS?a.innerWidth:m.width(),w=ab.iOS?a.innerHeight:m.height(),m[0]===a&&(y={top:(p||m).scrollTop(),left:(p||m).scrollLeft()})):O.imagemap&&m.is("area")?f=O.imagemap(this,m,o,O.viewport?s:C):O.svg&&m&&m[0].ownerSVGElement?f=O.svg(this,m,o,O.viewport?s:C):(v=m.outerWidth(C),w=m.outerHeight(C),y=m.offset()),f&&(v=f.width,w=f.height,g=f.offset,y=f.position),y=this.reposition.offset(m,y,q),(ab.iOS>3.1&&ab.iOS<4.1||ab.iOS>=4.3&&ab.iOS<4.33||!ab.iOS&&"fixed"===x)&&(y.left-=D.scrollLeft(),y.top-=D.scrollTop()),(!f||f&&f.adjustable!==C)&&(y.left+=o.x===L?v:o.x===M?v/2:0,y.top+=o.y===K?w:o.y===M?w/2:0)}return y.left+=r.x+(n.x===L?-t:n.x===M?-t/2:0),y.top+=r.y+(n.y===K?-u:n.y===M?-u/2:0),O.viewport?(h=y.adjusted=O.viewport(this,y,l,v,w,t,u),g&&h.left&&(y.left+=g.left),g&&h.top&&(y.top+=g.top),h.my&&(this.position.my=h.my)):y.adjusted={left:0,top:0},j.posClass!==(i=this._createPosClass(this.position.my))&&k.removeClass(j.posClass).addClass(j.posClass=i),this._trigger("move",[y,p.elem||p],c)?(delete y.adjusted,e===C||!z||isNaN(y.left)||isNaN(y.top)||"mouse"===m||!d.isFunction(l.effect)?k.css(y):d.isFunction(l.effect)&&(l.effect.call(k,this,d.extend({},y)),k.queue(function(a){d(this).css({opacity:"",height:""}),ab.ie&&this.style.removeAttribute("filter"),a()})),this.positioning=C,this):this},x.reposition.offset=function(a,c,e){function f(a,b){c.left+=b*a.scrollLeft(),c.top+=b*a.scrollTop()}if(!e[0])return c;var g,h,i,j,k=d(a[0].ownerDocument),l=!!ab.ie&&"CSS1Compat"!==b.compatMode,m=e[0];do"static"!==(h=d.css(m,"position"))&&("fixed"===h?(i=m.getBoundingClientRect(),f(k,-1)):(i=d(m).position(),i.left+=parseFloat(d.css(m,"borderLeftWidth"))||0,i.top+=parseFloat(d.css(m,"borderTopWidth"))||0),c.left-=i.left+(parseFloat(d.css(m,"marginLeft"))||0),c.top-=i.top+(parseFloat(d.css(m,"marginTop"))||0),g||"hidden"===(j=d.css(m,"overflow"))||"visible"===j||(g=d(m)));while(m=m.offsetParent);return g&&(g[0]!==k[0]||l)&&f(g,1),c};var db=(y=x.reposition.Corner=function(a,b){a=(""+a).replace(/([A-Z])/," $1").replace(/middle/gi,M).toLowerCase(),this.x=(a.match(/left|right/i)||a.match(/center/)||["inherit"])[0].toLowerCase(),this.y=(a.match(/top|bottom|center/i)||["inherit"])[0].toLowerCase(),this.forceY=!!b;var c=a.charAt(0);this.precedance="t"===c||"b"===c?F:E}).prototype;db.invert=function(a,b){this[a]=this[a]===J?L:this[a]===L?J:b||this[a]},db.string=function(a){var b=this.x,c=this.y,d=b!==c?"center"===b||"center"!==c&&(this.precedance===F||this.forceY)?[c,b]:[b,c]:[b];return a!==!1?d.join(" "):d},db.abbrev=function(){var a=this.string(!1);return a[0].charAt(0)+(a[1]&&a[1].charAt(0)||"")},db.clone=function(){return new y(this.string(),this.forceY)},x.toggle=function(a,c){var e=this.cache,f=this.options,g=this.tooltip;if(c){if(/over|enter/.test(c.type)&&e.event&&/out|leave/.test(e.event.type)&&f.show.target.add(c.target).length===f.show.target.length&&g.has(c.relatedTarget).length)return this;e.event=d.event.fix(c)}if(this.waiting&&!a&&(this.hiddenDuringWait=B),!this.rendered)return a?this.render(1):this;if(this.destroyed||this.disabled)return this;var h,i,j,k=a?"show":"hide",l=this.options[k],m=(this.options[a?"hide":"show"],this.options.position),n=this.options.content,o=this.tooltip.css("width"),p=this.tooltip.is(":visible"),q=a||1===l.target.length,r=!c||l.target.length<2||e.target[0]===c.target;return(typeof a).search("boolean|number")&&(a=!p),h=!g.is(":animated")&&p===a&&r,i=h?D:!!this._trigger(k,[90]),this.destroyed?this:(i!==C&&a&&this.focus(c),!i||h?this:(d.attr(g[0],"aria-hidden",!a),a?(this.mouse&&(e.origin=d.event.fix(this.mouse)),d.isFunction(n.text)&&this._updateContent(n.text,C),d.isFunction(n.title)&&this._updateTitle(n.title,C),!A&&"mouse"===m.target&&m.adjust.mouse&&(d(b).bind("mousemove."+P,this._storeMouse),A=B),o||g.css("width",g.outerWidth(C)),this.reposition(c,arguments[2]),o||g.css("width",""),l.solo&&("string"==typeof l.solo?d(l.solo):d(T,l.solo)).not(g).not(l.target).qtip("hide",d.Event("tooltipsolo"))):(clearTimeout(this.timers.show),delete e.origin,A&&!d(T+'[tracking="true"]:visible',l.solo).not(g).length&&(d(b).unbind("mousemove."+P),A=C),this.blur(c)),j=d.proxy(function(){a?(ab.ie&&g[0].style.removeAttribute("filter"),g.css("overflow",""),"string"==typeof l.autofocus&&d(this.options.show.autofocus,g).focus(),this.options.show.target.trigger("qtip-"+this.id+"-inactive")):g.css({display:"",visibility:"",opacity:"",left:"",top:""}),this._trigger(a?"visible":"hidden")},this),l.effect===C||q===C?(g[k](),j()):d.isFunction(l.effect)?(g.stop(1,1),l.effect.call(g,this),g.queue("fx",function(a){j(),a()})):g.fadeTo(90,a?1:0,j),a&&l.target.trigger("qtip-"+this.id+"-inactive"),this))},x.show=function(a){return this.toggle(B,a)},x.hide=function(a){return this.toggle(C,a)},x.focus=function(a){if(!this.rendered||this.destroyed)return this;var b=d(T),c=this.tooltip,e=parseInt(c[0].style.zIndex,10),f=w.zindex+b.length;return c.hasClass(X)||this._trigger("focus",[f],a)&&(e!==f&&(b.each(function(){this.style.zIndex>e&&(this.style.zIndex=this.style.zIndex-1)}),b.filter("."+X).qtip("blur",a)),c.addClass(X)[0].style.zIndex=f),this},x.blur=function(a){return!this.rendered||this.destroyed?this:(this.tooltip.removeClass(X),this._trigger("blur",[this.tooltip.css("zIndex")],a),this)},x.disable=function(a){return this.destroyed?this:("toggle"===a?a=!(this.rendered?this.tooltip.hasClass(Z):this.disabled):"boolean"!=typeof a&&(a=B),this.rendered&&this.tooltip.toggleClass(Z,a).attr("aria-disabled",a),this.disabled=!!a,this)},x.enable=function(){return this.disable(C)},x._createButton=function(){var a=this,b=this.elements,c=b.tooltip,e=this.options.content.button,f="string"==typeof e,g=f?e:"Close tooltip";b.button&&b.button.remove(),b.button=e.jquery?e:d("<a />",{"class":"qtip-close "+(this.options.style.widget?"":P+"-icon"),title:g,"aria-label":g}).prepend(d("<span />",{"class":"ui-icon ui-icon-close",html:"&times;"})),b.button.appendTo(b.titlebar||c).attr("role","button").click(function(b){return c.hasClass(Z)||a.hide(b),C})},x._updateButton=function(a){if(!this.rendered)return C;var b=this.elements.button;a?this._createButton():b.remove()},x._setWidget=function(){var a=this.options.style.widget,b=this.elements,c=b.tooltip,d=c.hasClass(Z);c.removeClass(Z),Z=a?"ui-state-disabled":"qtip-disabled",c.toggleClass(Z,d),c.toggleClass("ui-helper-reset "+k(),a).toggleClass(W,this.options.style.def&&!a),b.content&&b.content.toggleClass(k("content"),a),b.titlebar&&b.titlebar.toggleClass(k("header"),a),b.button&&b.button.toggleClass(P+"-icon",!a)},x._storeMouse=function(a){return(this.mouse=d.event.fix(a)).type="mousemove",this},x._bind=function(a,b,c,e,f){if(a&&c&&b.length){var g="."+this._id+(e?"-"+e:"");return d(a).bind((b.split?b:b.join(g+" "))+g,d.proxy(c,f||this)),this}},x._unbind=function(a,b){return a&&d(a).unbind("."+this._id+(b?"-"+b:"")),this},x._trigger=function(a,b,c){var e=d.Event("tooltip"+a);return e.originalEvent=c&&d.extend({},c)||this.cache.event||D,this.triggering=a,this.tooltip.trigger(e,[this].concat(b||[])),this.triggering=C,!e.isDefaultPrevented()},x._bindEvents=function(a,b,c,e,f,g){var h=c.filter(e).add(e.filter(c)),i=[];h.length&&(d.each(b,function(b,c){var e=d.inArray(c,a);e>-1&&i.push(a.splice(e,1)[0])}),i.length&&(this._bind(h,i,function(a){var b=this.rendered?this.tooltip[0].offsetWidth>0:!1;(b?g:f).call(this,a)}),c=c.not(h),e=e.not(h))),this._bind(c,a,f),this._bind(e,b,g)},x._assignInitialEvents=function(a){function b(a){return this.disabled||this.destroyed?C:(this.cache.event=a&&d.event.fix(a),this.cache.target=a&&d(a.target),clearTimeout(this.timers.show),void(this.timers.show=l.call(this,function(){this.render("object"==typeof a||c.show.ready)},c.prerender?0:c.show.delay)))}var c=this.options,e=c.show.target,f=c.hide.target,g=c.show.event?d.trim(""+c.show.event).split(" "):[],h=c.hide.event?d.trim(""+c.hide.event).split(" "):[];this._bind(this.elements.target,["remove","removeqtip"],function(){this.destroy(!0)},"destroy"),/mouse(over|enter)/i.test(c.show.event)&&!/mouse(out|leave)/i.test(c.hide.event)&&h.push("mouseleave"),this._bind(e,"mousemove",function(a){this._storeMouse(a),this.cache.onTarget=B}),this._bindEvents(g,h,e,f,b,function(){return this.timers?void clearTimeout(this.timers.show):C}),(c.show.ready||c.prerender)&&b.call(this,a)},x._assignEvents=function(){var c=this,e=this.options,f=e.position,g=this.tooltip,h=e.show.target,i=e.hide.target,j=f.container,k=f.viewport,l=d(b),q=(d(b.body),d(a)),r=e.show.event?d.trim(""+e.show.event).split(" "):[],s=e.hide.event?d.trim(""+e.hide.event).split(" "):[];d.each(e.events,function(a,b){c._bind(g,"toggle"===a?["tooltipshow","tooltiphide"]:["tooltip"+a],b,null,g)}),/mouse(out|leave)/i.test(e.hide.event)&&"window"===e.hide.leave&&this._bind(l,["mouseout","blur"],function(a){/select|option/.test(a.target.nodeName)||a.relatedTarget||this.hide(a)}),e.hide.fixed?i=i.add(g.addClass(V)):/mouse(over|enter)/i.test(e.show.event)&&this._bind(i,"mouseleave",function(){clearTimeout(this.timers.show)}),(""+e.hide.event).indexOf("unfocus")>-1&&this._bind(j.closest("html"),["mousedown","touchstart"],function(a){var b=d(a.target),c=this.rendered&&!this.tooltip.hasClass(Z)&&this.tooltip[0].offsetWidth>0,e=b.parents(T).filter(this.tooltip[0]).length>0;b[0]===this.target[0]||b[0]===this.tooltip[0]||e||this.target.has(b[0]).length||!c||this.hide(a)}),"number"==typeof e.hide.inactive&&(this._bind(h,"qtip-"+this.id+"-inactive",o,"inactive"),this._bind(i.add(g),w.inactiveEvents,o)),this._bindEvents(r,s,h,i,m,n),this._bind(h.add(g),"mousemove",function(a){if("number"==typeof e.hide.distance){var b=this.cache.origin||{},c=this.options.hide.distance,d=Math.abs;(d(a.pageX-b.pageX)>=c||d(a.pageY-b.pageY)>=c)&&this.hide(a)}this._storeMouse(a)}),"mouse"===f.target&&f.adjust.mouse&&(e.hide.event&&this._bind(h,["mouseenter","mouseleave"],function(a){return this.cache?void(this.cache.onTarget="mouseenter"===a.type):C}),this._bind(l,"mousemove",function(a){this.rendered&&this.cache.onTarget&&!this.tooltip.hasClass(Z)&&this.tooltip[0].offsetWidth>0&&this.reposition(a)})),(f.adjust.resize||k.length)&&this._bind(d.event.special.resize?k:q,"resize",p),f.adjust.scroll&&this._bind(q.add(f.container),"scroll",p)},x._unassignEvents=function(){var c=this.options,e=c.show.target,f=c.hide.target,g=d.grep([this.elements.target[0],this.rendered&&this.tooltip[0],c.position.container[0],c.position.viewport[0],c.position.container.closest("html")[0],a,b],function(a){return"object"==typeof a});e&&e.toArray&&(g=g.concat(e.toArray())),f&&f.toArray&&(g=g.concat(f.toArray())),this._unbind(g)._unbind(g,"destroy")._unbind(g,"inactive")},d(function(){q(T,["mouseenter","mouseleave"],function(a){var b="mouseenter"===a.type,c=d(a.currentTarget),e=d(a.relatedTarget||a.target),f=this.options;b?(this.focus(a),c.hasClass(V)&&!c.hasClass(Z)&&clearTimeout(this.timers.hide)):"mouse"===f.position.target&&f.position.adjust.mouse&&f.hide.event&&f.show.target&&!e.closest(f.show.target[0]).length&&this.hide(a),c.toggleClass(Y,b)}),q("["+R+"]",U,o)}),w=d.fn.qtip=function(a,b,e){var f=(""+a).toLowerCase(),g=D,i=d.makeArray(arguments).slice(1),j=i[i.length-1],k=this[0]?d.data(this[0],P):D;return!arguments.length&&k||"api"===f?k:"string"==typeof a?(this.each(function(){var a=d.data(this,P);if(!a)return B;if(j&&j.timeStamp&&(a.cache.event=j),!b||"option"!==f&&"options"!==f)a[f]&&a[f].apply(a,i);else{if(e===c&&!d.isPlainObject(b))return g=a.get(b),C;a.set(b,e)}}),g!==D?g:this):"object"!=typeof a&&arguments.length?void 0:(k=h(d.extend(B,{},a)),this.each(function(a){var b,c;return c=d.isArray(k.id)?k.id[a]:k.id,c=!c||c===C||c.length<1||w.api[c]?w.nextid++:c,b=r(d(this),c,k),b===C?B:(w.api[c]=b,d.each(O,function(){"initialize"===this.initialize&&this(b)}),void b._assignInitialEvents(j))}))},d.qtip=e,w.api={},d.each({attr:function(a,b){if(this.length){var c=this[0],e="title",f=d.data(c,"qtip");if(a===e&&f&&"object"==typeof f&&f.options.suppress)return arguments.length<2?d.attr(c,_):(f&&f.options.content.attr===e&&f.cache.attr&&f.set("content.text",b),this.attr(_,b))}return d.fn["attr"+$].apply(this,arguments)},clone:function(a){var b=(d([]),d.fn["clone"+$].apply(this,arguments));return a||b.filter("["+_+"]").attr("title",function(){return d.attr(this,_)}).removeAttr(_),b}},function(a,b){if(!b||d.fn[a+$])return B;var c=d.fn[a+$]=d.fn[a];d.fn[a]=function(){return b.apply(this,arguments)||c.apply(this,arguments)}}),d.ui||(d["cleanData"+$]=d.cleanData,d.cleanData=function(a){for(var b,c=0;(b=d(a[c])).length;c++)if(b.attr(Q))try{b.triggerHandler("removeqtip")}catch(e){}d["cleanData"+$].apply(this,arguments)}),w.version="2.2.1",w.nextid=0,w.inactiveEvents=U,w.zindex=15e3,w.defaults={prerender:C,id:C,overwrite:B,suppress:B,content:{text:B,attr:"title",title:C,button:C},position:{my:"top left",at:"bottom right",target:C,container:C,viewport:C,adjust:{x:0,y:0,mouse:B,scroll:B,resize:B,method:"flipinvert flipinvert"},effect:function(a,b){d(this).animate(b,{duration:200,queue:C})}},show:{target:C,event:"mouseenter",effect:B,delay:90,solo:C,ready:C,autofocus:C},hide:{target:C,event:"mouseleave",effect:B,delay:0,fixed:C,inactive:C,leave:"window",distance:C},style:{classes:"",widget:C,width:C,height:C,def:B},events:{render:D,move:D,show:D,hide:D,toggle:D,visible:D,hidden:D,focus:D,blur:D}};var eb,fb="margin",gb="border",hb="color",ib="background-color",jb="transparent",kb=" !important",lb=!!b.createElement("canvas").getContext,mb=/rgba?\(0, 0, 0(, 0)?\)|transparent|#123456/i,nb={},ob=["Webkit","O","Moz","ms"];if(lb)var pb=a.devicePixelRatio||1,qb=function(){var a=b.createElement("canvas").getContext("2d");return a.backingStorePixelRatio||a.webkitBackingStorePixelRatio||a.mozBackingStorePixelRatio||a.msBackingStorePixelRatio||a.oBackingStorePixelRatio||1}(),rb=pb/qb;else var sb=function(a,b,c){return"<qtipvml:"+a+' xmlns="urn:schemas-microsoft.com:vml" class="qtip-vml" '+(b||"")+' style="behavior: url(#default#VML); '+(c||"")+'" />'};d.extend(v.prototype,{init:function(a){var b,c;c=this.element=a.elements.tip=d("<div />",{"class":P+"-tip"}).prependTo(a.tooltip),lb?(b=d("<canvas />").appendTo(this.element)[0].getContext("2d"),b.lineJoin="miter",b.miterLimit=1e5,b.save()):(b=sb("shape",'coordorigin="0,0"',"position:absolute;"),this.element.html(b+b),a._bind(d("*",c).add(c),["click","mousedown"],function(a){a.stopPropagation()},this._ns)),a._bind(a.tooltip,"tooltipmove",this.reposition,this._ns,this),this.create()},_swapDimensions:function(){this.size[0]=this.options.height,this.size[1]=this.options.width},_resetDimensions:function(){this.size[0]=this.options.width,this.size[1]=this.options.height},_useTitle:function(a){var b=this.qtip.elements.titlebar;return b&&(a.y===I||a.y===M&&this.element.position().top+this.size[1]/2+this.options.offset<b.outerHeight(B))},_parseCorner:function(a){var b=this.qtip.options.position.my;return a===C||b===C?a=C:a===B?a=new y(b.string()):a.string||(a=new y(a),a.fixed=B),a},_parseWidth:function(a,b,c){var d=this.qtip.elements,e=gb+s(b)+"Width";return(c?u(c,e):u(d.content,e)||u(this._useTitle(a)&&d.titlebar||d.content,e)||u(d.tooltip,e))||0},_parseRadius:function(a){var b=this.qtip.elements,c=gb+s(a.y)+s(a.x)+"Radius";return ab.ie<9?0:u(this._useTitle(a)&&b.titlebar||b.content,c)||u(b.tooltip,c)||0},_invalidColour:function(a,b,c){var d=a.css(b);return!d||c&&d===a.css(c)||mb.test(d)?C:d},_parseColours:function(a){var b=this.qtip.elements,c=this.element.css("cssText",""),e=gb+s(a[a.precedance])+s(hb),f=this._useTitle(a)&&b.titlebar||b.content,g=this._invalidColour,h=[];return h[0]=g(c,ib)||g(f,ib)||g(b.content,ib)||g(b.tooltip,ib)||c.css(ib),h[1]=g(c,e,hb)||g(f,e,hb)||g(b.content,e,hb)||g(b.tooltip,e,hb)||b.tooltip.css(e),d("*",c).add(c).css("cssText",ib+":"+jb+kb+";"+gb+":0"+kb+";"),h},_calculateSize:function(a){var b,c,d,e=a.precedance===F,f=this.options.width,g=this.options.height,h="c"===a.abbrev(),i=(e?f:g)*(h?.5:1),j=Math.pow,k=Math.round,l=Math.sqrt(j(i,2)+j(g,2)),m=[this.border/i*l,this.border/g*l];return m[2]=Math.sqrt(j(m[0],2)-j(this.border,2)),m[3]=Math.sqrt(j(m[1],2)-j(this.border,2)),b=l+m[2]+m[3]+(h?0:m[0]),c=b/l,d=[k(c*f),k(c*g)],e?d:d.reverse()},_calculateTip:function(a,b,c){c=c||1,b=b||this.size;var d=b[0]*c,e=b[1]*c,f=Math.ceil(d/2),g=Math.ceil(e/2),h={br:[0,0,d,e,d,0],bl:[0,0,d,0,0,e],tr:[0,e,d,0,d,e],tl:[0,0,0,e,d,e],tc:[0,e,f,0,d,e],bc:[0,0,d,0,f,e],rc:[0,0,d,g,0,e],lc:[d,0,d,e,0,g]};return h.lt=h.br,h.rt=h.bl,h.lb=h.tr,h.rb=h.tl,h[a.abbrev()]},_drawCoords:function(a,b){a.beginPath(),a.moveTo(b[0],b[1]),a.lineTo(b[2],b[3]),a.lineTo(b[4],b[5]),a.closePath()},create:function(){var a=this.corner=(lb||ab.ie)&&this._parseCorner(this.options.corner);return(this.enabled=!!this.corner&&"c"!==this.corner.abbrev())&&(this.qtip.cache.corner=a.clone(),this.update()),this.element.toggle(this.enabled),this.corner},update:function(b,c){if(!this.enabled)return this;var e,f,g,h,i,j,k,l,m=this.qtip.elements,n=this.element,o=n.children(),p=this.options,q=this.size,r=p.mimic,s=Math.round;b||(b=this.qtip.cache.corner||this.corner),r===C?r=b:(r=new y(r),r.precedance=b.precedance,"inherit"===r.x?r.x=b.x:"inherit"===r.y?r.y=b.y:r.x===r.y&&(r[b.precedance]=b[b.precedance])),f=r.precedance,b.precedance===E?this._swapDimensions():this._resetDimensions(),e=this.color=this._parseColours(b),e[1]!==jb?(l=this.border=this._parseWidth(b,b[b.precedance]),p.border&&1>l&&!mb.test(e[1])&&(e[0]=e[1]),this.border=l=p.border!==B?p.border:l):this.border=l=0,k=this.size=this._calculateSize(b),n.css({width:k[0],height:k[1],lineHeight:k[1]+"px"}),j=b.precedance===F?[s(r.x===J?l:r.x===L?k[0]-q[0]-l:(k[0]-q[0])/2),s(r.y===I?k[1]-q[1]:0)]:[s(r.x===J?k[0]-q[0]:0),s(r.y===I?l:r.y===K?k[1]-q[1]-l:(k[1]-q[1])/2)],lb?(g=o[0].getContext("2d"),g.restore(),g.save(),g.clearRect(0,0,6e3,6e3),h=this._calculateTip(r,q,rb),i=this._calculateTip(r,this.size,rb),o.attr(G,k[0]*rb).attr(H,k[1]*rb),o.css(G,k[0]).css(H,k[1]),this._drawCoords(g,i),g.fillStyle=e[1],g.fill(),g.translate(j[0]*rb,j[1]*rb),this._drawCoords(g,h),g.fillStyle=e[0],g.fill()):(h=this._calculateTip(r),h="m"+h[0]+","+h[1]+" l"+h[2]+","+h[3]+" "+h[4]+","+h[5]+" xe",j[2]=l&&/^(r|b)/i.test(b.string())?8===ab.ie?2:1:0,o.css({coordsize:k[0]+l+" "+(k[1]+l),antialias:""+(r.string().indexOf(M)>-1),left:j[0]-j[2]*Number(f===E),top:j[1]-j[2]*Number(f===F),width:k[0]+l,height:k[1]+l}).each(function(a){var b=d(this);b[b.prop?"prop":"attr"]({coordsize:k[0]+l+" "+(k[1]+l),path:h,fillcolor:e[0],filled:!!a,stroked:!a}).toggle(!(!l&&!a)),!a&&b.html(sb("stroke",'weight="'+2*l+'px" color="'+e[1]+'" miterlimit="1000" joinstyle="miter"'))})),a.opera&&setTimeout(function(){m.tip.css({display:"inline-block",visibility:"visible"})},1),c!==C&&this.calculate(b,k)},calculate:function(a,b){if(!this.enabled)return C;var c,e,f=this,g=this.qtip.elements,h=this.element,i=this.options.offset,j=(g.tooltip.hasClass("ui-widget"),{});return a=a||this.corner,c=a.precedance,b=b||this._calculateSize(a),e=[a.x,a.y],c===E&&e.reverse(),d.each(e,function(d,e){var h,k,l;e===M?(h=c===F?J:I,j[h]="50%",j[fb+"-"+h]=-Math.round(b[c===F?0:1]/2)+i):(h=f._parseWidth(a,e,g.tooltip),k=f._parseWidth(a,e,g.content),l=f._parseRadius(a),j[e]=Math.max(-f.border,d?k:i+(l>h?l:-h)))
}),j[a[c]]-=b[c===E?0:1],h.css({margin:"",top:"",bottom:"",left:"",right:""}).css(j),j},reposition:function(a,b,d){function e(a,b,c,d,e){a===N&&j.precedance===b&&k[d]&&j[c]!==M?j.precedance=j.precedance===E?F:E:a!==N&&k[d]&&(j[b]=j[b]===M?k[d]>0?d:e:j[b]===d?e:d)}function f(a,b,e){j[a]===M?p[fb+"-"+b]=o[a]=g[fb+"-"+b]-k[b]:(h=g[e]!==c?[k[b],-g[b]]:[-k[b],g[b]],(o[a]=Math.max(h[0],h[1]))>h[0]&&(d[b]-=k[b],o[b]=C),p[g[e]!==c?e:b]=o[a])}if(this.enabled){var g,h,i=b.cache,j=this.corner.clone(),k=d.adjusted,l=b.options.position.adjust.method.split(" "),m=l[0],n=l[1]||l[0],o={left:C,top:C,x:0,y:0},p={};this.corner.fixed!==B&&(e(m,E,F,J,L),e(n,F,E,I,K),(j.string()!==i.corner.string()||i.cornerTop!==k.top||i.cornerLeft!==k.left)&&this.update(j,C)),g=this.calculate(j),g.right!==c&&(g.left=-g.right),g.bottom!==c&&(g.top=-g.bottom),g.user=this.offset,(o.left=m===N&&!!k.left)&&f(E,J,L),(o.top=n===N&&!!k.top)&&f(F,I,K),this.element.css(p).toggle(!(o.x&&o.y||j.x===M&&o.y||j.y===M&&o.x)),d.left-=g.left.charAt?g.user:m!==N||o.top||!o.left&&!o.top?g.left+this.border:0,d.top-=g.top.charAt?g.user:n!==N||o.left||!o.left&&!o.top?g.top+this.border:0,i.cornerLeft=k.left,i.cornerTop=k.top,i.corner=j.clone()}},destroy:function(){this.qtip._unbind(this.qtip.tooltip,this._ns),this.qtip.elements.tip&&this.qtip.elements.tip.find("*").remove().end().remove()}}),eb=O.tip=function(a){return new v(a,a.options.style.tip)},eb.initialize="render",eb.sanitize=function(a){if(a.style&&"tip"in a.style){var b=a.style.tip;"object"!=typeof b&&(b=a.style.tip={corner:b}),/string|boolean/i.test(typeof b.corner)||(b.corner=B)}},z.tip={"^position.my|style.tip.(corner|mimic|border)$":function(){this.create(),this.qtip.reposition()},"^style.tip.(height|width)$":function(a){this.size=[a.width,a.height],this.update(),this.qtip.reposition()},"^content.title|style.(classes|widget)$":function(){this.update()}},d.extend(B,w.defaults,{style:{tip:{corner:B,mimic:C,width:6,height:6,border:B,offset:0}}})})}(window,document);
;
/* qTip2 v2.2.1 | Plugins: tips | Styles: core basic css3 | qtip2.com | Licensed MIT | Sun Sep 07 2014 08:23:14 */

/*!
 * EventEmitter v4.2.6 - git.io/ee
 * Oliver Caldwell
 * MIT license
 * @preserve
 */
(function(){"use strict";function a(){}function b(a,b){for(var c=a.length;c--;)if(a[c].listener===b)return c;return-1}function c(a){return function(){return this[a].apply(this,arguments)}}var d=a.prototype,e=this,f=e.EventEmitter;d.getListeners=function(a){var b,c,d=this._getEvents();if("object"==typeof a){b={};for(c in d)d.hasOwnProperty(c)&&a.test(c)&&(b[c]=d[c])}else b=d[a]||(d[a]=[]);return b},d.flattenListeners=function(a){var b,c=[];for(b=0;b<a.length;b+=1)c.push(a[b].listener);return c},d.getListenersAsObject=function(a){var b,c=this.getListeners(a);return c instanceof Array&&(b={},b[a]=c),b||c},d.addListener=function(a,c){var d,e=this.getListenersAsObject(a),f="object"==typeof c;for(d in e)e.hasOwnProperty(d)&&-1===b(e[d],c)&&e[d].push(f?c:{listener:c,once:!1});return this},d.on=c("addListener"),d.addOnceListener=function(a,b){return this.addListener(a,{listener:b,once:!0})},d.once=c("addOnceListener"),d.defineEvent=function(a){return this.getListeners(a),this},d.defineEvents=function(a){for(var b=0;b<a.length;b+=1)this.defineEvent(a[b]);return this},d.removeListener=function(a,c){var d,e,f=this.getListenersAsObject(a);for(e in f)f.hasOwnProperty(e)&&(d=b(f[e],c),-1!==d&&f[e].splice(d,1));return this},d.off=c("removeListener"),d.addListeners=function(a,b){return this.manipulateListeners(!1,a,b)},d.removeListeners=function(a,b){return this.manipulateListeners(!0,a,b)},d.manipulateListeners=function(a,b,c){var d,e,f=a?this.removeListener:this.addListener,g=a?this.removeListeners:this.addListeners;if("object"!=typeof b||b instanceof RegExp)for(d=c.length;d--;)f.call(this,b,c[d]);else for(d in b)b.hasOwnProperty(d)&&(e=b[d])&&("function"==typeof e?f.call(this,d,e):g.call(this,d,e));return this},d.removeEvent=function(a){var b,c=typeof a,d=this._getEvents();if("string"===c)delete d[a];else if("object"===c)for(b in d)d.hasOwnProperty(b)&&a.test(b)&&delete d[b];else delete this._events;return this},d.removeAllListeners=c("removeEvent"),d.emitEvent=function(a,b){var c,d,e,f,g=this.getListenersAsObject(a);for(e in g)if(g.hasOwnProperty(e))for(d=g[e].length;d--;)c=g[e][d],c.once===!0&&this.removeListener(a,c.listener),f=c.listener.apply(this,b||[]),f===this._getOnceReturnValue()&&this.removeListener(a,c.listener);return this},d.trigger=c("emitEvent"),d.emit=function(a){var b=Array.prototype.slice.call(arguments,1);return this.emitEvent(a,b)},d.setOnceReturnValue=function(a){return this._onceReturnValue=a,this},d._getOnceReturnValue=function(){return this.hasOwnProperty("_onceReturnValue")?this._onceReturnValue:!0},d._getEvents=function(){return this._events||(this._events={})},a.noConflict=function(){return e.EventEmitter=f,a},"function"==typeof define&&define.amd?define(function(){return a}):"object"==typeof module&&module.exports?module.exports=a:this.EventEmitter=a}).call(this),/*!
 * eventie v1.0.3
 * event binding helper
 *   eventie.bind( elem, 'click', myFn )
 *   eventie.unbind( elem, 'click', myFn )
 */
function(a){"use strict";var b=document.documentElement,c=function(){};b.addEventListener?c=function(a,b,c){a.addEventListener(b,c,!1)}:b.attachEvent&&(c=function(b,c,d){b[c+d]=d.handleEvent?function(){var b=a.event;b.target=b.target||b.srcElement,d.handleEvent.call(d,b)}:function(){var c=a.event;c.target=c.target||c.srcElement,d.call(b,c)},b.attachEvent("on"+c,b[c+d])});var d=function(){};b.removeEventListener?d=function(a,b,c){a.removeEventListener(b,c,!1)}:b.detachEvent&&(d=function(a,b,c){a.detachEvent("on"+b,a[b+c]);try{delete a[b+c]}catch(d){a[b+c]=void 0}});var e={bind:c,unbind:d};"function"==typeof define&&define.amd?define(e):a.eventie=e}(this),/*!
 * imagesLoaded v3.0.2
 * JavaScript is all like "You images are done yet or what?"
 */
function(a){"use strict";function b(a,b){for(var c in b)a[c]=b[c];return a}function c(a){return"[object Array]"===i.call(a)}function d(a){var b=[];if(c(a))b=a;else if("number"==typeof a.length)for(var d=0,e=a.length;e>d;d++)b.push(a[d]);else b.push(a);return b}function e(a,c){function e(a,c,g){if(!(this instanceof e))return new e(a,c);"string"==typeof a&&(a=document.querySelectorAll(a)),this.elements=d(a),this.options=b({},this.options),"function"==typeof c?g=c:b(this.options,c),g&&this.on("always",g),this.getImages(),f&&(this.jqDeferred=new f.Deferred);var h=this;setTimeout(function(){h.check()})}function i(a){this.img=a}e.prototype=new a,e.prototype.options={},e.prototype.getImages=function(){this.images=[];for(var a=0,b=this.elements.length;b>a;a++){var c=this.elements[a];"IMG"===c.nodeName&&this.addImage(c);for(var d=c.querySelectorAll("img"),e=0,f=d.length;f>e;e++){var g=d[e];this.addImage(g)}}},e.prototype.addImage=function(a){var b=new i(a);this.images.push(b)},e.prototype.check=function(){function a(a,e){return b.options.debug&&h&&g.log("confirm",a,e),b.progress(a),c++,c===d&&b.complete(),!0}var b=this,c=0,d=this.images.length;if(this.hasAnyBroken=!1,!d)return void this.complete();for(var e=0;d>e;e++){var f=this.images[e];f.on("confirm",a),f.check()}},e.prototype.progress=function(a){this.hasAnyBroken=this.hasAnyBroken||!a.isLoaded,this.emit("progress",this,a),this.jqDeferred&&this.jqDeferred.notify(this,a)},e.prototype.complete=function(){var a=this.hasAnyBroken?"fail":"done";if(this.isComplete=!0,this.emit(a,this),this.emit("always",this),this.jqDeferred){var b=this.hasAnyBroken?"reject":"resolve";this.jqDeferred[b](this)}},f&&(f.fn.imagesLoaded=function(a,b){var c=new e(this,a,b);return c.jqDeferred.promise(f(this))});var j={};return i.prototype=new a,i.prototype.check=function(){var a=j[this.img.src];if(a)return void this.useCached(a);if(j[this.img.src]=this,this.img.complete&&void 0!==this.img.naturalWidth)return void this.confirm(0!==this.img.naturalWidth,"naturalWidth");var b=this.proxyImage=new Image;c.bind(b,"load",this),c.bind(b,"error",this),b.src=this.img.src},i.prototype.useCached=function(a){if(a.isConfirmed)this.confirm(a.isLoaded,"cached was confirmed");else{var b=this;a.on("confirm",function(a){return b.confirm(a.isLoaded,"cache emitted confirmed"),!0})}},i.prototype.confirm=function(a,b){this.isConfirmed=!0,this.isLoaded=a,this.emit("confirm",this,b)},i.prototype.handleEvent=function(a){var b="on"+a.type;this[b]&&this[b](a)},i.prototype.onload=function(){this.confirm(!0,"onload"),this.unbindProxyEvents()},i.prototype.onerror=function(){this.confirm(!1,"onerror"),this.unbindProxyEvents()},i.prototype.unbindProxyEvents=function(){c.unbind(this.proxyImage,"load",this),c.unbind(this.proxyImage,"error",this)},e}var f=a.jQuery,g=a.console,h="undefined"!=typeof g,i=Object.prototype.toString;"function"==typeof define&&define.amd?define(["eventEmitter","eventie"],e):a.imagesLoaded=e(a.EventEmitter,a.eventie)}(window);
;
/*!
 * jCarousel - Riding carousels with jQuery
 *   http://sorgalla.com/jcarousel/
 *
 * Copyright (c) 2006 Jan Sorgalla (http://sorgalla.com)
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 *
 * Built on top of the jQuery library
 *   http://jquery.com
 *
 * Inspired by the "Carousel Component" by Bill Scott
 *   http://billwscott.com/carousel/
 */

(function(a){var b={vertical:!1,rtl:!1,start:1,offset:1,size:null,scroll:3,visible:null,animation:"normal",easing:"swing",auto:0,wrap:null,initCallback:null,setupCallback:null,reloadCallback:null,itemLoadCallback:null,itemFirstInCallback:null,itemFirstOutCallback:null,itemLastInCallback:null,itemLastOutCallback:null,itemVisibleInCallback:null,itemVisibleOutCallback:null,animationStepCallback:null,buttonNextHTML:"<div></div>",buttonPrevHTML:"<div></div>",buttonNextEvent:"click",buttonPrevEvent:"click",buttonNextCallback:null,buttonPrevCallback:null,itemFallbackDimension:null},c=!1;a(window).bind("load.jcarousel",function(){c=!0}),a.jcarousel=function(e,f){this.options=a.extend({},b,f||{}),this.locked=!1,this.autoStopped=!1,this.container=null,this.clip=null,this.list=null,this.buttonNext=null,this.buttonPrev=null,this.buttonNextState=null,this.buttonPrevState=null,f&&void 0!==f.rtl||(this.options.rtl="rtl"==(a(e).attr("dir")||a("html").attr("dir")||"").toLowerCase()),this.wh=this.options.vertical?"height":"width",this.lt=this.options.vertical?"top":this.options.rtl?"right":"left";for(var g="",h=e.className.split(" "),i=0;h.length>i;i++)if(-1!=h[i].indexOf("jcarousel-skin")){a(e).removeClass(h[i]),g=h[i];break}"UL"==e.nodeName.toUpperCase()||"OL"==e.nodeName.toUpperCase()?(this.list=a(e),this.clip=this.list.parents(".jcarousel-clip"),this.container=this.list.parents(".jcarousel-container")):(this.container=a(e),this.list=this.container.find("ul,ol").eq(0),this.clip=this.container.find(".jcarousel-clip")),0===this.clip.size()&&(this.clip=this.list.wrap("<div></div>").parent()),0===this.container.size()&&(this.container=this.clip.wrap("<div></div>").parent()),""!==g&&-1==this.container.parent()[0].className.indexOf("jcarousel-skin")&&this.container.wrap('<div class=" '+g+'"></div>'),this.buttonPrev=a(".jcarousel-prev",this.container),0===this.buttonPrev.size()&&null!==this.options.buttonPrevHTML&&(this.buttonPrev=a(this.options.buttonPrevHTML).appendTo(this.container)),this.buttonPrev.addClass(this.className("jcarousel-prev")),this.buttonNext=a(".jcarousel-next",this.container),0===this.buttonNext.size()&&null!==this.options.buttonNextHTML&&(this.buttonNext=a(this.options.buttonNextHTML).appendTo(this.container)),this.buttonNext.addClass(this.className("jcarousel-next")),this.clip.addClass(this.className("jcarousel-clip")).css({position:"relative"}),this.list.addClass(this.className("jcarousel-list")).css({overflow:"hidden",position:"relative",top:0,margin:0,padding:0}).css(this.options.rtl?"right":"left",0),this.container.addClass(this.className("jcarousel-container")).css({position:"relative"}),!this.options.vertical&&this.options.rtl&&this.container.addClass("jcarousel-direction-rtl").attr("dir","rtl");var j=null!==this.options.visible?Math.ceil(this.clipping()/this.options.visible):null,k=this.list.children("li"),l=this;if(k.size()>0){var m=0,n=this.options.offset;k.each(function(){l.format(this,n++),m+=l.dimension(this,j)}),this.list.css(this.wh,m+100+"px"),f&&void 0!==f.size||(this.options.size=k.size())}this.container.css("display","block"),this.buttonNext.css("display","block"),this.buttonPrev.css("display","block"),this.funcNext=function(){return l.next(),!1},this.funcPrev=function(){return l.prev(),!1},this.funcResize=function(){l.resizeTimer&&clearTimeout(l.resizeTimer),l.resizeTimer=setTimeout(function(){l.reload()},100)},null!==this.options.initCallback&&this.options.initCallback(this,"init"),!c&&d.isSafari()?(this.buttons(!1,!1),a(window).bind("load.jcarousel",function(){l.setup()})):this.setup()};var d=a.jcarousel;d.fn=d.prototype={jcarousel:"0.2.9"},d.fn.extend=d.extend=a.extend,d.fn.extend({setup:function(){if(this.first=null,this.last=null,this.prevFirst=null,this.prevLast=null,this.animating=!1,this.timer=null,this.resizeTimer=null,this.tail=null,this.inTail=!1,!this.locked){this.list.css(this.lt,this.pos(this.options.offset)+"px");var b=this.pos(this.options.start,!0);this.prevFirst=this.prevLast=null,this.animate(b,!1),a(window).unbind("resize.jcarousel",this.funcResize).bind("resize.jcarousel",this.funcResize),null!==this.options.setupCallback&&this.options.setupCallback(this)}},reset:function(){this.list.empty(),this.list.css(this.lt,"0px"),this.list.css(this.wh,"10px"),null!==this.options.initCallback&&this.options.initCallback(this,"reset"),this.setup()},reload:function(){if(null!==this.tail&&this.inTail&&this.list.css(this.lt,d.intval(this.list.css(this.lt))+this.tail),this.tail=null,this.inTail=!1,null!==this.options.reloadCallback&&this.options.reloadCallback(this),null!==this.options.visible){var a=this,b=Math.ceil(this.clipping()/this.options.visible),c=0,e=0;this.list.children("li").each(function(d){c+=a.dimension(this,b),a.first>d+1&&(e=c)}),this.list.css(this.wh,c+"px"),this.list.css(this.lt,-e+"px")}this.scroll(this.first,!1)},lock:function(){this.locked=!0,this.buttons()},unlock:function(){this.locked=!1,this.buttons()},size:function(a){return void 0!==a&&(this.options.size=a,this.locked||this.buttons()),this.options.size},has:function(a,b){void 0!==b&&b||(b=a),null!==this.options.size&&b>this.options.size&&(b=this.options.size);for(var c=a;b>=c;c++){var d=this.get(c);if(!d.length||d.hasClass("jcarousel-item-placeholder"))return!1}return!0},get:function(b){return a(">.jcarousel-item-"+b,this.list)},add:function(b,c){var e=this.get(b),f=0,g=a(c);if(0===e.length){var h,i=d.intval(b);for(e=this.create(b);;)if(h=this.get(--i),0>=i||h.length){0>=i?this.list.prepend(e):h.after(e);break}}else f=this.dimension(e);"LI"==g.get(0).nodeName.toUpperCase()?(e.replaceWith(g),e=g):e.empty().append(c),this.format(e.removeClass(this.className("jcarousel-item-placeholder")),b);var j=null!==this.options.visible?Math.ceil(this.clipping()/this.options.visible):null,k=this.dimension(e,j)-f;return b>0&&this.first>b&&this.list.css(this.lt,d.intval(this.list.css(this.lt))-k+"px"),this.list.css(this.wh,d.intval(this.list.css(this.wh))+k+"px"),e},remove:function(a){var b=this.get(a);if(b.length&&!(a>=this.first&&this.last>=a)){var c=this.dimension(b);this.first>a&&this.list.css(this.lt,d.intval(this.list.css(this.lt))+c+"px"),b.remove(),this.list.css(this.wh,d.intval(this.list.css(this.wh))-c+"px")}},next:function(){null===this.tail||this.inTail?this.scroll("both"!=this.options.wrap&&"last"!=this.options.wrap||null===this.options.size||this.last!=this.options.size?this.first+this.options.scroll:1):this.scrollTail(!1)},prev:function(){null!==this.tail&&this.inTail?this.scrollTail(!0):this.scroll("both"!=this.options.wrap&&"first"!=this.options.wrap||null===this.options.size||1!=this.first?this.first-this.options.scroll:this.options.size)},scrollTail:function(a){if(!this.locked&&!this.animating&&this.tail){this.pauseAuto();var b=d.intval(this.list.css(this.lt));b=a?b+this.tail:b-this.tail,this.inTail=!a,this.prevFirst=this.first,this.prevLast=this.last,this.animate(b)}},scroll:function(a,b){this.locked||this.animating||(this.pauseAuto(),this.animate(this.pos(a),b))},pos:function(a,b){var c=d.intval(this.list.css(this.lt));if(this.locked||this.animating)return c;"circular"!=this.options.wrap&&(a=1>a?1:this.options.size&&a>this.options.size?this.options.size:a);for(var m,e=this.first>a,f="circular"!=this.options.wrap&&1>=this.first?1:this.first,g=e?this.get(f):this.get(this.last),h=e?f:f-1,i=null,j=0,k=!1,l=0;e?--h>=a:a>++h;)i=this.get(h),k=!i.length,0===i.length&&(i=this.create(h).addClass(this.className("jcarousel-item-placeholder")),g[e?"before":"after"](i),null!==this.first&&"circular"==this.options.wrap&&null!==this.options.size&&(0>=h||h>this.options.size)&&(m=this.get(this.index(h)),m.length&&(i=this.add(h,m.clone(!0))))),g=i,l=this.dimension(i),k&&(j+=l),null!==this.first&&("circular"==this.options.wrap||h>=1&&(null===this.options.size||this.options.size>=h))&&(c=e?c+l:c-l);var n=this.clipping(),o=[],p=0,q=0;for(g=this.get(a-1),h=a;++p;){if(i=this.get(h),k=!i.length,0===i.length&&(i=this.create(h).addClass(this.className("jcarousel-item-placeholder")),0===g.length?this.list.prepend(i):g[e?"before":"after"](i),null!==this.first&&"circular"==this.options.wrap&&null!==this.options.size&&(0>=h||h>this.options.size)&&(m=this.get(this.index(h)),m.length&&(i=this.add(h,m.clone(!0))))),g=i,l=this.dimension(i),0===l)throw Error("jCarousel: No width/height set for items. This will cause an infinite loop. Aborting...");if("circular"!=this.options.wrap&&null!==this.options.size&&h>this.options.size?o.push(i):k&&(j+=l),q+=l,q>=n)break;h++}for(var r=0;o.length>r;r++)o[r].remove();j>0&&(this.list.css(this.wh,this.dimension(this.list)+j+"px"),e&&(c-=j,this.list.css(this.lt,d.intval(this.list.css(this.lt))-j+"px")));var s=a+p-1;if("circular"!=this.options.wrap&&this.options.size&&s>this.options.size&&(s=this.options.size),h>s)for(p=0,h=s,q=0;++p&&(i=this.get(h--),i.length)&&(q+=this.dimension(i),!(q>=n)););var t=s-p+1;if("circular"!=this.options.wrap&&1>t&&(t=1),this.inTail&&e&&(c+=this.tail,this.inTail=!1),this.tail=null,"circular"!=this.options.wrap&&s==this.options.size&&s-p+1>=1){var u=d.intval(this.get(s).css(this.options.vertical?"marginBottom":"marginRight"));q-u>n&&(this.tail=q-n-u)}for(b&&a===this.options.size&&this.tail&&(c-=this.tail,this.inTail=!0);a-->t;)c+=this.dimension(this.get(a));return this.prevFirst=this.first,this.prevLast=this.last,this.first=t,this.last=s,c},animate:function(b,c){if(!this.locked&&!this.animating){this.animating=!0;var d=this,e=function(){if(d.animating=!1,0===b&&d.list.css(d.lt,0),!d.autoStopped&&("circular"==d.options.wrap||"both"==d.options.wrap||"last"==d.options.wrap||null===d.options.size||d.last<d.options.size||d.last==d.options.size&&null!==d.tail&&!d.inTail)&&d.startAuto(),d.buttons(),d.notify("onAfterAnimation"),"circular"==d.options.wrap&&null!==d.options.size)for(var a=d.prevFirst;d.prevLast>=a;a++)null===a||a>=d.first&&d.last>=a||!(1>a||a>d.options.size)||d.remove(a)};if(this.notify("onBeforeAnimation"),this.options.animation&&c!==!1){var f=this.options.vertical?{top:b}:this.options.rtl?{right:b}:{left:b},g={duration:this.options.animation,easing:this.options.easing,complete:e};a.isFunction(this.options.animationStepCallback)&&(g.step=this.options.animationStepCallback),this.list.animate(f,g)}else this.list.css(this.lt,b+"px"),e()}},startAuto:function(a){if(void 0!==a&&(this.options.auto=a),0===this.options.auto)return this.stopAuto();if(null===this.timer){this.autoStopped=!1;var b=this;this.timer=window.setTimeout(function(){b.next()},1e3*this.options.auto)}},stopAuto:function(){this.pauseAuto(),this.autoStopped=!0},pauseAuto:function(){null!==this.timer&&(window.clearTimeout(this.timer),this.timer=null)},buttons:function(a,b){null==a&&(a=!this.locked&&0!==this.options.size&&(this.options.wrap&&"first"!=this.options.wrap||null===this.options.size||this.last<this.options.size),this.locked||this.options.wrap&&"first"!=this.options.wrap||null===this.options.size||!(this.last>=this.options.size)||(a=null!==this.tail&&!this.inTail)),null==b&&(b=!this.locked&&0!==this.options.size&&(this.options.wrap&&"last"!=this.options.wrap||this.first>1),this.locked||this.options.wrap&&"last"!=this.options.wrap||null===this.options.size||1!=this.first||(b=null!==this.tail&&this.inTail));var c=this;this.buttonNext.size()>0?(this.buttonNext.unbind(this.options.buttonNextEvent+".jcarousel",this.funcNext),a&&this.buttonNext.bind(this.options.buttonNextEvent+".jcarousel",this.funcNext),this.buttonNext[a?"removeClass":"addClass"](this.className("jcarousel-next-disabled")).attr("disabled",a?!1:!0),null!==this.options.buttonNextCallback&&this.buttonNext.data("jcarouselstate")!=a&&this.buttonNext.each(function(){c.options.buttonNextCallback(c,this,a)}).data("jcarouselstate",a)):null!==this.options.buttonNextCallback&&this.buttonNextState!=a&&this.options.buttonNextCallback(c,null,a),this.buttonPrev.size()>0?(this.buttonPrev.unbind(this.options.buttonPrevEvent+".jcarousel",this.funcPrev),b&&this.buttonPrev.bind(this.options.buttonPrevEvent+".jcarousel",this.funcPrev),this.buttonPrev[b?"removeClass":"addClass"](this.className("jcarousel-prev-disabled")).attr("disabled",b?!1:!0),null!==this.options.buttonPrevCallback&&this.buttonPrev.data("jcarouselstate")!=b&&this.buttonPrev.each(function(){c.options.buttonPrevCallback(c,this,b)}).data("jcarouselstate",b)):null!==this.options.buttonPrevCallback&&this.buttonPrevState!=b&&this.options.buttonPrevCallback(c,null,b),this.buttonNextState=a,this.buttonPrevState=b},notify:function(a){var b=null===this.prevFirst?"init":this.prevFirst<this.first?"next":"prev";this.callback("itemLoadCallback",a,b),this.prevFirst!==this.first&&(this.callback("itemFirstInCallback",a,b,this.first),this.callback("itemFirstOutCallback",a,b,this.prevFirst)),this.prevLast!==this.last&&(this.callback("itemLastInCallback",a,b,this.last),this.callback("itemLastOutCallback",a,b,this.prevLast)),this.callback("itemVisibleInCallback",a,b,this.first,this.last,this.prevFirst,this.prevLast),this.callback("itemVisibleOutCallback",a,b,this.prevFirst,this.prevLast,this.first,this.last)},callback:function(b,c,d,e,f,g,h){if(null!=this.options[b]&&("object"==typeof this.options[b]||"onAfterAnimation"==c)){var i="object"==typeof this.options[b]?this.options[b][c]:this.options[b];if(a.isFunction(i)){var j=this;if(void 0===e)i(j,d,c);else if(void 0===f)this.get(e).each(function(){i(j,this,e,d,c)});else for(var k=function(a){j.get(a).each(function(){i(j,this,a,d,c)})},l=e;f>=l;l++)null===l||l>=g&&h>=l||k(l)}}},create:function(a){return this.format("<li></li>",a)},format:function(b,c){b=a(b);for(var d=b.get(0).className.split(" "),e=0;d.length>e;e++)-1!=d[e].indexOf("jcarousel-")&&b.removeClass(d[e]);return b.addClass(this.className("jcarousel-item")).addClass(this.className("jcarousel-item-"+c)).css({"float":this.options.rtl?"right":"left","list-style":"none"}).attr("jcarouselindex",c),b},className:function(a){return a+" "+a+(this.options.vertical?"-vertical":"-horizontal")},dimension:function(b,c){var e=a(b);if(null==c)return this.options.vertical?e.innerHeight()+d.intval(e.css("margin-top"))+d.intval(e.css("margin-bottom"))+d.intval(e.css("border-top-width"))+d.intval(e.css("border-bottom-width"))||d.intval(this.options.itemFallbackDimension):e.innerWidth()+d.intval(e.css("margin-left"))+d.intval(e.css("margin-right"))+d.intval(e.css("border-left-width"))+d.intval(e.css("border-right-width"))||d.intval(this.options.itemFallbackDimension);var f=this.options.vertical?c-d.intval(e.css("marginTop"))-d.intval(e.css("marginBottom")):c-d.intval(e.css("marginLeft"))-d.intval(e.css("marginRight"));return a(e).css(this.wh,f+"px"),this.dimension(e)},clipping:function(){return this.options.vertical?this.clip[0].offsetHeight-d.intval(this.clip.css("borderTopWidth"))-d.intval(this.clip.css("borderBottomWidth")):this.clip[0].offsetWidth-d.intval(this.clip.css("borderLeftWidth"))-d.intval(this.clip.css("borderRightWidth"))},index:function(a,b){return null==b&&(b=this.options.size),Math.round(((a-1)/b-Math.floor((a-1)/b))*b)+1}}),d.extend({defaults:function(c){return a.extend(b,c||{})},intval:function(a){return a=parseInt(a,10),isNaN(a)?0:a},windowLoaded:function(){c=!0},isSafari:function(){var a=navigator.userAgent.toLowerCase(),b=/(chrome)[ \/]([\w.]+)/.exec(a)||/(webkit)[ \/]([\w.]+)/.exec(a)||[],c=b[1]||"";return"webkit"===c}}),a.fn.jcarousel=function(b){if("string"==typeof b){var c=a(this).data("jcarousel"),e=Array.prototype.slice.call(arguments,1);return c[b].apply(c,e)}return this.each(function(){var c=a(this).data("jcarousel");c?(b&&a.extend(c.options,b),c.reload()):a(this).data("jcarousel",new d(this,b))})}})(jQuery);
;
/*
 * Check if a string is null or empty.
 */
String.IsNullOrEmpty = function (value) {
    var isNullOrEmpty = true;
    if (value) {
        if (typeof (value) == "string") {
            if (value.length > 0)
                isNullOrEmpty = false;
        }
    }
    return isNullOrEmpty;
}
;
/*
 * Make validator highlight the target control when validation fails.
 * jQuery is needed.
 */
function HighlightValidator(validationGroup, errorCssClass) {
    this.validationGroup = validationGroup;
    this.errorCssClass = errorCssClass;

    // Use this handler in callback
    var _self = this;

    // Bind all validators in the same validation group to check valid status - call this method when DOM is ready.
    this.BindAllValidatorsOnUpdate = function () {
        for (var i = 0; i < Page_Validators.length; i++) {
            var validator = Page_Validators[i];
            if (validator.controltovalidate && validator.validationGroup == _self.validationGroup) {
                _self.BindValidatorOnUpdate(validator.controltovalidate);
            }
        }
    }

    // Bind validator to check valid status
    this.BindValidatorOnUpdate = function (controlID) {
        //jQuery("#" + controlID).bind("blur focus focusin focusout scroll mouseout mouseleave", function (e) {
        jQuery("#" + controlID).bind("blur focus focusin focusout scroll", function (e) {
            this.className = _self.CheckValidStatusForControl(this) ? "" : _self.errorCssClass;
        });
    }

    // Check all validators for a control
    this.CheckValidStatusForControl = function (control) {
        for (var i = 0; i < control.Validators.length; i++) {
            if (!control.Validators[i].isvalid) {
                return false;
            }
        }
        return true;
    }

    // Update all validators - call this method whenever Page_IsValid is checked.
    this.OnUpdateValidators = function () {
        for (var i = 0; i < Page_Validators.length; i++) {
            var validator = Page_Validators[i];
            // *** For each validator, find its associated control, then check its valid status
            if (validator.controltovalidate && validator.validationGroup == _self.validationGroup) {
                var control = document.getElementById(validator.controltovalidate);
                if (control != null) {
                    control.className = _self.CheckValidStatusForControl(control) ? "" : _self.errorCssClass;
                    // *** Bind to check valid status
                    _self.BindValidatorOnUpdate(validator.controltovalidate);
                }
            }
        }
    }
}
;
function FinancingCalculatorOptions() {
    this.validationGroup;
    this.errorCssClass;

    this.vehicleCategory;
    this.vehicleAdId;
    this.vehicleYear;
    this.vehicleMake;
    this.vehicleModel;
    this.vehicleTrim;
    this.vehicleBodyType;
    this.vehicleColour;
    this.vehiclePrice;

    /*#region Sales Tax */
    this.salesTax;
    this.chkIncludeTaxes1_ID;
    this.chkIncludeTaxes2_ID;
    this.lblTaxes_ID;
    this.txtSalesTax_ID;
    /*#endregion */


    /*#region Tooltips */
    this.termTooltip;
    this.paymentFrequencyToolTip;
    this.creditRatingToolTip;
    this.interestTooltip;
    this.downPaymentTooltip;
    this.tradeInTooltip;
    /*#endregion */

    /*#region Payment Frequency Labels */
    this.lblPaymentFrequencyMonthly;
    this.lblPaymentFrequencyBiWeekly;
    this.lblPaymentFrequencyWeekly;
    /*#endregion */

    /*#region Payment Calc financial values */
    this.vehiclePrice;
    this.interestRate;
    this.downPayment;
    this.tradeIn;

    this.defaultTermMonth;
    this.defaultPaymentFrequency;

    this.txtVehiclePrice_ID;
    this.termMonths_ID;
    this.paymentFrequency_ID;
    this.creditRating_ID;
    this.txtInterestRate_ID;
    this.txtDownPayment_ID;
    this.txtTradeIn_ID;

    /*#endregion */

    /*#region Summary */
    this.lblTotalVehiclePrice_ID;
    this.lblDownPaymentSummary_ID;
    this.lblTradeInSummary_ID;
    this.lblLoanAmount_ID;
    this.lblMonthlyPayments_ID;
    this.lblEstMonthlyPaymentSummary_ID;
    this.lblVehiclePriceAmt_ID;
    this.lblTotalInterest_ID;
    this.lblTotalLoanPayment_ID;
    this.lblFinancingDisclaimer1_ID;
    this.lblFinancingDisclaimer2_ID;
    /*#endregion */

    /*#region Buttons */
    this.hlnkInitOpenDrawer_ID;
    //this.hlnkEstimatePayment_ID;
    this.hlnkClose_ID;
    this.btnSave_ID;
    this.btnCalculate_ID;
    this.btnReset_ID;
    /*#endregion */

    /*#region Qualify for Financing Modal */
    this.ad_ID;
    this.btnPreviousStep_ID;
    this.btnNextStep_ID;
    this.optQualifyBudget_ID;
    this.txtQualifyBirthdayMonth_ID;
    this.txtQualifyBirthdayDay_ID;
    this.txtQualifyBirthdayYear_ID;
    this.ddlQualifyEmploymentStatus_ID;
    this.txtQualifyMonthlyIncome_ID;
    this.txtQualifyJobSeniorityYears_ID;
    this.txtQualifyJobSeniorityMonths_ID;
    this.txtQualifyCompanyName_ID;
    this.txtQualifyOccupation_ID;
    this.txtQualifyAddress_ID;
    this.txtQualifyPostalCode_ID;
    this.optQualifyRentOrOwn_ID;
    this.txtQualifyHomeMonthlyPayment_ID;
    this.optQualifyRentOrOwn_ID;
    this.txtQualifyHomeAgeYears_ID;
    this.txtQualifyHomeAgeMonths_ID;
    this.btnContactInfo_ID;
    this.txtQualifyFirstName_ID;
    this.txtQualifyLastName_ID;
    this.txtQualifyEmail_ID;
    this.txtQualifyPhoneHome_ID;
    this.txtQualifyPhoneWork_ID;
    this.chkFollowup_ID;
    this.btnFinish_ID;
    this.msgQualificationError;
    this.msgQualificationSuccess;
    /*#endregion */
}

/*
* This Javascript allow user to do finance calculation.
* The following scripts are needed:
* (1) jQuery
* (2) HighlightValidator
*/
function FinancingCalculatorSidebar(options) {

    // Use this handler in callback
    var _self = this;

    this.options = options;
    this.highlightValidator = new HighlightValidator(_self.options.validationGroup, _self.options.errorCssClass);

    // Constants
    var SOURCE_NONE = 0;
    var SOURCE_INCLUDE_TAX_BUTTON_1 = 1;
    var SOURCE_INCLUDE_TAX_BUTTON_2 = 2;
    var SOURCE_VEHICLE_PRICE = 3;
    var SOURCE_SALES_TAX = 4;
    var SOURCE_TERMS = 5;
    var SOURCE_INTEREST_RATE = 6;
    var SOURCE_DOWN_PAYMENT = 7;
    var SOURCE_TRADE_IN = 8;
    var SOURCE_RESET_BUTTON = 9;
    var SOURCE_CALCULATE_BUTTON = 10;
    var SOURCE_SAVE_BUTTON = 11;
    var SOURCE_CLOSE_BUTTON = 12;
    var SOURCE_BLUE_BUTTON = 13;    // Initial blue "Estimate Monthly Payments" button shown before user has set any values
    var SOURCE_GREEN_BUTTON = 14;   // Green icon and text link shown after a user has set values
    var SOURCE_CREDIT_RATING = 15;
    var SOURCE_PAYMENT_FREQUENCY = 16;

    _self.leadFormCurrentStep = 1;    // Keep track of the current step on the Financing Qualification pop-up.
    _self.steps = ['budget', 'birthday', 'employment', 'address', 'contact info', 'confirmation'];

    this.localStorageGetItem = function(paymentField) {
        var lsStr = localStorage.getItem(options.vehicleCategory  + "_" + paymentField);
        if (options.vehicleCategory === "PV")
            return lsStr;

        if (String.IsNullOrEmpty(lsStr) || !isNaN(lsStr))
            return lsStr;

        try {
            var obj = JSON.parse(lsStr);
            switch (options.microSite) {
                case 'RV':
                    return obj.RV;
                case 'HeavyTruckTrailers':
                    return obj.HeavyTruckTrailers;
                case 'TransportTrailers':
                    return obj.TransportTrailers;
                case 'Boats':
                    return obj.Boats;
                case 'Watercraft':
                    return obj.Watercraft;
                case 'MotorcyclesATV':
                    return obj.MotorcyclesATV;
                case 'Snowmobile':
                    return obj.Snowmobile;
                case 'HeavyEquipment':
                    return obj.HeavyEquipment;
                case 'FarmEquipment':
                    return obj.FarmEquipment;

            }
        } catch (e) {
            return null;
        }
    };

    this.localStorageSetItem = function (paymentField, value) {
        value = "" + value;
        if (options.vehicleCategory === "PV") {
            localStorage.setItem("PV_" + paymentField, value);
            return;
        }

        try {
            var obj = null;
            var lsStr = localStorage.getItem(options.vehicleCategory + "_" + paymentField);
            if (String.IsNullOrEmpty(lsStr) || !isNaN(lsStr))
                obj = {};
            else
                obj = JSON.parse(lsStr);

            switch (options.microSite) {
                case 'RV':
                    obj.RV = value;
                    break;
                case 'HeavyTruckTrailers':
                    obj.HeavyTruckTrailers = value;
                    break;
                case 'TransportTrailers':
                    obj.TransportTrailers = value;
                    break;
                case 'Boats':
                    obj.Boats = value;
                    break;
                case 'Watercraft':
                    obj.Watercraft = value;
                    break;
                case 'MotorcyclesATV':
                    obj.MotorcyclesATV = value;
                    break;
                case 'Snowmobile':
                    obj.Snowmobile = value;
                    break;
                case 'HeavyEquipment':
                    obj.HeavyEquipment = value;
                    break;
                case 'FarmEquipment':
                    obj.FarmEquipment = value;
                    break;

            }
            lsStr = JSON.stringify(obj);
            localStorage.setItem(options.vehicleCategory + "_" + paymentField, lsStr);

        } catch (e) {
            
        }
    };

    // Get values from local storage (NOTE: ls prefix indicates values retrieved from local storage).
    var lsInterestRate = _self.localStorageGetItem("Interest");
    var lsTerm = _self.localStorageGetItem("Term");
    var lsPaymentFrequency = _self.localStorageGetItem("PaymentFrequency");
    var lsCreditRating = _self.localStorageGetItem("CreditRating");
    var lsDownPayment = _self.localStorageGetItem("DownPayment");
    var lsTradeIn = _self.localStorageGetItem("TradeIn");


    
    this.SetupCalculator = function (evt) {
        // Determine whether Payment Calculator should be shown
        _self.checkVehiclePrice();

        // Setup tooltips
        _self.setTooltips();


        /*#region Sales Tax - For future use - DO NOT DELETE!!! */
        //jQuery("#" + this.options.chkIncludeTaxes1_ID).live("click", { source: SOURCE_INCLUDE_TAX_BUTTON_1 }, this.IncludeTax_OnClick);
        //jQuery("#" + this.options.chkIncludeTaxes2_ID).live("click", { source: SOURCE_INCLUDE_TAX_BUTTON_2 }, this.IncludeTax_OnClick);
        //jQuery("#" + this.options.txtVehiclePrice_ID).live("blur", { source: SOURCE_VEHICLE_PRICE }, this.CalculatePayment);
        //jQuery("#" + this.options.txtSalesTax_ID).live("blur", { source: SOURCE_SALES_TAX }, this.CalculatePayment);
        /*#endregion */

 
        /*#region Bind events */

        jQuery("#" + this.options.termMonths_ID).live("change", { source: SOURCE_TERMS }, this.CalculatePayment);
        jQuery("#" +this.options.paymentFrequency_ID).live("change", { source: SOURCE_PAYMENT_FREQUENCY }, this.CalculatePayment);
        jQuery("#" + this.options.creditRating_ID).live("change", { source: SOURCE_CREDIT_RATING }, this.SetCreditRating);
        jQuery("#" + this.options.txtInterestRate_ID).live("blur", { source: SOURCE_INTEREST_RATE }, this.CalculatePayment);
        jQuery("#" + this.options.txtInterestRate_ID).live("keydown", { source: SOURCE_INTEREST_RATE }, this.CalculatePaymentOnEnterKey);
        jQuery("#" + this.options.txtDownPayment_ID).live("blur", { source: SOURCE_DOWN_PAYMENT }, this.CalculatePayment);
        jQuery("#" + this.options.txtDownPayment_ID).live("keydown", { source: SOURCE_DOWN_PAYMENT }, this.CalculatePaymentOnEnterKey);
        jQuery("#" + this.options.txtTradeIn_ID).live("blur", { source: SOURCE_TRADE_IN }, this.CalculatePayment);
        jQuery("#" + this.options.txtTradeIn_ID).live("keypress", { source: SOURCE_TRADE_IN }, this.CalculatePaymentOnEnterKey);


        jQuery("#" + this.options.hlnkInitOpenDrawer_ID).live("click", { source: SOURCE_BLUE_BUTTON }, this.togglePaymentDrawer);
        //jQuery("#" + this.options.hlnkEstimatePayment_ID).live("click", { source: SOURCE_GREEN_BUTTON }, this.togglePaymentDrawer);
        jQuery("#" + this.options.hlnkClose_ID).live("click", { source: SOURCE_CLOSE_BUTTON }, this.togglePaymentDrawer);


        jQuery("#" + this.options.btnSave_ID).live("click", { source: SOURCE_SAVE_BUTTON }, this.CalculatePayment);
        //jQuery("#" + this.options.btnSave_ID).live("click", function (evt) { evt.preventDefault(); });

        jQuery("#" + this.options.btnReset_ID).live("click", { source: SOURCE_RESET_BUTTON }, this.ResetCalculator);
        jQuery("#" + this.options.btnReset_ID).live("click", function (evt) { evt.preventDefault(); });

        $("#" + this.options.btnPreviousStep_ID).on("click", this.QualifyFinancingPreviousStep);
        $("#" + this.options.btnNextStep_ID).on("click", this.QualifyFinancingNextStep);
        $("#" + this.options.ddlQualifyEmploymentStatus_ID).live("change", this.QualifyFinancingSelectEmployment);
        $("#" + this.options.btnContactInfo_ID).on("click", this.QualifyFinancingNextStep);
        $("#" + this.options.btnFinish_ID).on("click", this.QualifyFinancingSubmit);
        $("#" +this.options.btnClose_ID).on("click", this.QualifyFinancingClose);
        /*#endregion */

        /*#endregion */

        /*#region  Set default values */
        
        /*#region Term */

        // Set default values to Local Storage if no values have been set
        if (lsTerm === null || isNaN(lsTerm))
        {
            lsTerm = options.defaultTermMonth;
            _self.localStorageSetItem("Term", lsTerm);
        }

        // Get value for Term from Local Storage
        lsTerm = _self.localStorageGetItem("Term");

        // If the lsTerm is not one of the available options, use the default one
        if (jQuery("input[name=termMonths][value=" + lsTerm + "]").size() === 0)
            lsTerm = options.defaultTermMonth;

        // Write Term value from Local Storage to the Term form field
        jQuery("#" + options.termMonths_ID).find(":checked").val(lsTerm);
        jQuery("input[name=termMonths][value=" + lsTerm + "]").attr("checked", "checked");

        /*#endregion */

        /*#region Payment Frequency */

        // Set default values if no values have been set
        if (lsPaymentFrequency === null || isNaN(lsPaymentFrequency))
        {
            lsPaymentFrequency = options.defaultPaymentFrequency;   
            _self.localStorageSetItem("PaymentFrequency", lsPaymentFrequency);
        }

        // Get value for Payment Frequency from Local Storage
        lsPaymentFrequency = _self.localStorageGetItem("PaymentFrequency");


        // If the lsPaymentFrequency is not one of the available options, use the default one
        if (jQuery("input[name=paymentFrequency][value=" + lsPaymentFrequency + "]").size() === 0)
            lsPaymentFrequency = options.defaultPaymentFrequency;


        // Write Payment Frequency value from Local Storage to the Payment Frequency form field
        jQuery("#" + options.paymentFrequency_ID).find(":checked").val(lsPaymentFrequency);
        jQuery("input[name=paymentFrequency][value=" + lsPaymentFrequency + "]").attr("checked", "checked");

        /*#endregion */


        /*#region Interest Rate */

        // Set default values to Local Storage if no values have been set
        if (lsInterestRate === null || isNaN(lsInterestRate))
            _self.localStorageSetItem("Interest", defaultInterestRate());

        // Get value for Interest Rate from Local Storage
        lsInterestRate = _self.localStorageGetItem("Interest");

        // Write Interest Rate value from Local Storage to the Interest Rate form field           
        _self.formatInterestRate(Globalize.parseFloat(lsInterestRate));

        /*#endregion */


        /*#region Down Payment */
       
        // Set default values to Local Storage if no values have been set
        if (lsDownPayment === null || isNaN(lsDownPayment)) {
            lsDownPayment = 0;
            _self.localStorageSetItem("DownPayment", lsDownPayment);
        }

        // Get value for Down Payment from Local Storage
        lsDownPayment = _self.localStorageGetItem("DownPayment");

            // Write Down Payment value from Local Storage to the Down Payment form field
            jQuery("#" + this.options.txtDownPayment_ID).val(lsDownPayment);


            /*#endregion */


        /*#region Trade In Value */

        // Set default values to Local Storage if no values have been set
        if (lsTradeIn === null || isNaN(lsTradeIn)) {
            lsTradeIn = 0;
            _self.localStorageSetItem("TradeIn", lsTradeIn);
        }

        // Get value for Trade In Value from Local Storage
        lsTradeIn = _self.localStorageGetItem("TradeIn");

        // Write Trade In value from Local Storage to the Trade In Value form field (hidden in Private Seller VDP)
        jQuery("#" + this.options.txtTradeIn_ID).val(lsTradeIn);

            /*#endregion */


        // Set other values for Payment Calc
        jQuery("#" + this.options.txtVehiclePrice_ID).val(this.options.vehiclePrice);
        jQuery("#" + this.options.lblDownPaymentSummary_ID).text(Globalize.format(lsDownPayment, "C0"));
        jQuery("#" + this.options.lblTradeInSummary_ID).text(Globalize.format(lsTradeIn, "C0"));

        /*#endregion */

        // Perform initial calculation
        _self.CalculatePayment(evt);
        

        _self.highlightValidator.BindAllValidatorsOnUpdate();

    }

    /*#region Sales Tax - For future use - DO NOT DELETE!!! */
    // Handle the event when include tax checkboxes are clicked.
    this.IncludeTax_OnClick = function (evt) {
        var source = SOURCE_NONE;
        if (evt != null) {
            source = evt.data.source;
        }

        if (source != SOURCE_NONE && options != null) {
            var id = source == SOURCE_INCLUDE_TAX_BUTTON_1 ? options.chkIncludeTaxes1_ID : options.chkIncludeTaxes2_ID;
            var isChecked = jQuery("#" + id).is(':checked');
            if (isChecked) {
                jQuery("#" + options.chkIncludeTaxes1_ID).attr('checked', 'checked');
                jQuery("#" + options.chkIncludeTaxes2_ID).attr('checked', 'checked');
            }
            else {
                jQuery("#" + options.chkIncludeTaxes1_ID).removeAttr('checked');
                jQuery("#" + options.chkIncludeTaxes2_ID).removeAttr('checked');
            }

            // Calculate payment
            _self.CalculatePayment(evt);
        }
    }

    /*#endregion */

    /*#region Set Credit Rating */
    this.SetCreditRating = function(evt) {
        //get the value in the interest rate box
        var calcOptions = _self.options;
        var creditRating = jQuery("#" + calcOptions.creditRating_ID).find(":checked").val();
        var interestRates = JSON.parse(calcOptions.PrivateAdCreditRatings);

        var numericInterestRate = 0.0;
        try {
            numericInterestRate = parseFloat(interestRates[creditRating]);
        } catch (e) {
            numericInterestRate = 0.0;
        } 

        if (creditRating == null) {
            return;
        }
        var checkInterestRate = jQuery("#" + options.txtInterestRate_ID).val();
        if (checkInterestRate === undefined) {
            return;
        }
        _self.formatInterestRate(numericInterestRate);
        evt.data.source = SOURCE_INTEREST_RATE;
        _self.subPrimeTagging();
        _self.CalculatePayment(evt);
        
    }
    /*#endregion */


    /*#region Calculate payment */
    this.CalculatePayment = function (evt) {
        var target = document.activeElement;
        var source = SOURCE_NONE;
        var options = _self.options;
        if (evt != null) {
            source = evt.data.source;
        }

        if (source != SOURCE_NONE && options != null) {
            // If the source is not the calculate button, trigger the page validation for this validation group
            if (source != SOURCE_CALCULATE_BUTTON) {
                if (typeof (Page_ClientValidate) == 'function') {
                    Page_ClientValidate(options.validationGroup);
                }
            }
        }
        // Perform calculation if the form is valid; otherwise, update validators
        if (!Page_IsValid)
        {
            _self.highlightValidator.OnUpdateValidators();

            //Indicate invalid Monthly Payment if input values are invalid.
            if (Globalize.culture().language === "fr")
            {
                jQuery("#" + options.lblMonthlyPayments_ID).text("N/D");
            }
            else
            {
                jQuery("#" + options.lblMonthlyPayments_ID).text("N/A");
            }
            jQuery("#" + options.lblTotalLoanPayment_ID).text("-");
            jQuery("#" + options.lblTotalInterest_ID).text("-");
         
        }
        else if (options != null) {
            if (source === SOURCE_RESET_BUTTON  )  // Reset button clicked 
            {
                jQuery("input[name=termMonths][value=" + lsTerm + "]").attr("checked", "checked");
                jQuery("input[name=paymentFrequency][value=" + lsPaymentFrequency + "]").attr("checked", "checked");
                jQuery("input[name=creditRating][value=" + lsCreditRating + "]").attr("checked", "checked");
                jQuery("#" + options.txtInterestRate_ID).val(Globalize.format(defaultInterestRate(), "n2"));
                jQuery("#" + options.txtDownPayment_ID).val(Globalize.format(parseFloat(lsDownPayment, 2), "C0"));
                jQuery("#" + options.txtTradeIn_ID).val(Globalize.format(parseFloat(lsTradeIn, 2), "C0"));

                // Show Summary down payment and trade-in values
                jQuery("#" + options.lblDownPaymentSummary_ID).val(Globalize.format(parseFloat(lsDownPayment, 2), "C0"));
                jQuery("#" + options.lblTradeInSummary_ID).val(Globalize.format(parseFloat(lsTradeIn, 2), "C0"));

                // Run the calculations now
                _self.doTheMath(evt);
            }
            else    // Form field value was changed 
            {
                /*#region Get the current form field values */
                var checkInterestRate = jQuery("#" + options.txtInterestRate_ID).val();
                if (checkInterestRate !== undefined) {
                    lsTerm = jQuery("#" + options.termMonths_ID).find(":checked").val();
                    lsPaymentFrequency = jQuery("#" + options.paymentFrequency_ID).find(":checked").val();
                    lsCreditRating = jQuery("#" + options.creditRating_ID).find(":checked").val();
                    lsInterestRate = roundInterestRate(jQuery("#" + options.txtInterestRate_ID).val());
                    lsDownPayment = Globalize.parseInt(jQuery("#" + options.txtDownPayment_ID).val()) || 0;
                    if (jQuery("#" + options.txtTradeIn_ID).val() === undefined)    // Trade in is undefined if private seller ad - no Trade In value field exists
                    {
                        lsTradeIn = 0;                       
                    } 
                    else 
                    {
                        lsTradeIn = Globalize.parseInt(jQuery("#" + options.txtTradeIn_ID).val()) || 0; 
                    }                   
                }
                else
                {
                    return;
                }

                if (source === SOURCE_TERMS)    // Term field updated
                {
                    _self.localStorageSetItem("Term", lsTerm);
                    jQuery("input[name=termMonths][value=" + lsTerm + "]").attr("checked", "checked");
                }

                if(source === SOURCE_PAYMENT_FREQUENCY)    // Payment Frequency field updated
                {
                    _self.localStorageSetItem("PaymentFrequency", lsPaymentFrequency);
                    jQuery("input[name=paymentFrequency][value=" + lsPaymentFrequency + "]").attr("checked", "checked");
                }

                if (source === SOURCE_INTEREST_RATE)    // Interest field updated 
                {
                    _self.localStorageSetItem("Interest", lsInterestRate);
                    _self.formatInterestRate(roundInterestRate(jQuery("#" + options.txtInterestRate_ID).val()));
                }

                if (source === SOURCE_DOWN_PAYMENT)    // Down payment field updated - Save new value to local storage AND set the correct formatting in field to ensure future calculations don't break
                {
                    _self.localStorageSetItem("DownPayment", lsDownPayment);
                    jQuery("#" + options.txtDownPayment_ID).val(lsDownPayment);
                }

                if (source === SOURCE_TRADE_IN)    // Trade-in field updated
                {
                    _self.localStorageSetItem("TradeIn", lsTradeIn);
                    jQuery("#" + options.txtTradeIn_ID).val(lsTradeIn);
                }

                /*#endregion */

                // Run the calculations now
                _self.doTheMath(evt);
            }
        }

        // Update disclaimer interest & terms
        _self.updateDisclaimer(evt);
    }

    this.CalculatePaymentOnEnterKey = function(event) {
        if (event.keyCode === 13) {
            _self.CalculatePayment(event);
        }
    }

    /*#endregion */

    /*#region Do the math to calculate Monthly Payments */
    this.doTheMath = function (evt)
    {
        var source = SOURCE_NONE;
        var options = _self.options;
        if(evt != null) {
            source = evt.data.source;
        }

        /*#region Get form field values for calculations */

        var includeTax = false;
        //var includeTax = jQuery("#" + options.chkIncludeTaxes1_ID).is(":checked");
        var vehiclePrice = Globalize.parseFloat(jQuery("#" + options.txtVehiclePrice_ID).val().replace(/,/g, ''));
        var salesTax = 0;
        //var salesTax = Globalize.parseFloat(jQuery("#" + options.txtSalesTax_ID).val()) / 100.0;
        var taxes = 0;
        var totalVehiclePrice = vehiclePrice;

        /*#endregion */

        /*#region Calculate amount of loan */

        var loanAmount = totalVehiclePrice - lsDownPayment - lsTradeIn;
        if (loanAmount < 0) {
            loanAmount = 0;
        }
        var taxOnLoanAmount = 0;
        var loanAfterTax = loanAmount;

        if (includeTax) {
            taxes = vehiclePrice * salesTax;
            totalVehiclePrice += taxes;
            taxOnLoanAmount = loanAmount * salesTax;
            loanAfterTax = loanAmount + taxOnLoanAmount;
        }
        /*#endregion*/

        // Get value for Interest Rate from Local Storage
        lsInterestRate = _self.localStorageGetItem("Interest");

        // Get value for Down Payment from Local Storage
        lsDownPayment = _self.localStorageGetItem("DownPayment");

        // Get value for Payment Frequency from Local Storage
        lsDownPayment = _self.localStorageGetItem("PaymentFrequency");

        /*#region Run payment formula to determine installment payment amount, repayment total, and cost of credit (based on term and payment frequency */

        var financeRate = (lsInterestRate / 100) / lsPaymentFrequency;
        var termInYears = (lsTerm / 12);
        var totalNumberOfPayments = termInYears * lsPaymentFrequency;

        var installment = lsInterestRate > 0 ? _self.runPaymentFormula(loanAfterTax, financeRate, totalNumberOfPayments) : loanAfterTax / lsTerm;
        var totalLoanPayment = installment * totalNumberOfPayments;

        var totalLoanInterest = totalLoanPayment - loanAfterTax;
        if (Math.abs(totalLoanInterest) < 0.01) {
            totalLoanInterest = 0.0;
        }

        /*#endregion */

        /*#region Update summary values & drawer handle monthly estimate */
        jQuery("#" + options.lblTaxes_ID).text(Globalize.format(taxes, "C0"));
        jQuery("#" + options.lblTotalVehiclePrice_ID).text(Globalize.format(totalVehiclePrice, "C0"));
        jQuery("#" + options.lblDownPaymentSummary_ID).text(Globalize.format(parseInt(lsDownPayment), "C0"));
        jQuery("#" + options.lblTradeInSummary_ID).text(Globalize.format(parseInt(lsTradeIn), "C0"));
        jQuery("#" + options.lblLoanAmount_ID).text(Globalize.format(loanAmount, "C0"));
        jQuery("#" + options.lblMonthlyPayments_ID).text(Globalize.format(installment, "C0")); // Form - Monthly Payment
        jQuery("#" + options.lblEstMonthlyPaymentSummary_ID).text(Globalize.format(installment, "C0")); // Summary - Monthly Payment
        jQuery("#" + options.lblVehiclePriceAmt_ID).text(Globalize.format(loanAfterTax, "C0"));
        jQuery("#" + options.lblTotalInterest_ID).text(Globalize.format(totalLoanInterest, "C0"));
        jQuery("#" + options.lblTotalLoanPayment_ID).text(Globalize.format(totalLoanPayment, "C0"));

        // Update Payment Amount on Estimate Tag
        jQuery("#" + options.lblMonthlyPayments_ID).text(Globalize.format(installment, "C0"));

        // Update Payment Frequency on Estimate Tag
	    switch (lsPaymentFrequency)
        {
	        case "12":
	            jQuery("#" + options.lblPerMonth_ID).text(options.lblPaymentFrequencyMonthly);
		    break;
	        case "26":
		        jQuery("#" +options.lblPerMonth_ID).text(options.lblPaymentFrequencyBiWeekly);
		    break;
	        case "52":
		        jQuery("#" +options.lblPerMonth_ID).text(options.lblPaymentFrequencyWeekly);
		    break;
		    }

        
        /*#endregion */

        // If doTheMath was triggered by Reset button click, properly format updated Interest Rate and Down Payment fields with % and $, respectively
        if (evt !== null && source === SOURCE_RESET_BUTTON)
        {
            var interestRate = Globalize.parseFloat((lsInterestRate * 1).toFixed(4));
            _self.formatInterestRate(interestRate);

            jQuery("#" + options.txtDownPayment_ID).val(Globalize.format(parseFloat(lsDownPayment, 2), "C0"));
        }
    }
    /*#endregion */

    /*#region Format Interest Rate */
    this.formatInterestRate = function (interestRate)
    {
        var options = _self.options;
        var checkInterestRate = jQuery("#" + options.txtInterestRate_ID).val();
        jQuery("#" + options.txtInterestRate_ID).val(null);
        if (checkInterestRate !== undefined && checkInterestRate !== null) {
            jQuery("#" + options.txtInterestRate_ID).val(Globalize.format(parseFloat(interestRate, 2), "n2") + " %");
        }

    }

    /*#endregion */

    /*#region Update Disclaimer */
    this.updateDisclaimer = function (evt) {
        var interestRate = Globalize.parseFloat((lsInterestRate * 1).toFixed(4));
        jQuery(".disclaimerInterestRate").text(Globalize.format(parseFloat(interestRate, 2), "n2"));
        jQuery(".disclaimerTermMonths").text(lsTerm);
    }
    /*#endregion */


    /*#region Reset calculator */
    this.ResetCalculator = function (evt) {

        var source = SOURCE_NONE;
        var options = _self.options;
        if (evt != null) {
            source = evt.data.source;
        }

        if (!Page_IsValid)
        {
            // Clear invalid Interest Rate and/or Down Payment, and return page state to valid
            var interestRate = Globalize.parseFloat((lsInterestRate * 1).toFixed(4));
            //jQuery("#" + options.txtInterestRate_ID).val(Globalize.format(parseFloat(interestRate, 2), "n2"));
            _self.formatInterestRate(interestRate);
            jQuery("#" + options.txtDownPayment_ID).val(Globalize.format(parseFloat(lsDownPayment, 2), "C0"));
        }
    
        // Reset Local Storage Term
        lsTerm = options.defaultTermMonth;
        _self.localStorageSetItem("Term", lsTerm);
        jQuery("#" + options.termMonths_ID).attr('checked', true);

        // Reset Local Storage Payment Frequency
        lsPaymentFrequency = options.defaultPaymentFrequency;
        _self.localStorageSetItem("PaymentFrequency", lsPaymentFrequency);
        jQuery("input[name=paymentFrequency]").attr("checked", true);

        // Reset Local Storage Credit Rating
        lsCreditRating = '';
        _self.localStorageSetItem("CreditRating", lsCreditRating);
        jQuery("input[name=creditRating]").attr("checked", false);

        // Reset Local Storage Interest Rate
        lsInterestRate = defaultInterestRate();
        _self.localStorageSetItem("Interest", lsInterestRate);

        // Reset Local Storage Down Payment
        lsDownPayment = 0;
        _self.localStorageSetItem("DownPayment", lsDownPayment);


        // Reset Local Storage Trade In
        lsTradeIn = 0;
        _self.localStorageSetItem("TradeIn", lsTradeIn);
        var creditRating = jQuery("#" + options.creditRating_ID).find(":checked").val();
        if (creditRating !== undefined) {
            jQuery("#" + options.creditRating_ID).removeAttr(':checked');

        }

        _self.CalculatePayment(evt);

    }

    /*#endregion */


    /*#region Set Tooltip configuration properties */
    this.setTooltips = function () {
        $(".termToolTip").simpletip({
            content: options.termTooltip,
            fixed: true,
            position: [118, -18]
        });

        $(".paymentFrequencyToolTip").simpletip({
            content: options.paymentFrequencyToolTip,
                fixed: true,
                position: [118, -18]
        });


        $(".creditRatingToolTip").simpletip({
            content: options.creditRatingTooltip,
            fixed: true,
            position: [118, -18]
        });

        $(".interestToolTip").simpletip({
            content: options.interestTooltip,
            fixed: true,
            position: [27, 4]
        });

        $(".downPaymentToolTip").simpletip({
            content: options.downPaymentTooltip,
            fixed: true,
            position: [128, -18]
        });

        $(".tradeInToolTip").simpletip({
            content: options.tradeInTooltip,
            fixed: true,
            position: [71, 5]
        });
    }
    /*#endregion */

    /*#region Hide Estimate Payment Button if vehicle price is $0 or null */
    this.checkVehiclePrice = function () {
        // Hide all handle buttons to prevent incorrect button flash
        $('.detailsFinancingCalculator').hide();

        var options = _self.options;
        if (options != null) {
            // Hide Payment Calculator if there is no vehicle price
            if (parseInt(options.vehiclePrice) === 0 || options.vehiclePrice === null) {
                $('.detailsFinancingCalculator').hide();
            }
            else {
                // Only show payment calculator if Local Storage is supported 
                if (typeof (Storage) !== "undefined")   // Verify that Local Storage is supported by browser before proceeding
                {
                    $('.detailsFinancingCalculator').show();
                }
                else {
                    // No local storage support - hide the payment calculator
                    $('.detailsFinancingCalculator').hide();
                }
            }
        }
    }
    /*#endregion */


    /*#region Toggle Payment Calculator Open / Collapsed State */
    this.togglePaymentDrawer = function (evt) {
        var isExpanding = !$('#paymentDrawerOpen').is(':visible');
        var source = SOURCE_NONE;
        var options = _self.options;
        if (evt != null) {
            source = evt.data.source;
        }

        _self.checkVehiclePrice();

        // Toggle expand/collapsed state
        $('#paymentDrawerHandle').slideToggle();
        $('#paymentDrawerOpen').slideToggle('slow');

        if ($('#paymentDrawerOpen').css('display') === 'block')  // Drawer is open
        {
            // Run subPrimeTagging function
            if (_self.options.vehicleCategory.toUpperCase() === "PV")
            {
                _self.subPrimeTagging();
            }                            
        }

        dl_trackExpandCloseCustomizeMonthlyPayment(isExpanding);
    }

    /*#endregion */

    /*#region Sub-Prime Tagging & Lead Form */

    this.subPrimeTagging = function () {
        var idCustomerToAdobe = document.getElementById("EnableSubPrimeCustomerId");
        var calcOptions = _self.options;
        var creditRating = jQuery("#" + calcOptions.creditRating_ID).find(":checked").val();

        var sendToCustomer = false;
        if (idCustomerToAdobe != null) {
            sendToCustomer = Boolean(idCustomerToAdobe.innerHTML);
        }
        if (!sendToCustomer) {
            return;
        }
        var objPaymentCalc = {
            pv_interest: lsInterestRate.toString(),
            pv_term: lsTerm.toString(),
            pv_downPayment: lsDownPayment.toString(),
            pv_creditRating: creditRating
            //pv_tradeIn: lsTradeIn.toString()
        };

        var objDil = DIL.create({ partner: "traderca" });

        objDil.api.signals(objPaymentCalc, "c_").submit();
    }

    this.QualifyFinancingSelectEmployment = function () {
        var selectedValue = $("#" + options.ddlQualifyEmploymentStatus_ID).val();
        var showEmploymentDetails = (selectedValue === 'Employed');

        $("#pnlEmployed").toggle(showEmploymentDetails);
        toggleEmploymentRequiredValidation(showEmploymentDetails);

        if (!showEmploymentDetails) {
            $("#" + options.txtQualifyMonthlyIncome_ID).val('');
            $("#" + options.txtQualifyJobSeniorityYears_ID).val('');
            $("#" + options.txtQualifyJobSeniorityMonths_ID).val('');
            $("#" + options.txtQualifyCompanyName_ID).val('');
            $("#" + options.txtQualifyOccupation_ID).val('');
        }
    };

    this.QualifyFinancingPreviousStep = function () {

        var currentStepIndex = _self.leadFormCurrentStep;

        $('#step' + currentStepIndex).hide();
        $('#step' + (currentStepIndex - 1)).show();

        var previousStepIndex = --_self.leadFormCurrentStep;

        var nextBubble = $(".progress.bubbles li a.prevStep:last");

        if (nextBubble !== undefined && nextBubble !== null) {
            nextBubble.removeClass("prevStep");
            nextBubble.addClass("nextStep");
        }

        if (previousStepIndex === 1)
            $('.arrowContainerPrev').hide();
        if (previousStepIndex === 4)
            $('.arrowContainerNext').show();

        return false;
    };

    this.QualifyFinancingNextStep = function () {

        var currentStepIndex = _self.leadFormCurrentStep;
        
        if (Page_ClientValidate('LeadFormStep' + currentStepIndex)) {
            $('#step' + currentStepIndex).hide();
            $('#step' + (currentStepIndex + 1)).show();

            dl_trackSubPrimeFormNextStep(_self.steps[currentStepIndex]);

            var nextStepIndex = ++_self.leadFormCurrentStep;

            var nextBubble = $(".progress.bubbles li a.nextStep:first");

            if (nextBubble !== undefined && nextBubble !== null) {
                nextBubble.removeClass("nextStep");
                nextBubble.addClass("prevStep");
            }

            if (nextStepIndex === 2)
                $('.arrowContainerPrev').show();
            if (nextStepIndex >= 5)        // No Search & Found Step - Replace this in later sprint with block below.
            {
                $('.arrowContainerNext').hide();
                $('.arrowContainerPrev').show();

                if (nextStepIndex === 6)
                {
                    $('.arrowContainerPrev').hide();
                }
            }
            //if (nextStepIndex === 5)     // Search & Found Step - Commented out until later sprint
            //{
            //    $('.arrowContainerNext').hide();
            //    $('.arrowContainerPrev').hide();
            //}


            // Only show progress bubbles during Steps 1 through 4 (hide on Steps 5, 6, and 7)
            if (currentStepIndex >= 5) {
                $(".progress.bubbles").hide();
            }
                
            return false;
        }
    };

    this.QualifyFinancingSubmit = function () {
        if (Page_ClientValidate("LeadFormStep6")) {
            var form = $("#" + options.pnlModalPopup_ID);
            form.block({
                message: 'Processing...',
                css: {},
                overlayCSS: { opacity: 0.3 }
            });

            var budget = $("#" + options.optQualifyBudget_ID + " input:checked").val();
            var birthdayMonth = $("#" + options.txtQualifyBirthdayMonth_ID).val();
            var birthdayDay = $("#" + options.txtQualifyBirthdayDay_ID).val();
            var birthdayYear = $("#" + options.txtQualifyBirthdayYear_ID).val();
            var employmentStatus = $("#" + options.ddlQualifyEmploymentStatus_ID).val();
            var monthlyIncome = $("#" + options.txtQualifyMonthlyIncome_ID).val();
            var jobSeniorityYears = $("#" + options.txtQualifyJobSeniorityYears_ID).val();
            var jobSeniorityMonths = $("#" + options.txtQualifyJobSeniorityMonths_ID).val();
            var companyName = $("#" + options.txtQualifyCompanyName_ID).val();
            var occupation = $("#" + options.txtQualifyOccupation_ID).val();
            var address = $("#" + options.txtQualifyAddress_ID).val();
            var postalCode = $("#" + options.txtQualifyPostalCode_ID).val();
            var ownOrRent = $("#" + options.optQualifyRentOrOwn_ID + " input:checked").val();
            var homeMonthlyPayment = $("#" + options.txtQualifyHomeMonthlyPayment_ID).val();
            var homeAgeYears = $("#" + options.txtQualifyHomeAgeYears_ID).val();
            var homeAgeMonths = $("#" + options.txtQualifyHomeAgeMonths_ID).val();
            var firstName = $("#" + options.txtQualifyFirstName_ID).val();
            var lastName = $("#" + options.txtQualifyLastName_ID).val();
            var email = $("#" + options.txtQualifyEmail_ID).val();
            var phoneHome = $("#" + options.txtQualifyPhoneHome_ID).val();
            var phoneWork = $("#" + options.txtQualifyPhoneWork_ID).val();
            var followUp = +$("#" +options.chkFollowup_ID).is(':checked');
            var term = $("#" + options.termMonths_ID).find(":checked").val();
            var creditRating = $("#" + options.creditRating_ID).find(":checked").val();
            var interestRate = roundInterestRate($("#" + options.txtInterestRate_ID).val());
            var downPayment = Globalize.parseInt(jQuery("#" + options.txtDownPayment_ID).val()) || 0;
            var tradeInValue = ((jQuery("#" + options.txtTradeIn_ID).size() === 0) ? 0 : Globalize.parseInt(jQuery("#" + options.txtTradeIn_ID).val()) || 0); 
            var adCompositeId = options.ad_ID;

            $.ajax({
                url: '/api/Finance/SaveQualificationInfo',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    qualificationInfo: {
                        'budget': budget,
                        'birthDate': birthdayYear + '-' + birthdayMonth + '-' + birthdayDay,
                        'employmentStatus': employmentStatus,
                        'jobMonthlyIncome': monthlyIncome,
                        'jobSeniorityYears': jobSeniorityYears,
                        'jobSeniorityMonths': jobSeniorityMonths,
                        'jobCompanyName': companyName,
                        'jobOccupation': occupation,
                        'homeAddress': address,
                        'homePostalCode': postalCode,
                        'homeOwnOrRent': ownOrRent,
                        'homeMonthlyPayment': homeMonthlyPayment,
                        'homeAgeYears': homeAgeYears,
                        'homeAgeMonths': homeAgeMonths,
                        'infoFirstName': firstName,
                        'infoLastName': lastName,
                        'infoEmail': email,
                        'infoPhoneHome': phoneHome,
                        'infoPhoneWork': phoneWork,
                        'calculatorCreditRating': creditRating,
                        'calculatorTermInMonths': term,
                        'calculatorInterestRate': interestRate,
                        'calculatorDownPayment': downPayment,
                        'calculatorTradeInValue': tradeInValue,
                        'searchCity': options.searchCity,
                        'searchProvince': options.searchProvince,
                        'vehicleAdId': options.vehicleAdId,
                        'vehicleYear': options.vehicleYear,
                        'vehicleMake': options.vehicleMake,
                        'vehicleModel': options.vehicleModel,
                        'vehicleTrim': options.vehicleTrim,
                        'vehicleBodyType': options.vehicleBodyType,
                        'vehicleColour': options.vehicleColour,
                        'vehiclePrice': options.vehiclePrice,
                        'followUpIndicator': followUp
                    },
                    'adCompositeId': adCompositeId
                })
            })
                .done(function (result) {
                    dl_trackSubPrimeFormComplete();
                    $("#" + options.btnNextStep_ID).click();
                })
                .fail(function (errorResponse) {
                    $().colorbox.close();
                    toastr.error(errorResponse, options.msgQualificationError, { "positionClass": "toast-top-center" });
                })
                .always(function () {
                    form.unblock();
                });
        }
    }

    this.QualifyFinancingClose = function () {
        $.colorbox.close();

        $(".qualifyFinancingContainer").hide();

        dl_trackSubPrimeFormClose();
        _self.leadFormCurrentStep = 1;

        // Enable page scrolling
        $('body').unbind('touchmove');
    };

    /*#endregion */


    /*#region Payment formula to determine installment payment amount, repayment total, and cost of credit (based on term and payment frequency */

    this.runPaymentFormula = function (FA, IR, NP)
    {
        /*  Definitions used in the Installment Payment Formula: 
            IR = Interest Rate - The interest rate for a loan, expressed as a decimal
            NP = Number of Payments - The total number of payments in a loan
            PMT = Payment - The regular installment payment made on a loan
            FA = Financed Amount - The amount the buyer is borrowing ( PV = vehicle price - down payment - trade in value + tax (tax is optional, but currently not included in calculation)
        */
      
        var payment = (FA * IR) /(1 - Math.pow(1 +IR, - NP));
        return payment;
    }

    this.roundDecimals = function(value, decimalPlaces)
    {
        return Number(Math.round(value + 'e' + decimalPlaces) + 'e-' + decimalPlaces);
    }
    /*#endregion */

}

function removePercent(input) {
    var numValue = input.value;
    input.value = numValue.replace(" %", "");
}

function appendPercent(input) {
    if (input.value.indexOf("%") < 0) {
        input.value += ' %';
    }
}

function roundInterestRate(interestRate) {
    if (interestRate.indexOf("%") > 0)
        interestRate = interestRate.replace(" %", "");

    // based on: http://stackoverflow.com/questions/11832914/round-to-at-most-2-decimal-places-in-javascript
    return +(Math.round(Globalize.parseFloat(interestRate) + "e+2") + "e-2");
}

function defaultInterestRate() {
    return Globalize.parseFloat("8.99");
}

function toggleEmploymentRequiredValidation(isEmployed) {

    $("#pnlEmployed [id$='requiredValidator']").each(function(index) {
        var rfv = document.getElementById($(this).attr('id'));
        ValidatorEnable(rfv, isEmployed);
        rfv.isvalid = true;
        ValidatorUpdateDisplay(rfv);
    });
}
;
/*!
 * jQuery blockUI plugin
 * Version 2.64.0-2013.07.18
 * @requires jQuery v1.7 or later
 *
 * Examples at: http://malsup.com/jquery/block/
 * Copyright (c) 2007-2013 M. Alsup
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 * Thanks to Amir-Hossein Sobhi for some excellent contributions!
 */

; (function () {
    /*jshint eqeqeq:false curly:false latedef:false */
    "use strict";

    function setup($) {
        $.fn._fadeIn = $.fn.fadeIn;

        var noOp = $.noop || function () { };

        // this bit is to ensure we don't call setExpression when we shouldn't (with extra muscle to handle
        // confusing userAgent strings on Vista)
        var msie = /MSIE/.test(navigator.userAgent);
        var ie6 = /MSIE 6.0/.test(navigator.userAgent) && ! /MSIE 8.0/.test(navigator.userAgent);
        var mode = document.documentMode || 0;
        var setExpr = $.isFunction(document.createElement('div').style.setExpression);

        // global $ methods for blocking/unblocking the entire page
        $.blockUI = function (opts) { install(window, opts); };
        $.unblockUI = function (opts) { remove(window, opts); };

        // convenience method for quick growl-like notifications  (http://www.google.com/search?q=growl)
        $.growlUI = function (title, message, timeout, onClose) {
            var $m = $('<div class="growlUI"></div>');
            if (title) $m.append('<h1>' + title + '</h1>');
            if (message) $m.append('<h2>' + message + '</h2>');
            if (timeout === undefined) timeout = 3000;

            // Added by konapun: Set timeout to 30 seconds if this growl is moused over, like normal toast notifications
            var callBlock = function (opts) {
                opts = opts || {};

                $.blockUI({
                    message: $m,
                    fadeIn: typeof opts.fadeIn !== 'undefined' ? opts.fadeIn : 700,
                    fadeOut: typeof opts.fadeOut !== 'undefined' ? opts.fadeOut : 1000,
                    timeout: typeof opts.timeout !== 'undefined' ? opts.timeout : timeout,
                    centerY: false,
                    showOverlay: false,
                    onUnblock: onClose,
                    css: $.blockUI.defaults.growlCSS
                });
            };

            callBlock();
            var nonmousedOpacity = $m.css('opacity');
            $m.mouseover(function () {
                callBlock({
                    fadeIn: 0,
                    timeout: 30000
                });

                var displayBlock = $('.blockMsg');
                displayBlock.stop(); // cancel fadeout if it has started
                displayBlock.fadeTo(300, 1); // make it easier to read the message by removing transparency
            }).mouseout(function () {
                $('.blockMsg').fadeOut(1000);
            });
            // End konapun additions
        };

        // plugin method for blocking element content
        $.fn.block = function (opts) {
            if (this[0] === window) {
                $.blockUI(opts);
                return this;
            }
            var fullOpts = $.extend({}, $.blockUI.defaults, opts || {});
            this.each(function () {
                var $el = $(this);
                if (fullOpts.ignoreIfBlocked && $el.data('blockUI.isBlocked'))
                    return;
                $el.unblock({ fadeOut: 0 });
            });

            return this.each(function () {
                if ($.css(this, 'position') == 'static') {
                    this.style.position = 'relative';
                    $(this).data('blockUI.static', true);
                }
                this.style.zoom = 1; // force 'hasLayout' in ie
                install(this, opts);
            });
        };

        // plugin method for unblocking element content
        $.fn.unblock = function (opts) {
            if (this[0] === window) {
                $.unblockUI(opts);
                return this;
            }
            return this.each(function () {
                remove(this, opts);
            });
        };

        $.blockUI.version = 2.60; // 2nd generation blocking at no extra cost!

        // override these in your code to change the default behavior and style
        $.blockUI.defaults = {
            // message displayed when blocking (use null for no message)
            //message: '<h1>Please wait...</h1>',

            message: $('#modalSpinner'),

            title: null,		// title string; only used when theme == true
            draggable: true,	// only used when theme == true (requires jquery-ui.js to be loaded)

            theme: false, // set to true to use with jQuery UI themes

            // styles for the message when blocking; if you wish to disable
            // these and use an external stylesheet then do this in your code:
            // $.blockUI.defaults.css = {};
            css: {
                padding: '42px 0px 8px 0px',
                margin: '5px 0px 0px 0px',
                width: '60px',
                height: '10px',     // Add padding to = 60px
                top: '20% !important',
                left: '35%',
                textAlign: 'center',
                color: '#fff',
                fontSize: '11px',
                border: '5px solid #333',
                borderRadius: '5px',
                backgroundColor: '#595959',
                backgroundImage: 'url("/Looks/default/images/AdDetails/spinner.gif")',
                backgroundRepeat: 'no-repeat',
                backgroundPosition: 'top center',
                cursor: 'wait',
                opacity: 0.9
            },

            // minimal style set used when themes are used
            themedCSS: {
                width: '30%',
                top: '40%',
                left: '35%'
            },

            // styles for the overlay
            overlayCSS: {
                backgroundColor: '#000',
                opacity: 0.6,
                cursor: 'wait'
            },

            // style to replace wait cursor before unblocking to correct issue
            // of lingering wait cursor
            cursorReset: 'default',

            // styles applied when using $.growlUI
            growlCSS: {
                width: '350px',
                top: '10px',
                left: '',
                right: '10px',
                border: 'none',
                padding: '5px',
                opacity: 0.6,
                cursor: 'default',
                color: '#fff',
                backgroundColor: '#000',
                '-webkit-border-radius': '10px',
                '-moz-border-radius': '10px',
                'border-radius': '10px'
            },

            // IE issues: 'about:blank' fails on HTTPS and javascript:false is s-l-o-w
            // (hat tip to Jorge H. N. de Vasconcelos)
            /*jshint scripturl:true */
            iframeSrc: /^https/i.test(window.location.href || '') ? 'javascript:false' : 'about:blank',

            // force usage of iframe in non-IE browsers (handy for blocking applets)
            forceIframe: false,

            // z-index for the blocking overlay
            baseZ: 1000,

            // set these to true to have the message automatically centered
            centerX: true, // <-- only effects element blocking (page block controlled via css above)
            centerY: true,

            // allow body element to be stetched in ie6; this makes blocking look better
            // on "short" pages.  disable if you wish to prevent changes to the body height
            allowBodyStretch: true,

            // enable if you want key and mouse events to be disabled for content that is blocked
            bindEvents: true,

            // be default blockUI will supress tab navigation from leaving blocking content
            // (if bindEvents is true)
            constrainTabKey: true,

            // fadeIn time in millis; set to 0 to disable fadeIn on block
            fadeIn: 200,

            // fadeOut time in millis; set to 0 to disable fadeOut on unblock
            fadeOut: 400,

            // time in millis to wait before auto-unblocking; set to 0 to disable auto-unblock
            timeout: 0,

            // disable if you don't want to show the overlay
            showOverlay: true,

            // if true, focus will be placed in the first available input field when
            // page blocking
            focusInput: true,

            // elements that can receive focus
            focusableElements: ':input:enabled:visible',

            // suppresses the use of overlay styles on FF/Linux (due to performance issues with opacity)
            // no longer needed in 2012
            // applyPlatformOpacityRules: true,

            // callback method invoked when fadeIn has completed and blocking message is visible
            onBlock: null,

            // callback method invoked when unblocking has completed; the callback is
            // passed the element that has been unblocked (which is the window object for page
            // blocks) and the options that were passed to the unblock call:
            //	onUnblock(element, options)
            onUnblock: null,

            // callback method invoked when the overlay area is clicked.
            // setting this will turn the cursor to a pointer, otherwise cursor defined in overlayCss will be used.
            onOverlayClick: null,

            // don't ask; if you really must know: http://groups.google.com/group/jquery-en/browse_thread/thread/36640a8730503595/2f6a79a77a78e493#2f6a79a77a78e493
            quirksmodeOffsetHack: 4,

            // class name of the message block
            blockMsgClass: 'blockMsg',

            // if it is already blocked, then ignore it (don't unblock and reblock)
            ignoreIfBlocked: false
        };

        setTimeout("$('#spinner').attr('src', '/Looks/default/images/AdDetails/spinner.gif');", 100);

        // private data and functions follow...

        var pageBlock = null;
        var pageBlockEls = [];

        function install(el, opts) {
            var css, themedCSS;
            var full = (el == window);
            var msg = (opts && opts.message !== undefined ? opts.message : undefined);
            opts = $.extend({}, $.blockUI.defaults, opts || {});

            if (opts.ignoreIfBlocked && $(el).data('blockUI.isBlocked'))
                return;

            opts.overlayCSS = $.extend({}, $.blockUI.defaults.overlayCSS, opts.overlayCSS || {});
            css = $.extend({}, $.blockUI.defaults.css, opts.css || {});
            if (opts.onOverlayClick)
                opts.overlayCSS.cursor = 'pointer';

            themedCSS = $.extend({}, $.blockUI.defaults.themedCSS, opts.themedCSS || {});
            msg = msg === undefined ? opts.message : msg;

            // remove the current block (if there is one)
            if (full && pageBlock)
                remove(window, { fadeOut: 0 });

            // if an existing element is being used as the blocking content then we capture
            // its current place in the DOM (and current display style) so we can restore
            // it when we unblock
            if (msg && typeof msg != 'string' && (msg.parentNode || msg.jquery)) {
                var node = msg.jquery ? msg[0] : msg;
                var data = {};
                $(el).data('blockUI.history', data);
                data.el = node;
                data.parent = node.parentNode;
                data.display = node.style.display;
                data.position = node.style.position;
                if (data.parent)
                    data.parent.removeChild(node);
            }

            $(el).data('blockUI.onUnblock', opts.onUnblock);
            var z = opts.baseZ;

            // blockUI uses 3 layers for blocking, for simplicity they are all used on every platform;
            // layer1 is the iframe layer which is used to supress bleed through of underlying content
            // layer2 is the overlay layer which has opacity and a wait cursor (by default)
            // layer3 is the message content that is displayed while blocking
            var lyr1, lyr2, lyr3, s;
            if (msie || opts.forceIframe)
                lyr1 = $('<iframe class="blockUI" style="z-index:' + (z++) + ';display:none;border:none;margin:0;padding:0;position:absolute;width:100%;height:100%;top:0;left:0" src="' + opts.iframeSrc + '"></iframe>');
            else
                lyr1 = $('<div class="blockUI" style="display:none"></div>');

            if (opts.theme)
                lyr2 = $('<div class="blockUI blockOverlay ui-widget-overlay" style="z-index:' + (z++) + ';display:none"></div>');
            else
                lyr2 = $('<div class="blockUI blockOverlay" style="z-index:' + (z++) + ';display:none;border:none;margin:0;padding:0;width:100%;height:100%;top:0;left:0"></div>');

            if (opts.theme && full) {
                s = '<div class="blockUI ' + opts.blockMsgClass + ' blockPage ui-dialog ui-widget ui-corner-all" style="z-index:' + (z + 10) + ';display:none;position:fixed">';
                if (opts.title) {
                    s += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (opts.title || '&nbsp;') + '</div>';
                }
                s += '<div class="ui-widget-content ui-dialog-content"></div>';
                s += '</div>';
            }
            else if (opts.theme) {
                s = '<div class="blockUI ' + opts.blockMsgClass + ' blockElement ui-dialog ui-widget ui-corner-all" style="z-index:' + (z + 10) + ';display:none;position:absolute">';
                if (opts.title) {
                    s += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (opts.title || '&nbsp;') + '</div>';
                }
                s += '<div class="ui-widget-content ui-dialog-content"></div>';
                s += '</div>';
            }
            else if (full) {
                s = '<div class="blockUI ' + opts.blockMsgClass + ' blockPage" style="z-index:' + (z + 10) + ';display:none;position:fixed"></div>';
            }
            else {
                s = '<div class="blockUI ' + opts.blockMsgClass + ' blockElement" style="z-index:' + (z + 10) + ';display:none;position:absolute"></div>';
            }
            lyr3 = $(s);

            // if we have a message, style it
            if (msg) {
                if (opts.theme) {
                    lyr3.css(themedCSS);
                    lyr3.addClass('ui-widget-content');
                }
                else
                    lyr3.css(css);
            }

            // style the overlay
            if (!opts.theme /*&& (!opts.applyPlatformOpacityRules)*/)
                lyr2.css(opts.overlayCSS);
            lyr2.css('position', full ? 'fixed' : 'absolute');

            // make iframe layer transparent in IE
            if (msie || opts.forceIframe)
                lyr1.css('opacity', 0.0);

            //$([lyr1[0],lyr2[0],lyr3[0]]).appendTo(full ? 'body' : el);
            var layers = [lyr1, lyr2, lyr3], $par = full ? $('body') : $(el);
            $.each(layers, function () {
                this.appendTo($par);
            });

            if (opts.theme && opts.draggable && $.fn.draggable) {
                lyr3.draggable({
                    handle: '.ui-dialog-titlebar',
                    cancel: 'li'
                });
            }

            // ie7 must use absolute positioning in quirks mode and to account for activex issues (when scrolling)
            var expr = setExpr && (!$.support.boxModel || $('object,embed', full ? null : el).length > 0);
            if (ie6 || expr) {
                // give body 100% height
                if (full && opts.allowBodyStretch && $.support.boxModel)
                    $('html,body').css('height', '100%');

                // fix ie6 issue when blocked element has a border width
                if ((ie6 || !$.support.boxModel) && !full) {
                    var t = sz(el, 'borderTopWidth'), l = sz(el, 'borderLeftWidth');
                    var fixT = t ? '(0 - ' + t + ')' : 0;
                    var fixL = l ? '(0 - ' + l + ')' : 0;
                }

                // simulate fixed position
                $.each(layers, function (i, o) {
                    var s = o[0].style;
                    s.position = 'absolute';
                    if (i < 2) {
                        if (full)
                            s.setExpression('height', 'Math.max(document.body.scrollHeight, document.body.offsetHeight) - (jQuery.support.boxModel?0:' + opts.quirksmodeOffsetHack + ') + "px"');
                        else
                            s.setExpression('height', 'this.parentNode.offsetHeight + "px"');
                        if (full)
                            s.setExpression('width', 'jQuery.support.boxModel && document.documentElement.clientWidth || document.body.clientWidth + "px"');
                        else
                            s.setExpression('width', 'this.parentNode.offsetWidth + "px"');
                        if (fixL) s.setExpression('left', fixL);
                        if (fixT) s.setExpression('top', fixT);
                    }
                    else if (opts.centerY) {
                        if (full) s.setExpression('top', '(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (blah = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"');
                        s.marginTop = 0;
                    }
                    else if (!opts.centerY && full) {
                        var top = (opts.css && opts.css.top) ? parseInt(opts.css.top, 10) : 0;
                        var expression = '((document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + ' + top + ') + "px"';
                        s.setExpression('top', expression);
                    }
                });
            }

            // show the message
            if (msg) {
                if (opts.theme)
                    lyr3.find('.ui-widget-content').append(msg);
                else
                    lyr3.append(msg);
                if (msg.jquery || msg.nodeType)
                    $(msg).show();
            }

            if ((msie || opts.forceIframe) && opts.showOverlay)
                lyr1.show(); // opacity is zero
            if (opts.fadeIn) {
                var cb = opts.onBlock ? opts.onBlock : noOp;
                var cb1 = (opts.showOverlay && !msg) ? cb : noOp;
                var cb2 = msg ? cb : noOp;
                if (opts.showOverlay)
                    lyr2._fadeIn(opts.fadeIn, cb1);
                if (msg)
                    lyr3._fadeIn(opts.fadeIn, cb2);
            }
            else {
                if (opts.showOverlay)
                    lyr2.show();
                if (msg)
                    lyr3.show();
                if (opts.onBlock)
                    opts.onBlock();
            }

            // bind key and mouse events
            bind(1, el, opts);

            if (full) {
                pageBlock = lyr3[0];
                pageBlockEls = $(opts.focusableElements, pageBlock);
                if (opts.focusInput)
                    setTimeout(focus, 20);
            }
            else
                center(lyr3[0], opts.centerX, opts.centerY);

            if (opts.timeout) {
                // auto-unblock
                var to = setTimeout(function () {
                    if (full)
                        $.unblockUI(opts);
                    else
                        $(el).unblock(opts);
                }, opts.timeout);
                $(el).data('blockUI.timeout', to);
            }
        }

        // remove the block
        function remove(el, opts) {
            var count;
            var full = (el == window);
            var $el = $(el);
            var data = $el.data('blockUI.history');
            var to = $el.data('blockUI.timeout');
            if (to) {
                clearTimeout(to);
                $el.removeData('blockUI.timeout');
            }
            opts = $.extend({}, $.blockUI.defaults, opts || {});
            bind(0, el, opts); // unbind events

            if (opts.onUnblock === null) {
                opts.onUnblock = $el.data('blockUI.onUnblock');
                $el.removeData('blockUI.onUnblock');
            }

            var els;
            if (full) // crazy selector to handle odd field errors in ie6/7
                els = $('body').children().filter('.blockUI').add('body > .blockUI');
            else
                els = $el.find('>.blockUI');

            // fix cursor issue
            if (opts.cursorReset) {
                if (els.length > 1)
                    els[1].style.cursor = opts.cursorReset;
                if (els.length > 2)
                    els[2].style.cursor = opts.cursorReset;
            }

            if (full)
                pageBlock = pageBlockEls = null;

            if (opts.fadeOut) {
                count = els.length;
                els.stop().fadeOut(opts.fadeOut, function () {
                    if (--count === 0)
                        reset(els, data, opts, el);
                });
            }
            else
                reset(els, data, opts, el);
        }

        // move blocking element back into the DOM where it started
        function reset(els, data, opts, el) {
            var $el = $(el);
            if ($el.data('blockUI.isBlocked'))
                return;

            els.each(function (i, o) {
                // remove via DOM calls so we don't lose event handlers
                if (this.parentNode)
                    this.parentNode.removeChild(this);
            });

            if (data && data.el) {
                data.el.style.display = data.display;
                data.el.style.position = data.position;
                if (data.parent)
                    data.parent.appendChild(data.el);
                $el.removeData('blockUI.history');
            }

            if ($el.data('blockUI.static')) {
                $el.css('position', 'static'); // #22
            }

            if (typeof opts.onUnblock == 'function')
                opts.onUnblock(el, opts);

            // fix issue in Safari 6 where block artifacts remain until reflow
            var body = $(document.body), w = body.width(), cssW = body[0].style.width;
            body.width(w - 1).width(w);
            body[0].style.width = cssW;
        }

        // bind/unbind the handler
        function bind(b, el, opts) {
            var full = el == window, $el = $(el);

            // don't bother unbinding if there is nothing to unbind
            if (!b && (full && !pageBlock || !full && !$el.data('blockUI.isBlocked')))
                return;

            $el.data('blockUI.isBlocked', b);

            // don't bind events when overlay is not in use or if bindEvents is false
            if (!full || !opts.bindEvents || (b && !opts.showOverlay))
                return;

            // bind anchors and inputs for mouse and key events
            var events = 'mousedown mouseup keydown keypress keyup touchstart touchend touchmove';
            if (b)
                $(document).bind(events, opts, handler);
            else
                $(document).unbind(events, handler);

            // former impl...
            //		var $e = $('a,:input');
            //		b ? $e.bind(events, opts, handler) : $e.unbind(events, handler);
        }

        // event handler to suppress keyboard/mouse events when blocking
        function handler(e) {
            // allow tab navigation (conditionally)
            if (e.type === 'keydown' && e.keyCode && e.keyCode == 9) {
                if (pageBlock && e.data.constrainTabKey) {
                    var els = pageBlockEls;
                    var fwd = !e.shiftKey && e.target === els[els.length - 1];
                    var back = e.shiftKey && e.target === els[0];
                    if (fwd || back) {
                        setTimeout(function () { focus(back); }, 10);
                        return false;
                    }
                }
            }
            var opts = e.data;
            var target = $(e.target);
            if (target.hasClass('blockOverlay') && opts.onOverlayClick)
                opts.onOverlayClick();

            // allow events within the message content
            if (target.parents('div.' + opts.blockMsgClass).length > 0)
                return true;

            // allow events for content that is not being blocked
            return target.parents().children().filter('div.blockUI').length === 0;
        }

        function focus(back) {
            if (!pageBlockEls)
                return;
            var e = pageBlockEls[back === true ? pageBlockEls.length - 1 : 0];
            if (e)
                e.focus();
        }

        function center(el, x, y) {
            var p = el.parentNode, s = el.style;
            var l = ((p.offsetWidth - el.offsetWidth) / 2) - sz(p, 'borderLeftWidth');
            var t = ((p.offsetHeight - el.offsetHeight) / 2) - sz(p, 'borderTopWidth');
            if (x) s.left = l > 0 ? (l + 'px') : '0';
            if (y) s.top = t > 0 ? (t + 'px') : '0';
        }

        function sz(el, p) {
            return parseInt($.css(el, p), 10) || 0;
        }

    }


    /*global define:true */
    if (typeof define === 'function' && define.amd && define.amd.jQuery) {
        define(['jquery'], setup);
    } else {
        setup(jQuery);
    }

})();

//$.ajax({
//    complete: function (data)
//    {
//        // kill the block on either success or error
//        $.unblockUI();
//    }
//});
//Bug:31073
$(document).ajaxComplete(function (event, request, settings) {
    $.unblockUI();
});
;
/*
	Masked Input plugin for jQuery
	Copyright (c) 2007-2013 Josh Bush (digitalbush.com)
	Licensed under the MIT license (http://digitalbush.com/projects/masked-input-plugin/#license)
	Version: 1.3.1
*/
(function (e) { function t() { var e = document.createElement("input"), t = "onpaste"; return e.setAttribute(t, ""), "function" == typeof e[t] ? "paste" : "input" } var n, a = t() + ".mask", r = navigator.userAgent, i = /iphone/i.test(r), o = /android/i.test(r); e.mask = { definitions: { 9: "[0-9]", a: "[A-Za-z]", "*": "[A-Za-z0-9]" }, dataName: "rawMaskFn", placeholder: "_" }, e.fn.extend({ caret: function (e, t) { var n; if (0 !== this.length && !this.is(":hidden")) return "number" == typeof e ? (t = "number" == typeof t ? t : e, this.each(function () { this.setSelectionRange ? this.setSelectionRange(e, t) : this.createTextRange && (n = this.createTextRange(), n.collapse(!0), n.moveEnd("character", t), n.moveStart("character", e), n.select()) })) : (this[0].setSelectionRange ? (e = this[0].selectionStart, t = this[0].selectionEnd) : document.selection && document.selection.createRange && (n = document.selection.createRange(), e = 0 - n.duplicate().moveStart("character", -1e5), t = e + n.text.length), { begin: e, end: t }) }, unmask: function () { return this.trigger("unmask") }, mask: function (t, r) { var c, l, s, u, f, h; return !t && this.length > 0 ? (c = e(this[0]), c.data(e.mask.dataName)()) : (r = e.extend({ placeholder: e.mask.placeholder, completed: null }, r), l = e.mask.definitions, s = [], u = h = t.length, f = null, e.each(t.split(""), function (e, t) { "?" == t ? (h--, u = e) : l[t] ? (s.push(RegExp(l[t])), null === f && (f = s.length - 1)) : s.push(null) }), this.trigger("unmask").each(function () { function c(e) { for (; h > ++e && !s[e];); return e } function d(e) { for (; --e >= 0 && !s[e];); return e } function m(e, t) { var n, a; if (!(0 > e)) { for (n = e, a = c(t) ; h > n; n++) if (s[n]) { if (!(h > a && s[n].test(R[a]))) break; R[n] = R[a], R[a] = r.placeholder, a = c(a) } b(), x.caret(Math.max(f, e)) } } function p(e) { var t, n, a, i; for (t = e, n = r.placeholder; h > t; t++) if (s[t]) { if (a = c(t), i = R[t], R[t] = n, !(h > a && s[a].test(i))) break; n = i } } function g(e) { var t, n, a, r = e.which; 8 === r || 46 === r || i && 127 === r ? (t = x.caret(), n = t.begin, a = t.end, 0 === a - n && (n = 46 !== r ? d(n) : a = c(n - 1), a = 46 === r ? c(a) : a), k(n, a), m(n, a - 1), e.preventDefault()) : 27 == r && (x.val(S), x.caret(0, y()), e.preventDefault()) } function v(t) { var n, a, i, l = t.which, u = x.caret(); t.ctrlKey || t.altKey || t.metaKey || 32 > l || l && (0 !== u.end - u.begin && (k(u.begin, u.end), m(u.begin, u.end - 1)), n = c(u.begin - 1), h > n && (a = String.fromCharCode(l), s[n].test(a) && (p(n), R[n] = a, b(), i = c(n), o ? setTimeout(e.proxy(e.fn.caret, x, i), 0) : x.caret(i), r.completed && i >= h && r.completed.call(x))), t.preventDefault()) } function k(e, t) { var n; for (n = e; t > n && h > n; n++) s[n] && (R[n] = r.placeholder) } function b() { x.val(R.join("")) } function y(e) { var t, n, a = x.val(), i = -1; for (t = 0, pos = 0; h > t; t++) if (s[t]) { for (R[t] = r.placeholder; pos++ < a.length;) if (n = a.charAt(pos - 1), s[t].test(n)) { R[t] = n, i = t; break } if (pos > a.length) break } else R[t] === a.charAt(pos) && t !== u && (pos++, i = t); return e ? b() : u > i + 1 ? (x.val(""), k(0, h)) : (b(), x.val(x.val().substring(0, i + 1))), u ? t : f } var x = e(this), R = e.map(t.split(""), function (e) { return "?" != e ? l[e] ? r.placeholder : e : void 0 }), S = x.val(); x.data(e.mask.dataName, function () { return e.map(R, function (e, t) { return s[t] && e != r.placeholder ? e : null }).join("") }), x.attr("readonly") || x.one("unmask", function () { x.unbind(".mask").removeData(e.mask.dataName) }).bind("focus.mask", function () { clearTimeout(n); var e; S = x.val(), e = y(), n = setTimeout(function () { b(), e == t.length ? x.caret(0, e) : x.caret(e) }, 10) }).bind("blur.mask", function () { y(), x.val() != S && x.change() }).bind("keydown.mask", g).bind("keypress.mask", v).bind(a, function () { setTimeout(function () { var e = y(!0); x.caret(e), r.completed && e == x.val().length && r.completed.call(x) }, 0) }), y() })) } }) })(jQuery);;
/*!
 * jQuery Raty - A Star Rating Plugin
 *
 * Licensed under The MIT License
 *
 * @version        2.4.5
 * @author         Washington Botelho
 * @documentation  wbotelhos.com/raty
 *
 */

;(function(b){var a={init:function(c){return this.each(function(){var d=this,h=b(d).empty();d.opt=b.extend(true,{},b.fn.raty.defaults,c);h.data("settings",d.opt);d.opt.number=a.between(d.opt.number,0,20);if(d.opt.path.substring(d.opt.path.length-1,d.opt.path.length)!="/"){d.opt.path+="/";}if(typeof d.opt.score=="function"){d.opt.score=d.opt.score.call(d);}if(d.opt.score){d.opt.score=a.between(d.opt.score,0,d.opt.number);}for(var e=1;e<=d.opt.number;e++){b("<img />",{src:d.opt.path+((!d.opt.score||d.opt.score<e)?d.opt.starOff:d.opt.starOn),alt:e,title:(e<=d.opt.hints.length&&d.opt.hints[e-1]!==null)?d.opt.hints[e-1]:e}).appendTo(d);if(d.opt.space){h.append((e<d.opt.number)?"&#160;":"");}}d.stars=h.children('img:not(".raty-cancel")');d.score=b("<input />",{type:"hidden",name:d.opt.scoreName}).appendTo(d);if(d.opt.score&&d.opt.score>0){d.score.val(d.opt.score);a.roundStar.call(d,d.opt.score);}if(d.opt.iconRange){a.fill.call(d,d.opt.score);}a.setTarget.call(d,d.opt.score,d.opt.targetKeep);var g=d.opt.space?4:0,f=d.opt.width||(d.opt.number*d.opt.size+d.opt.number*g);if(d.opt.cancel){d.cancel=b("<img />",{src:d.opt.path+d.opt.cancelOff,alt:"x",title:d.opt.cancelHint,"class":"raty-cancel"});if(d.opt.cancelPlace=="left"){h.prepend("&#160;").prepend(d.cancel);}else{h.append("&#160;").append(d.cancel);}f+=(d.opt.size+g);}if(d.opt.readOnly){a.fixHint.call(d);if(d.cancel){d.cancel.hide();}}else{h.css("cursor","pointer");a.bindAction.call(d);}h.css("width",f);});},between:function(e,d,c){return Math.min(Math.max(parseFloat(e),d),c);},bindAction:function(){var c=this,e=b(c);e.mouseleave(function(){var f=c.score.val()||undefined;a.initialize.call(c,f);a.setTarget.call(c,f,c.opt.targetKeep);if(c.opt.mouseover){c.opt.mouseover.call(c,f);}});var d=c.opt.half?"mousemove":"mouseover";if(c.opt.cancel){c.cancel.mouseenter(function(){b(this).attr("src",c.opt.path+c.opt.cancelOn);c.stars.attr("src",c.opt.path+c.opt.starOff);a.setTarget.call(c,null,true);if(c.opt.mouseover){c.opt.mouseover.call(c,null);}}).mouseleave(function(){b(this).attr("src",c.opt.path+c.opt.cancelOff);if(c.opt.mouseover){c.opt.mouseover.call(c,c.score.val()||null);}}).click(function(f){c.score.removeAttr("value");if(c.opt.click){c.opt.click.call(c,null,f);}});}c.stars.bind(d,function(g){var h=parseInt(this.alt,10);if(c.opt.half){var f=parseFloat((g.pageX-b(this).offset().left)/c.opt.size),i=(f>0.5)?1:0.5;h=parseFloat(this.alt)-1+i;a.fill.call(c,h);if(c.opt.precision){h=h-i+f;}a.showHalf.call(c,h);}else{a.fill.call(c,h);}e.data("score",h);a.setTarget.call(c,h,true);if(c.opt.mouseover){c.opt.mouseover.call(c,h,g);}}).click(function(f){c.score.val((c.opt.half||c.opt.precision)?e.data("score"):this.alt);if(c.opt.click){c.opt.click.call(c,c.score.val(),f);}});},cancel:function(c){return b(this).each(function(){var d=this,e=b(d);if(e.data("readonly")===true){return this;}if(c){a.click.call(d,null);}else{a.score.call(d,null);}d.score.removeAttr("value");});},click:function(c){return b(this).each(function(){if(b(this).data("readonly")===true){return this;}a.initialize.call(this,c);if(this.opt.click){this.opt.click.call(this,c);}else{a.error.call(this,'you must add the "click: function(score, evt) { }" callback.');}a.setTarget.call(this,c,true);});},error:function(c){b(this).html(c);b.error(c);},fill:function(k){var c=this,h=c.stars.length,g=0,d,j,f;for(var e=1;e<=h;e++){d=c.stars.eq(e-1);if(c.opt.iconRange&&c.opt.iconRange.length>g){j=c.opt.iconRange[g];if(c.opt.single){f=(e==k)?(j.on||c.opt.starOn):(j.off||c.opt.starOff);}else{f=(e<=k)?(j.on||c.opt.starOn):(j.off||c.opt.starOff);}if(e<=j.range){d.attr("src",c.opt.path+f);}if(e==j.range){g++;}}else{if(c.opt.single){f=(e==k)?c.opt.starOn:c.opt.starOff;}else{f=(e<=k)?c.opt.starOn:c.opt.starOff;}d.attr("src",c.opt.path+f);}}},fixHint:function(){var c=b(this),e=parseInt(this.score.val(),10),d=this.opt.noRatedMsg;if(!isNaN(e)&&e>0){d=(e<=this.opt.hints.length&&this.opt.hints[e-1]!==null)?this.opt.hints[e-1]:e;}c.data("readonly",true).css("cursor","default").attr("title",d);this.score.attr("readonly","readonly");this.stars.attr("title",d);},getScore:function(){var d=[],c;b(this).each(function(){c=this.score.val();d.push(c?parseFloat(c):undefined);});return(d.length>1)?d:d[0];},readOnly:function(c){return this.each(function(){var d=b(this);if(d.data("readonly")===c){return this;}if(this.cancel){if(c){this.cancel.hide();}else{this.cancel.show();}}if(c){d.unbind();d.children("img").unbind();a.fixHint.call(this);}else{a.bindAction.call(this);a.unfixHint.call(this);}d.data("readonly",c);});},reload:function(){return a.set.call(this,{});},roundStar:function(e){var d=(e-Math.floor(e)).toFixed(2);if(d>this.opt.round.down){var c=this.opt.starOn;if(d<this.opt.round.up&&this.opt.halfShow){c=this.opt.starHalf;}else{if(d<this.opt.round.full){c=this.opt.starOff;}}this.stars.eq(Math.ceil(e)-1).attr("src",this.opt.path+c);}},score:function(){return arguments.length?a.setScore.apply(this,arguments):a.getScore.call(this);},set:function(c){this.each(function(){var d=b(this),f=d.data("settings"),e=d.clone().removeAttr("style").insertBefore(d);d.remove();e.raty(b.extend(f,c));});return b(this.selector);},setScore:function(c){return b(this).each(function(){if(b(this).data("readonly")===true){return this;}a.initialize.call(this,c);a.setTarget.call(this,c,true);});},setTarget:function(e,d){if(this.opt.target){var c=b(this.opt.target);if(c.length==0){a.error.call(this,"target selector invalid or missing!");}var f=e;if(!d||f===undefined){f=this.opt.targetText;}else{if(this.opt.targetType=="hint"){f=(f===null&&this.opt.cancel)?this.opt.cancelHint:this.opt.hints[Math.ceil(f-1)];}else{f=this.opt.precision?parseFloat(f).toFixed(1):f;}}if(this.opt.targetFormat.indexOf("{score}")<0){a.error.call(this,'template "{score}" missing!');}if(e!==null){f=this.opt.targetFormat.toString().replace("{score}",f);}if(c.is(":input")){c.val(f);}else{c.html(f);}}},showHalf:function(d){var c=(d-Math.floor(d)).toFixed(1);if(c>0&&c<0.6){this.stars.eq(Math.ceil(d)-1).attr("src",this.opt.path+this.opt.starHalf);}},initialize:function(c){c=!c?0:a.between(c,0,this.opt.number);a.fill.call(this,c);if(c>0){if(this.opt.halfShow){a.roundStar.call(this,c);}this.score.val(c);}},unfixHint:function(){for(var c=0;c<this.opt.number;c++){this.stars.eq(c).attr("title",(c<this.opt.hints.length&&this.opt.hints[c]!==null)?this.opt.hints[c]:c);}b(this).data("readonly",false).css("cursor","pointer").removeAttr("title");this.score.attr("readonly","readonly");}};b.fn.raty=function(c){if(a[c]){return a[c].apply(this,Array.prototype.slice.call(arguments,1));}else{if(typeof c==="object"||!c){return a.init.apply(this,arguments);}else{b.error("Method "+c+" does not exist!");}}};b.fn.raty.defaults={cancel:false,cancelHint:"cancel this rating!",cancelOff:"cancel-off.png",cancelOn:"cancel-on.png",cancelPlace:"left",click:undefined,half:false,halfShow:true,hints:["bad","poor","regular","good","gorgeous"],iconRange:undefined,mouseover:undefined,noRatedMsg:"not rated yet",number:5,path:"img/",precision:false,round:{down:0.25,full:0.6,up:0.76},readOnly:false,score:undefined,scoreName:"score",single:false,size:16,space:true,starHalf:"star-half.png",starOff:"star-off.png",starOn:"star-on.png",target:undefined,targetFormat:"{score}",targetKeep:false,targetText:"",targetType:"hint",width:undefined};})(jQuery);
;
var pageXpos = 0;
var pageYpos = 0;
$(document).bind('mousemove', function (e) {
    pageXpos = e.pageX;
    pageYpos = e.pageY;
});

var isIPadBrowser = navigator.userAgent != null && navigator.userAgent.toLowerCase().indexOf('ipad') >= 0;
var ipadOrientation = Math.abs(window.orientation) == 90 ? 'landscape' : 'portrait';

// Properties of scaled slideFullScreen viewer modals
var largeModal = { imgWidth: 800, imgHeight: 600, modalWidth: 1145, modalHeight: 750, cssClass: 'largeModal', visibleTmbCount: 6 };
var mediumModal = { imgWidth: 608, imgHeight: 456, modalWidth: 950, modalHeight: 587, cssClass: 'mediumModal', visibleTmbCount: 3 };
var smallModal = { imgWidth: 719, imgHeight: 539, modalWidth: 728, modalHeight: 587, cssClass: 'smallModal', visibleTmbCount: 3 };
var isGalleryShow = false;

// Assign modal size based on viewport size
var currentViewport = $(window);
var modalSize;

var refreshBannerTimer = null;

if (currentViewport.width() < 991 && !isIPadBrowser) {
    modalSize = smallModal;
}
else if ((currentViewport.height() < 609) || (currentViewport.width() >= 991 && currentViewport.width() < 1300) || (currentViewport.width() >= 1300 && currentViewport.height() < 768) || isIPadBrowser) {
    modalSize = mediumModal;
}
else if (currentViewport.width() >= 1300 && currentViewport.height() >= 768) {
    modalSize = largeModal;    // Large image - 800 x 600 image - Viewport >= 1300 x 768
}

var timeout, clicker = $('#clicker');

$(document).mouseup(function () {
    clearInterval(timeout);
    return true;
});

function createMultiPhotoViewer(theXML, thumbWidth, thumbHeight, thumbMarginV, thumbMarginH, thumbBorderWidth, maxCols, fullWidth, fullHeight, largeOption, isVerticalScroll, idPrefix, initialSlide, largeZoomWidth, largeZoomHeight, largeZoomIsVerticalScroll, largeZoomidPrefix, largeZoomthumbMarginV, largeZoomthumbMarginH, largeZoomthumbBorderWidth, leaderboardAdURL, bbAdURL, dealerEvent) {
    if (theXML != "" && theXML.indexOf("<gallery></gallery>", 0) == -1) {
        this.container = document.getElementById(idPrefix);
        this.container.thumbWidth = thumbWidth;
        this.container.thumbHeight = thumbHeight;
        this.container.thumbMarginV = thumbMarginV;
        this.container.thumbMarginH = thumbMarginH;
        this.container.thumbBorderWidth = thumbBorderWidth;
        this.container.largeZoomthumbMarginV = largeZoomthumbMarginV;
        this.container.largeZoomthumbMarginH = largeZoomthumbMarginH;
        this.container.largeZoomthumbBorderWidth = largeZoomthumbBorderWidth;
        this.container.maxCols = maxCols;
        this.container.fullWidth = fullWidth;
        this.container.fullHeight = fullHeight;
        this.container.largeOption = largeOption;
        this.container.isVerticalScroll = isVerticalScroll;
        this.container.idPrefix = idPrefix;
        this.container.theXML = theXML;
        this.container.currentSlide = 9;
        this.container.initialSlide = initialSlide;
        this.container.largeZoomWidth = largeZoomWidth;
        this.container.largeZoomHeight = largeZoomHeight;
        this.container.largeZoomIsVerticalScroll = largeZoomIsVerticalScroll;
        this.container.largeZoomidPrefix = largeZoomidPrefix;
        this.container.playActive = false;
        this.container.scrollMagnitude = 0;

        this.container.leaderboardAdURL = leaderboardAdURL;
        this.container.bbAdURL = bbAdURL;
        this.container.dealerEvent = dealerEvent;

        this.lastLoadedThumb = 0;
        this.slideAutoChange;
        this.currentImageLoaded = true;
        this.scrollLockout = false;

        this.container.newImage = new Image();


        this.container.bMID = mainImageDiv;
        this.container.b360 = cont360Buttons;
        this.container.aS = autoSlide;
        this.container.aSC = autoSlideChange;
        this.container.sCS = setCurrentSlide;
        this.container.gCS = getCurrentSlide;
        this.container.nS = nextSlide;
        this.container.pS = prevSlide;
        this.container.bTD = tnDiv;
        this.container.cS = changeSlide;
        this.container.wF = waitFor;
        this.container.sP = scrollPos;
        this.container.sN = scrollNeg;
        this.container.sSH = setScrollHandle;
        this.container.dFIFR = displayFullImageFromResults;
        // this.container.sS = scrollStop;
        this.container.fSV = fullScreenViewer;
        this.container.pTA = photoXMLToArray;
        this.container.tnITL = tnImgTestLoad;
        //this.container.mT = moveThumb;
        this.container.fT = focusThumb;
        this.container.imageLoadedArray;
        this.container.imageArray;
        this.container.tnAmount = 0;
        this.container.scroller = scroller;
        this.container.cfv = closeFullViever;

        this.container.gTW = getThumbWidth;
        this.container.gTH = getThumbHeight;

        this.container.pTA();
        this.container.bMID();
        this.container.bTD();
        this.container.junkbool = false;

        this.container.scrollDir = "scrollLeft";
        if (isVerticalScroll) {
            this.scrollDir = "scrollTop";
        }

        this.container.dFIFR(largeOption);
        this.container.tnITL();
        this.container.cS();
    }
}

function displayFullImageFromResults(hasLargeOption) {
    thisObj = this;
    thumbURL = getParameterByName("thumbURL");
    if (thumbURL != null && hasLargeOption == true) {
        for (i = 0; i < this.imageArray.length; i++) {
            if (this.imageArray[i].imagePath == thumbURL) {
                this.sCS(i);
                this.fT();
                this.tnITL();
                setTimeout(function () { thisObj.sSH(); }, 400);
                break;
            }
        }
    } else {
        this.sCS(this.initialSlide);
        this.tnDiv.scrollLeft = 0;
        this.tnDiv.scrollTop = 0;

        this.fT();
        this.tnITL();
        setTimeout(function () { thisObj.sSH(); }, 400);
    }
}

function getCurrentSlide() {
    return this.currentSlide;
}

function getThumbWidth() {
    return (this.thumbWidth + this.thumbMarginH + (this.thumbBorderWidth * 2));
}

function getThumbHeight() {
        return (this.thumbHeight + (this.thumbMarginV * 2) + (this.thumbBorderWidth * 2));
}

function nextSlide() {

    // Size video to match current modal size, after video player loads
    setTimeout(function () { 
        if (isPV == 'true') {
            $('#slideFullScreen .jwplayer').css({ width: $('#slideFullScreen .ImageDiv').width(), height: $('#slideFullScreen .ImageDiv').height() });
        }
        else {
            $('#slideFullScreen .pf-container').css({ width: $('#slideFullScreen .ImageDiv').width(), height: $('#slideFullScreen .ImageDiv').height() });
        }
    }, 1500);

    if (this.gCS() == this.imageArray.length - 1) {
        this.sCS(9);
        this.tnDiv.scrollLeft = 0;
        this.sSH();
        this.fT();
    } else {
        this.sCS(this.gCS() + 1);
        this.fT();
        this.tnITL();
        this.sSH();
    }

    if (this.imageArray.length > 10) {
        wa_trackMultiPhotoView(window.location.href);
        dl_trackMedia(this);
        refreshBannerAd();
    }
}

function prevSlide() {
    // Size video to match current modal size, after video player loads
    setTimeout(function () {
        if (isPV == 'true') {
            $('#slideFullScreen .jwplayer').css({ width: $('#slideFullScreen .ImageDiv').width(), height: $('#slideFullScreen .ImageDiv').height() });
        }
        else {
            $('#slideFullScreen .pf-container').css({ width: $('#slideFullScreen .ImageDiv').width(), height: $('#slideFullScreen .ImageDiv').height() });
        }
    }, 1500);

   if (this.gCS() == 9) {
        this.sCS(this.imageArray.length - 1);
        this.tnDiv.scrollLeft = this.tnAmount * this.gTW();
    } else {
        this.sCS(this.gCS() - 1);
        this.fT();
        this.tnITL();
   }

    if (this.imageArray.length > 10) {
        wa_trackMultiPhotoView(window.location.href);
        dl_trackMedia(this);
        refreshBannerAd();
    }
}

function focusThumb() {
    thisObj = this;
    // First slide - Hide up arrow
    if(this.gCS() == 9)     
    {           
        // Adjust thumbnail positioning
        $(thisObj.tnDiv).scrollTo(thisObj.tnDiv.wDiv.tn[thisObj.gCS()], 400, { offset: - (this.gTH) });
        //Hide Up Arrow
        $('#slideFullScreen .leftScrollDiv').addClass('leftScrollDiv_disabled');
        $('#slideFullScreen .mTSButton.mTSButtonUp').css({ 'display': 'none' });
        // Show Down Arrow
        $('#slideFullScreen .rightScrollDiv').removeClass('rightScrollDiv_disabled');
        $('#slideFullScreen .mTSButton.mTSButtonDown').css({'display': 'block' });
    }
    // Middle of gallery slide, while last slide is NOT in view  - Show both up and down arrows
    else if (this.gCS() > 9 && this.gCS() < this.imageArray.length - modalSize.visibleTmbCount)
    {  
        // Adjust thumbnail positioning
        $(thisObj.tnDiv).scrollTo(thisObj.tnDiv.wDiv.tn[thisObj.gCS()], 400, { offset: -(this.gTH) });
        // Show Up Arrow
        $('#slideFullScreen .leftScrollDiv').removeClass('leftScrollDiv_disabled');
        $('#slideFullScreen .mTSButton.mTSButtonUp').css({'display': 'block' });

    }
    // Last slide is in view - hide down arrow
    else if (this.gCS() == this.imageArray.length - modalSize.visibleTmbCount)        
    {
        // Adjust thumbnail positioning
        $(thisObj.tnDiv).scrollTo(thisObj.tnDiv.wDiv.tn[thisObj.gCS()], 400, { offset: - 1 });
        // Hide Down Arrow
        $('#slideFullScreen .rightScrollDiv').addClass('rightScrollDiv_disabled');
        $('#slideFullScreen .mTSButton.mTSButtonDown').css({'display': 'none'});
    }   
    setTimeout(function () { thisObj.tnITL(); }, 500);
}

function setCurrentSlide(val) {
    var thisObj = this;
    if (val > 0 && val < 9) {
        if (this.currentSlide > 8) {
            this.tnDiv.wDiv.tn[this.currentSlide].className = "tn";
            setTimeout(function () {
                if (!thisObj.playActive) {
                    thisObj.playActive = true;
                    thisObj.aS();
                }
            }, 500);
        }
        this.mIDiv.b360Div.style.display = 'block';
        this.tnDiv.wDiv.tn[1].className = "tn tn_selected";

        // Set border colors for selected and unselected navigation bullets
            $('.tn circle').attr({ 'r': '5', 'stroke': '#a3a3a3' });
            $('.tn_selected circle').attr({ 'r': '5', 'stroke': '#14709E' });

        this.mIDiv.pSBtn.style.display = "none";
        this.mIDiv.nSBtn.style.display = "none";

    } else {

        if (this.currentSlide > 0 && this.currentSlide < 9) {
            this.mIDiv.b360Div.style.display = 'none';
            this.mIDiv.pSBtn.style.display = "block";
            this.mIDiv.nSBtn.style.display = "block";
            this.tnDiv.wDiv.tn[1].className = "tn";
            this.playActive = false;
        }
        else { this.tnDiv.wDiv.tn[this.currentSlide].className = "tn"; }
    
        if (typeof (this.tnDiv.wDiv.tn[val]) != "undefined")
        {
            this.tnDiv.wDiv.tn[val].className = "tn tn_selected";

        // Set border colors for selected and unselected navigation bullets
            $('.tn circle').attr({ 'r': '5', 'stroke': '#a3a3a3' });
            $('.tn_selected circle').attr({ 'r': '5', 'stroke': '#14709E' });
        }
    }
    this.currentSlide = val;
    this.cS();
}

function mainImageDiv() {
    this.mIDiv = document.createElement('div');
    this.mIDiv.className = 'ImageDiv';
    this.appendChild(this.mIDiv);
    this.mIDiv.loadingIcon = document.createElement('div');
    this.mIDiv.loadingIcon.className = 'loadingIcon';
    this.mIDiv.appendChild(this.mIDiv.loadingIcon);

    this.mIDiv.pSBtn = document.createElement('div');
    this.mIDiv.pSBtn.className = 'pSBtn';
    $(this.mIDiv.pSBtn).html('<div class="prevArrow"></div>');
    this.mIDiv.appendChild(this.mIDiv.pSBtn);
    this.mIDiv.pSBtn.onmousedown = function () { this.parentNode.parentNode.pS(); };

    this.mIDiv.nSBtn = document.createElement('div');
    this.mIDiv.nSBtn.className = 'nSBtn';
    $(this.mIDiv.nSBtn).html('<div class="nextArrow"></div>');

    this.mIDiv.appendChild(this.mIDiv.nSBtn);
    this.mIDiv.nSBtn.onmousedown = function () { this.parentNode.parentNode.nS(); };

    this.mIDiv.bgIDiv = document.createElement('div');
    this.mIDiv.bgIDiv.className = 'bgIDiv';
    this.mIDiv.appendChild(this.mIDiv.bgIDiv);
    this.mIDiv.bgIDiv.bgI = document.createElement('img');
    this.mIDiv.bgIDiv.bgI.src = "/Looks/default/images/pixel.gif";
    this.mIDiv.bgIDiv.bgI.width = this.fullWidth;
    this.mIDiv.bgIDiv.bgI.height = this.fullHeight;
    this.mIDiv.bgIDiv.appendChild(this.mIDiv.bgIDiv.bgI);
    this.mIDiv.fgIDiv = document.createElement('div');
    this.mIDiv.fgIDiv.className = 'fgIDiv';
    this.mIDiv.appendChild(this.mIDiv.fgIDiv);

    if (isPV == 'true') {
        this.mIDiv.fgIDiv.stDiv = document.createElement('div');
        this.mIDiv.fgIDiv.appendChild(this.mIDiv.fgIDiv.stDiv);

        this.mIDiv.fgIDiv.stDiv.mI = document.createElement('img');
        this.mIDiv.fgIDiv.stDiv.mI.width = this.fullWidth;
        this.mIDiv.fgIDiv.stDiv.mI.height = this.fullHeight;
        this.mIDiv.fgIDiv.stDiv.mI.setAttribute('alt', altTitle);
        this.mIDiv.fgIDiv.stDiv.mI.setAttribute("itemprop", "image");
        if (this.largeOption) {
            this.mIDiv.fgIDiv.onmousedown = function () { this.parentNode.parentNode.fSV(); };
        } else {
            this.mIDiv.fgIDiv.onmousedown = function () { this.parentNode.parentNode.nS(); };
        }
        this.mIDiv.fgIDiv.stDiv.appendChild(this.mIDiv.fgIDiv.stDiv.mI);
    }
    else {
        this.mIDiv.fgIDiv.mI = document.createElement('img');
        this.mIDiv.fgIDiv.mI.setAttribute('alt', altTitle);
        if (this.largeOption) {
            this.mIDiv.fgIDiv.onmousedown = function () { this.parentNode.parentNode.fSV(); };
        } else {
            this.mIDiv.fgIDiv.onmousedown = function () { this.parentNode.parentNode.nS(); };
        }
        this.mIDiv.fgIDiv.appendChild(this.mIDiv.fgIDiv.mI);
    }

    this.b360();

    if (this.largeOption) {
        this.mIDiv.fSBtn = document.createElement('div');
        this.mIDiv.fSBtn.className = 'fSBtn';
        this.mIDiv.fSBtn.onmouseout = function () { this.className = "fSBtn"; };
        this.mIDiv.fSBtn.onmouseover = function () { this.className = "fSBtn fSBtn_over"; };
        this.mIDiv.fSBtn.onmousedown = function () { this.parentNode.parentNode.fSV(); this.className = "fSBtn fSBtn_down" };
        this.mIDiv.fSBtn.onmouseup = function () { this.className = "fSBtn fSBtn_over" };
        this.mIDiv.appendChild(this.mIDiv.fSBtn);
    }
}

function tnDiv() {
    var thisObj = this;
    this.tnAmount = this.imageArray.length - 8;
    var colCount = 0;
    if (this.imageArray[1] != "") {
        this.tnAmount = this.tnAmount;
    } else {
        this.tnAmount = this.tnAmount - 1;
    }
    if (this.tnAmount > this.maxCols) {
        this.tnAmount = this.maxCols;
    }
    this.tnDiv = document.createElement('div');
    this.tnDiv.className = 'thumbNailContainer';

    this.tnDiv.setAttribute('id', 'divThumbNailContainer');

    this.tnDiv.style.overflow = "hidden";
    this.appendChild(this.tnDiv);
    this.tnDiv.wDiv = document.createElement('div');
    this.tnDiv.wDiv.className = 'widthDiv';
    this.tnDiv.wDiv.style.width = this.tnAmount * this.gTW() + "px";
    this.tnDiv.appendChild(this.tnDiv.wDiv);

    this.tnDiv.wDiv.tn = new Array();
    for (i = 0; i < this.imageArray.length; i++) {
        if ((i == 1 && this.imageArray[i].imagePath != null) || (i > 8)) {
            colCount++;
            this.tnDiv.wDiv.tn[i] = document.createElement('div');
            this.tnDiv.wDiv.tn[i].className = 'tn';
            this.tnDiv.wDiv.tn[i].style.marginTop = this.thumbMarginV + "px";
            this.tnDiv.wDiv.tn[i].style.marginLeft = this.thumbMarginH + "px";
            this.tnDiv.wDiv.tn[i].style.borderWidth = this.thumbBorderWidth + "px";
            this.tnDiv.wDiv.tn[i].style.width = this.thumbWidth + "px";
            this.tnDiv.wDiv.tn[i].style.height = this.thumbHeight + "px";
            if (i == 1) {
                this.tnDiv.wDiv.tn[i].icon360div = document.createElement('div');
                this.tnDiv.wDiv.tn[i].icon360div.className = "icon360div";
                this.tnDiv.wDiv.tn[i].appendChild(this.tnDiv.wDiv.tn[i].icon360div);
            }
            if (this.imageArray[i].itemType == "video") {
                this.tnDiv.wDiv.tn[i].playVideoOverLay = document.createElement('div');
                this.tnDiv.wDiv.tn[i].playVideoOverLay.className = "at_playVideoOverLay";
                if (!adHasMarketplaceVideo) {
                    this.tnDiv.wDiv.tn[i].playVideoOverLay.setAttribute('id', 'carFlixVideoID');
                }
                this.tnDiv.wDiv.tn[i].appendChild(this.tnDiv.wDiv.tn[i].playVideoOverLay);

                this.tnDiv.wDiv.tn[i].playVideoIcon = document.createElement('div');
                this.tnDiv.wDiv.tn[i].playVideoIcon.className = "at_playVideoIcon";
                if (!adHasMarketplaceVideo) {
                    this.tnDiv.wDiv.tn[i].playVideoIcon.setAttribute('id', 'carFlixVideoID2');
                }
                this.tnDiv.wDiv.tn[i].appendChild(this.tnDiv.wDiv.tn[i].playVideoIcon);
            }
            if (colCount > this.maxCols) {
                this.tnDiv.wDiv.tn[i].style.clear = 'both';
                colCount = 1;
            }

            // Show thumbnails on details page, but only bullets on Gallery Modal
            if (thisObj.largeZoomIsVerticalScroll == true) {
                // Display thumbnails
                this.tnDiv.wDiv.appendChild(this.tnDiv.wDiv.tn[i]);
                this.tnDiv.wDiv.tn[i].theImage = document.createElement('img');
                this.tnDiv.wDiv.tn[i].theImage.setAttribute('alt', altTitle);
                this.tnDiv.wDiv.tn[i].theImage.src = "/looks/default/images/pixel.gif";
                this.tnDiv.wDiv.tn[i].num = i;

                // Show Video Player thumbnail layers
                $('.at_playVideoOverLay').css({'display': 'block' });
                $('.at_playVideoIcon').css({'display': 'block' });
            }
            else
            {
                // Display bullets instead of thumbnails
                this.tnDiv.wDiv.appendChild(this.tnDiv.wDiv.tn[i]);
                this.tnDiv.wDiv.tn[i].theImage = document.createElement('div');
                this.tnDiv.wDiv.tn[i].theImage.setAttribute('id', 'tnBullet');
                $(this.tnDiv.wDiv.tn[i].theImage).html('<svg height="20" width="20"><circle cx="10" cy="10" r="5" stroke="#a3a3a3" stroke-width="1" fill="#cccccc" /></svg>');
                this.tnDiv.wDiv.tn[i].num = i;

                // Hide Video Player thumbnail layers
                $('.at_playVideoOverLay').css({ 'display': 'none' });
                $('.at_playVideoIcon').css({ 'display': 'none' });
            }

            if (i == 1) {
                this.tnDiv.wDiv.tn[i].icon360div.num = i;
                this.tnDiv.wDiv.tn[i].icon360div.onclick = function () {
                    if (this.playActive) {
                        clearTimeout(slideAutoShange);
                        playActive = false;
                    }
                    thisObj.sCS(this.num);
                }
            }
            $(this.tnDiv.wDiv.tn[i]).off("click").on("click", function() {
                if (this.playActive) {
                    clearTimeout(slideAutoShange);
                    playActive = false;
                }
                if (thisObj.largeOption) {
                    thisObj.sCS(this.num);
                    thisObj.fSV();
                } else {
                    thisObj.sCS(this.num);
                    // LTWO-157 - COMSCORE tracking undefined when user disables tracking and browsing in private mode - catch error to prevent modal layout from getting mangled
                    try { comScoreTrack(); } catch (error) { }
                    wa_trackMultiPhotoView(window.location.href);
                    dl_trackMedia(thisObj);
                    refreshBannerAd();
                }
            });
            this.tnDiv.wDiv.tn[i].appendChild(this.tnDiv.wDiv.tn[i].theImage);
        }
    }

    setTimeout(function () { thisObj.scroller(); }, 10);
}

function scroller() {
    thisObj = this;
    if (this.isVerticalScroll) {
        if (this.tnDiv.scrollHeight > this.tnDiv.offsetHeight) {
            this.scrollbar = document.createElement('div');
            this.scrollbar.className = 'scrolley';
            this.appendChild(this.scrollbar);
            this.scrollbar.scrollHandle = document.createElement('div');
            this.scrollbar.scrollHandle.className = 'scrolleyHandle';
            this.scrollbar.appendChild(this.scrollbar.scrollHandle);

            this.largewindowOverScroll = this.tnDiv.offsetHeight / this.tnDiv.scrollHeight;
            this.scrollbarWidth = Math.round(this.scrollbar.offsetHeight * this.largewindowOverScroll);
            this.scrollbar.scrollHandle.style.height = this.scrollbarWidth + "px";

            $(this.scrollbar).mousedown(function (e) {
                thisObj.offset = $(thisObj.scrollbar).offset();
                thisObj.offsetofhandle = $(thisObj.scrollbar.scrollHandle).offset();

                //figures out if the user is clicking on the bar or on the handle
                if (pageYpos - thisObj.offsetofhandle.top > thisObj.scrollbar.scrollHandle.offsetHeight || pageYpos - thisObj.offsetofhandle.top < 0) {
                    thisObj.myoffset = thisObj.offset.top;
                } else {
                    thisObj.myoffset = thisObj.offset.top + pageYpos - thisObj.offsetofhandle.top;
                }
                thisObj.scrollbarMouseYPos = pageYpos - thisObj.myoffset;
                clearInterval(timeout);
                if (thisObj.isVerticalScroll) {
                    timeout = setInterval(function () {
                        thisObj.scrollbarMouseYPos = pageYpos - thisObj.myoffset;

                        if (thisObj.scrollbarMouseYPos > 0) {
                            if (thisObj.scrollbar.clientHeight - thisObj.scrollbar.scrollHandle.clientHeight >= thisObj.scrollbarMouseYPos) {
                                thisObj.tnDiv.scrollTop = thisObj.tnDiv.scrollHeight * (thisObj.scrollbarMouseYPos / thisObj.scrollbar.offsetHeight);
                                thisObj.scrollbar.scrollHandle.style.top = thisObj.scrollbarMouseYPos + "px";
                            } else {
                                thisObj.tnDiv.scrollTop = thisObj.tnDiv.scrollHeight - thisObj.tnDiv.offsetHeight;
                                thisObj.scrollbar.scrollHandle.style.top = thisObj.scrollbar.offsetHeight - thisObj.scrollbar.scrollHandle.offsetHeight + "px";
                            }
                        } else {
                            thisObj.tnDiv.scrollTop = 0;
                            thisObj.scrollbar.scrollHandle.style.top = 0 + "px";
                        }
                        thisObj.tnITL();
                    }, 100);
                }
            })

            // Add UP arrow to scroller
            this.lSBtn = document.createElement('div');
            this.lSBtn.className = 'leftScrollDiv leftScrollDiv_disabled';
            this.lSBtn.setAttribute('id', 'divLeftScroll');
            $(this.lSBtn).html('<div href="#" id="mTS_1_buttonUp" class="mTSButton mTSButtonUp"><span class="mTSButtonIconContainer"><svg version="1.1" viewBox="0 0 24 24" preserveAspectRatio="xMinYMin meet" class="mTSButtonIcon"><path d="M20.902 17.279c0.325 0.322 0.851 0.322 1.175 0 0.325-0.322 0.325-0.841 0-1.163l-9.49-9.396c-0.324-0.322-0.85-0.322-1.174 0l-9.49 9.396c-0.324 0.322-0.325 0.841 0 1.163s0.85 0.322 1.175 0l8.902-8.569 8.902 8.569z"></path></svg></span></div>');

            this.lSBtn.onmouseout = function () {
                if (this.parentNode.tnDiv.scrollTop <= 0)
                { this.className = "leftScrollDiv leftScrollDiv_disabled" } else { this.className = "leftScrollDiv" }
            };

            this.lSBtn.onmouseover = function () {
                if (this.parentNode.tnDiv.scrollTop <= 0)
                { this.className = "leftScrollDiv leftScrollDiv_disabled" } else { this.className = "leftScrollDiv leftScrollDiv_over" }
            };
            this.lSBtn.onmousedown = function () {
                if (this.parentNode.tnDiv.scrollTop - this.parentNode.gTH() <= 0)
                { this.className = "leftScrollDiv leftScrollDiv_disabled" } else { this.className = "leftScrollDiv leftScrollDiv_down" }
                if (this.parentNode.tnDiv.scrollTop + this.parentNode.tnDiv.offsetHeight - this.parentNode.gTH() >= this.parentNode.tnDiv.scrollHeight)
                { this.parentNode.rSBtn.className = "rightScrollDiv rightScrollDiv_disabled" } else { this.parentNode.rSBtn.className = "rightScrollDiv" }
                this.parentNode.sN();
            };
            this.lSBtn.onmouseup = function () {
                if (this.parentNode.tnDiv.scrollTop - this.parentNode.gTH() <= 0)
                { this.className = "leftScrollDiv leftScrollDiv_disabled" } else { this.className = "leftScrollDiv" }
                this.focus();
            };
            this.appendChild(this.lSBtn);

            // Add DOWN arrow to scroller
            this.rSBtn = document.createElement('div');
            this.rSBtn.className = 'rightScrollDiv';
            this.rSBtn.setAttribute('id', 'divRightScroll');
            $(this.rSBtn).html('<div id="mTS_1_buttonDown" class="mTSButton mTSButtonDown"><span class="mTSButtonIconContainer"><svg version="1.1" viewBox="0 0 24 24" preserveAspectRatio="xMinYMin meet" class="mTSButtonIcon"><path d="M3.098 6.721c-0.325-0.322-0.851-0.322-1.175 0-0.324 0.32-0.324 0.841 0 1.163l9.49 9.396c0.325 0.322 0.85 0.322 1.175 0l9.49-9.396c0.324-0.322 0.325-0.841 0-1.163s-0.852-0.322-1.175-0.001l-8.903 8.569-8.902-8.568z"></path></svg></span></div>');

            this.rSBtn.onmouseout = function () {
                if (this.parentNode.tnDiv.scrollTop + this.parentNode.tnDiv.offsetHeight >= this.parentNode.tnDiv.scrollHeight)
                { this.className = "rightScrollDiv rightScrollDiv_disabled" } else { this.className = "rightScrollDiv" }
            };

            this.rSBtn.onmouseover = function () {
                if (this.parentNode.tnDiv.scrollTop + this.parentNode.tnDiv.offsetHeight >= this.parentNode.tnDiv.scrollHeight)
                { this.className = "rightScrollDiv rightScrollDiv_disabled" } else { this.className = "rightScrollDiv rightScrollDiv_over" }
            };
            this.rSBtn.onmousedown = function () {
                if (this.parentNode.tnDiv.scrollTop + this.parentNode.tnDiv.offsetHeight + this.parentNode.gTH() >= this.parentNode.tnDiv.scrollHeight)
                { this.className = "rightScrollDiv rightScrollDiv_disabled" } else { this.className = "rightScrollDiv rightScrollDiv_down" }
                if (this.parentNode.tnDiv.scrollTop + this.parentNode.gTH() <= 0)
                { this.parentNode.lSBtn.className = "leftScrollDiv leftScrollDiv_disabled" } else { this.parentNode.lSBtn.className = "leftScrollDiv" }
                this.parentNode.sP();
            };
            this.rSBtn.onmouseup = function () {
                if (this.parentNode.tnDiv.scrollTop + this.parentNode.tnDiv.offsetHeight + this.parentNode.gTH() >= this.parentNode.tnDiv.scrollHeight)
                { this.className = "rightScrollDiv rightScrollDiv_disabled" } else { this.className = "rightScrollDiv" }
                this.focus();
            };

            this.appendChild(this.rSBtn);
        }
    } else {
        // for horizontal scroll
        if (this.tnDiv.scrollWidth > this.tnDiv.offsetLeft) {
            this.scrollbar = document.createElement('div');
            this.scrollbar.className = 'scrolley';
            this.appendChild(this.scrollbar);
            this.scrollbar.scrollHandle = document.createElement('div');
            this.scrollbar.scrollHandle.className = 'scrolleyHandle';
            this.scrollbar.appendChild(this.scrollbar.scrollHandle);
            this.largewindowOverScroll = this.tnDiv.offsetWidth / this.tnDiv.scrollWidth;
            this.scrollbarWidth = Math.round(this.scrollbar.offsetWidth * this.largewindowOverScroll);
            this.scrollbar.scrollHandle.style.width = this.scrollbarWidth + "px";


            $(this.scrollbar)
                .mousedown(function(e) {
                    thisObj.offset = $(thisObj.scrollbar).offset();
                    thisObj.offsetofhandle = $(thisObj.scrollbar.scrollHandle).offset();

                    //figures out if the user is clicking on the bar or on the handle
                    if (pageXpos - thisObj.offsetofhandle.left > thisObj.scrollbar.scrollHandle.offsetLeft ||
                        pageXpos - thisObj.offsetofhandle.left < 0) {
                        thisObj.myoffset = thisObj.offset.left;
                    } else {
                        thisObj.myoffset = thisObj.offset.left + pageXpos - thisObj.offsetofhandle.left;
                    }
                    thisObj.scrollbarMouseYPos = pageXpos - thisObj.myoffset;
                    clearInterval(timeout);
                    timeout = setInterval(function() {
                            thisObj.scrollbarMouseXPos = pageXpos - thisObj.myoffset;
                            if (thisObj.scrollbarMouseXPos > 0) {
                                if (thisObj.scrollbar.clientWidth - thisObj.scrollbar.scrollHandle.clientWidth >=
                                    thisObj.scrollbarMouseXPos) {
                                    thisObj.tnDiv.scrollLeft = thisObj.tnDiv.scrollWidth *
                                    (thisObj.scrollbarMouseXPos / thisObj.scrollbar.offsetWidth);
                                    thisObj.scrollbar.scrollHandle.style.left = thisObj.scrollbarMouseXPos + "px";
                                } else {
                                    thisObj.tnDiv.scrollLeft = thisObj.tnDiv.scrollWidth - thisObj.tnDiv.offsetWidth;
                                    thisObj.scrollbar.scrollHandle.style
                                        .left = thisObj.scrollbar.offsetWidth -
                                        thisObj.scrollbar.scrollHandle.offsetWidth +
                                        "px";
                                }

                            } else {
                                thisObj.tnDiv.scrollLeft = 0;
                                thisObj.scrollbar.scrollHandle.style.left = "0px";
                            }
                            thisObj.tnITL();
                        },
                        100);
                });


            this.rSBtn = document.createElement('div');
            this.rSBtn.className = 'rightScrollDiv';
            this.rSBtn.setAttribute('id', 'divRightScroll');
            this.rSBtn.onmouseout = function () {
                if (this.parentNode.tnDiv.scrollLeft + this.parentNode.tnDiv.offsetWidth >= this.parentNode.tnDiv.scrollWidth)
                { this.className = "rightScrollDiv rightScrollDiv_disabled" } else { this.className = "rightScrollDiv" }
            };

            this.rSBtn.onmouseover = function () {
                if (this.parentNode.tnDiv.scrollLeft + this.parentNode.tnDiv.offsetWidth >= this.parentNode.tnDiv.scrollWidth)
                { this.className = "rightScrollDiv rightScrollDiv_disabled" } else { this.className = "rightScrollDiv rightScrollDiv_over" }
            };
            this.rSBtn.onmousedown = function () {
                if (this.parentNode.tnDiv.scrollLeft + this.parentNode.tnDiv.offsetWidth + this.parentNode.gTW() >= this.parentNode.tnDiv.scrollWidth)
                { this.className = "rightScrollDiv rightScrollDiv_disabled" } else { this.className = "rightScrollDiv rightScrollDiv_down" }
                if (this.parentNode.tnDiv.scrollLeft + this.parentNode.gTW() <= 0)
                { this.parentNode.lSBtn.className = "leftScrollDiv leftScrollDiv_disabled" } else { this.parentNode.lSBtn.className = "leftScrollDiv" }
                this.parentNode.sP();
            };
            this.rSBtn.onmouseup = function () {
                if (this.parentNode.tnDiv.scrollLeft + this.parentNode.tnDiv.offsetWidth + this.parentNode.gTW() >= this.parentNode.tnDiv.scrollWidth)
                { this.className = "rightScrollDiv rightScrollDiv_disabled" } else { this.className = "rightScrollDiv" }
                this.focus();
            };

            this.appendChild(this.rSBtn);

            this.lSBtn = document.createElement('div');
            this.lSBtn.className = 'leftScrollDiv leftScrollDiv_disabled';
            this.lSBtn.setAttribute('id', 'divLeftScroll');

            this.lSBtn.onmouseout = function () {
                if (this.parentNode.tnDiv.scrollLeft <= 0)
                { this.className = "leftScrollDiv leftScrollDiv_disabled" } else { this.className = "leftScrollDiv" }
            };

            this.lSBtn.onmouseover = function () {
                if (this.parentNode.tnDiv.scrollLeft <= 0)
                { this.className = "leftScrollDiv leftScrollDiv_disabled" } else { this.className = "leftScrollDiv leftScrollDiv_over" }
            };
            this.lSBtn.onmousedown = function () {
                if (this.parentNode.tnDiv.scrollLeft - this.parentNode.gTW() <= 0)
                { this.className = "leftScrollDiv leftScrollDiv_disabled" } else { this.className = "leftScrollDiv leftScrollDiv_down" }
                if (this.parentNode.tnDiv.scrollLeft + this.parentNode.tnDiv.offsetWidth - this.parentNode.gTW() >= this.parentNode.tnDiv.scrollWidth)
                { this.parentNode.rSBtn.className = "rightScrollDiv rightScrollDiv_disabled" } else { this.parentNode.rSBtn.className = "rightScrollDiv" }
                this.parentNode.sN();
            };
            this.lSBtn.onmouseup = function () {
                if (this.parentNode.tnDiv.scrollLeft - this.parentNode.gTW() <= 0)
                { this.className = "leftScrollDiv leftScrollDiv_disabled" } else { this.className = "leftScrollDiv" }
                this.focus();
            };
            this.appendChild(this.lSBtn);

        }

    }
}

function cont360Buttons() {
    var thisObj = this;

    this.mIDiv.b360Div = document.createElement('div');
    this.mIDiv.b360Div.className = 'b360Div';
    this.mIDiv.appendChild(this.mIDiv.b360Div);

    this.mIDiv.b360Div.rw360Div = document.createElement('div');
    this.mIDiv.b360Div.rw360Div.className = 'rw360Div';
    this.mIDiv.b360Div.rw360Div.onmouseout = function () { this.className = "rw360Div" };
    this.mIDiv.b360Div.rw360Div.onmouseover = function () { this.className = "rw360Div rw360Div_over" };
    this.mIDiv.b360Div.rw360Div.onmousedown = function () { this.className = "rw360Div rw360Div_down" };
    this.mIDiv.b360Div.rw360Div.onmouseup = function () { this.className = "rw360Div rw360Div_over" };
    this.mIDiv.b360Div.rw360Div.onclick = function () {
        if (thisObj.playActive) {
            thisObj.playActive = false;
            thisObj.mIDiv.b360Div.pl360Div.className = "pl360Div"
        }
        if (thisObj.gCS() == 1) {
            thisObj.sCS(8);
        }
        else {
            thisObj.sCS(thisObj.gCS() - 1);
        }
    }
    this.mIDiv.b360Div.appendChild(this.mIDiv.b360Div.rw360Div);

    this.mIDiv.b360Div.p360Div = document.createElement('div');
    this.mIDiv.b360Div.p360Div.className = 'p360Div';
    this.mIDiv.b360Div.p360Div.onmouseout = function () { this.className = "p360Div" };
    this.mIDiv.b360Div.p360Div.onmouseover = function () { this.className = "p360Div p360Div_over" };
    this.mIDiv.b360Div.p360Div.onmousedown = function () { this.className = "p360Div p360Div_down" };
    this.mIDiv.b360Div.p360Div.onmouseup = function () { this.className = "p360Div p360Div_over" };
    this.mIDiv.b360Div.p360Div.onclick = function () {
        if (thisObj.playActive) {
            thisObj.playActive = false;
            thisObj.mIDiv.b360Div.pl360Div.className = "pl360Div"
        }
    }
    this.mIDiv.b360Div.appendChild(this.mIDiv.b360Div.p360Div);

    this.mIDiv.b360Div.pl360Div = document.createElement('div');
    this.mIDiv.b360Div.pl360Div.className = 'pl360Div';
    this.mIDiv.b360Div.pl360Div.onmouseout = function () { if (!thisObj.playActive) { this.className = "pl360Div" } };
    this.mIDiv.b360Div.pl360Div.onmouseover = function () { this.className = "pl360Div pl360Div_over" };
    this.mIDiv.b360Div.pl360Div.onmousedown = function () { this.className = "pl360Div pl360Div_down" };
    this.mIDiv.b360Div.pl360Div.onmouseup = function () { this.className = "pl360Div pl360Div_over" };
    this.mIDiv.b360Div.pl360Div.onclick = function () {
        if (!thisObj.playActive) {
            thisObj.currentImageLoaded = true;
            thisObj.playActive = true;
            thisObj.aS();
        }
    }
    this.mIDiv.b360Div.appendChild(this.mIDiv.b360Div.pl360Div);

    this.mIDiv.b360Div.f360Div = document.createElement('div');
    this.mIDiv.b360Div.f360Div.className = 'f360Div';
    this.mIDiv.b360Div.f360Div.onmouseout = function () { this.className = "f360Div" };
    this.mIDiv.b360Div.f360Div.onmouseover = function () { this.className = "f360Div f360Div_over" };
    this.mIDiv.b360Div.f360Div.onmousedown = function () { this.className = "f360Div f360Div_down" };
    this.mIDiv.b360Div.f360Div.onmouseup = function () { this.className = "f360Div f360Div_over" };
    this.mIDiv.b360Div.f360Div.onclick = function () {
        if (thisObj.playActive) {
            thisObj.playActive = false;
            thisObj.mIDiv.b360Div.pl360Div.className = "pl360Div"
        }
        if (thisObj.gCS() == 8) {
            thisObj.sCS(1);
        }
        else {
            thisObj.sCS(thisObj.gCS() + 1);
        }
    }
    this.mIDiv.b360Div.appendChild(this.mIDiv.b360Div.f360Div);
    this.mIDiv.b360Div.style.display = 'none';
}

function autoSlide() {

    if (this.gCS() == 8) {

        var thisObj = this;
        thisObj.mIDiv.b360Div.pl360Div.className = "pl360Div pl360Div_over"
        var e = this.gCS();
        setTimeout(function () { thisObj.aSC(1); }, 3000);

    } else {
        var thisObj = this;
        thisObj.mIDiv.b360Div.pl360Div.className = "pl360Div pl360Div_over"
        var e = this.gCS() + 1;
        setTimeout(function () { thisObj.aSC(e); }, 3000);
    }
    
}

function autoSlideChange(val) {
    if (this.playActive) {
        //if (this.currentImageLoaded) {
            this.sCS(val);
        //}
        this.aS();
    }
}

function tnImgTestLoad() {
    if (!this.isVerticalScroll) {
        for (k = 0; k < this.imageArray.length; k++) {
            if ((k == 1 && this.imageArray[k].imagePath != null) || (k > 8)) {
                if (this.tnDiv.wDiv.tn[k].theImage.src != undefined) {
                    if (this.tnDiv.wDiv.tn[k].offsetLeft - this.tnDiv.wDiv.tn[k].offsetWidth * 4 < this.tnDiv.offsetWidth + this.tnDiv.scrollLeft) {
                        this.tnDiv.wDiv.tn[k].theImage.src = this.imageArray[k].imagePath + '?w=' + this.thumbWidth + "&h=" + this.thumbHeight;
                    }
                }
            }
        }
    }
    else {
        for (k = 0; k < this.imageArray.length; k++) {
            if ((k == 1 && this.imageArray[k].imagePath != null) || (k > 8)) {
                if (this.tnDiv.wDiv.tn[k].theImage.src != undefined) {
                    if (this.tnDiv.wDiv.tn[k].offsetTop < this.tnDiv.scrollTop + this.tnDiv.offsetHeight) {
                        this.tnDiv.wDiv.tn[k].theImage.src = this.imageArray[k].imagePath + '?w=' + this.thumbWidth + "&h=" + this.thumbHeight;
                    }
                }
            }

        }
        scrollPercent = 100 - (this.tnDiv.scrollTop / (this.tnDiv.scrollHeight - this.tnDiv.offsetHeight) * 100);
    }

}

function scrollPos() {
    thisObj = this;   

    // Remove padding from last thumbnail, to ensure proper positioning
    $('#slideFullScreen .tn:last-child').css('padding', '0px');

    if (this.isVerticalScroll) {
            if (this.tnDiv.scrollTop + this.gTH() < this.tnDiv.scrollHeight - this.tnDiv.clientHeight) {
                    $(this.tnDiv).animate({ "scrollTop": "+=" + this.gTH() + "px", duration: 300, step: thisObj.sSH() });

                // Show both navigation arrows
                $('#slideFullScreen .mTSButton.mTSButtonUp').css({ 'display': 'block' });
                $('#slideFullScreen .mTSButton.mTSButtonDown').css({ 'display': 'block' });
            } else {
                // Hide Down arrow when last thumbnail is in view
                $('#slideFullScreen .mTSButton.mTSButtonDown').css({ 'display': 'none' });  

                $(this.tnDiv).animate({ "scrollTop": "+=" + (this.tnDiv.scrollHeight - this.tnDiv.clientHeight - this.tnDiv.scrollTop) + "px", duration: 300, step: thisObj.sSH() });         
            }
            setTimeout(function () { thisObj.tnITL(); }, 330);

        } else {
            $(this.tnDiv).animate({ "scrollLeft": "+=" + this.gTW() + "px", duration: 300, step: thisObj.sSH() });
            setTimeout(function () { thisObj.tnITL(); }, 330);
        }
}

function scrollNeg() {
    thisObj = this;
    if (this.isVerticalScroll) {
        if (this.tnDiv.scrollTop - this.gTH() > 0) {
            $(this.tnDiv).animate({ "scrollTop": "+=-" + this.gTH() + "px", duration: 300, step: thisObj.sSH() });
            // Show both navigation arrows
            $('#slideFullScreen .mTSButton.mTSButtonUp').css({ 'display': 'block' });
            $('#slideFullScreen .mTSButton.mTSButtonDown').css({ 'display': 'block' });
        } else {
            // Hide Up arrow when last thumbnail is in view 
            $('#slideFullScreen .mTSButton.mTSButtonUp').css({'display': 'none'});
            $('#slideFullScreen .mTSButton.mTSButtonDown').css({ 'display': 'block' });

            $(this.tnDiv).animate({ "scrollTop": "+=-" + this.tnDiv.scrollTop + "px", duration: 300, step: thisObj.sSH() });
        }
        setTimeout(function () { thisObj.tnITL() }, 330);
    } else {
            $(this.tnDiv).animate({ "scrollLeft": "+=-" + this.gTW() + "px", duration: 300, step: thisObj.sSH() });
            setTimeout(function () { thisObj.tnITL(); }, 330);
    }
}

function setScrollHandle() {
    thisObj = this;
    if (typeof thisObj.scrollbar != "undefined") {
        if (this.isVerticalScroll) {
            setTimeout(function () {
                thisObj.scrollbar.scrollHandle.style.top = thisObj.tnDiv.scrollTop / thisObj.tnDiv.scrollHeight * thisObj.scrollbar.clientHeight + "px";
            }, 400);
        } else {
            setTimeout(function () {
                thisObj.scrollbar.scrollHandle.style.left = thisObj.tnDiv.scrollLeft / thisObj.tnDiv.scrollWidth * thisObj.scrollbar.clientWidth + "px";
            }, 400);
        }
    }
}

function photoXMLToArray() {
    var myXMLStr = this.theXML;
    myXMLStr = myXMLStr.replace('<?xml version="1.0" standalone="no"?><gallery>', '</img>');
    myXMLStr = myXMLStr.replace('</img></gallery>', '');
    tempArray = myXMLStr.split('</img><img>');
    ma = false;
    var imageArray = new Array();
    for (i = 0; i < tempArray.length; i++) {
        if (tempArray[i] != "") {
            imageArray[imageArray.length] = { "itemType": "image", "imagePath": tempArray[i] };
        }
    }
    var imageCount = imageArray.length;
    this.imageArray = imageArray;
    for (i = 0; i < 9; i++) {
        this.imageArray.splice(0, 0, { "itemType": "SpinImage", "imagePath": null });
    }
    if (typeof adHasVideo == "boolean") {
        if (adHasVideo == true) {
            try {
                if (imageCount == 1 && typeof adHasMarketplaceVideo == "boolean" && adHasMarketplaceVideo == true)
                    if (typeof adHasNoPhoto == "boolean" && adHasNoPhoto == true) 
                        this.imageArray[9] = { "itemType": "video", "imagePath": this.imageArray[9].imagePath, "videoPath": "notyet" };
                    else
                        this.imageArray.splice(10, 0, { "itemType": "video", "imagePath": this.imageArray[9].imagePath, "videoPath": "notyet" });
                else if (this.dealerEvent && imageCount == 2) {
                    this.imageArray.splice(10, 0, { "itemType": "video", "imagePath": this.imageArray[9].imagePath, "videoPath": "notyet" });
                }
                else
                    this.imageArray.splice(11, 0, { "itemType": "video", "imagePath": this.imageArray[10].imagePath, "videoPath": "notyet" });
                
            }
            catch (err) {
                // Ignore the error beause the imagePath may not exist!
            }
        }
    }
    this.imageLoadedArray = new Array(this.imageArray.length);
}

function changeSlide() {
    var thisObj = this;
    var source;
    
    this.newImage = null;
    this.newImage = new Image();
    this.currentImageLoaded = false;
    if (typeof this.imageLoadedArray[this.currentSlide] == "undefined") {
        this.mIDiv.loadingIcon.style.display = "block";
    }

    if (typeof (this.currentSlide) !== "undefined") {
        if (this.imageArray[this.currentSlide].itemType == "video" && this.largeOption == false) {
            this.newImage.src = "/Looks/default/images/pixel.gif";
            if (document.getElementById("divVideoPlayer")) { }
            else { $(this.mIDiv.fgIDiv).before('<div id="divVideoPlayer"></div>'); }
            document.getElementById("divVideoPlayer").style.display = "block";

            if (videoMp4Url != null && videoMp4Url != "" || videoSmoothUrl != null && videoSmoothUrl != "") {
                addCustomVideo();
            }
            else {
                CFHV.setConfig({
                    width: modalSize.imgWidth,
                    height: modalSize.imgHeight,
                    autoPlay: true,
                    locale: LocationForVideo,   // 'en_CA' or 'fr_CA'
                    distanceUOM: 'km' // or 'miles'
                });
                //                                <= PPGID >
                CFHV.showPlayer('divVideoPlayer', adPPGID, adVideoPrice, adVideoKm);
                CFHV.play('divVideoPlayer');
            }

            // Size video to match current modal size, after video player loads
            setTimeout(function () {
                if (isPV == 'true') {
                    $('#slideFullScreen .jwplayer').css({ width: $('#slideFullScreen .ImageDiv').width(), height: $('#slideFullScreen .ImageDiv').height() });
                }
                else {
                    $('#slideFullScreen .pf-container').css({ width: $('#slideFullScreen .ImageDiv').width(), height: $('#slideFullScreen .ImageDiv').height() });
                }
            }, 1500);

            this.mIDiv.loadingIcon.style.display = "none";
        }
        else {

            if (document.getElementById("divVideoPlayer")) {
                document.getElementById("divVideoPlayer").style.display = "none";
                $('#divVideoPlayer').empty();
            }
            this.newImage.src = this.imageArray[this.currentSlide].imagePath + '?w=' + this.fullWidth + "&h=" + this.fullHeight;
        }
    }

    // Size video to match current modal size, after video player loads
    setTimeout(function () {
        if (isPV == 'true') {
            $('#slideFullScreen .jwplayer').css({ width: $('#slideFullScreen .ImageDiv').width(), height: $('#slideFullScreen .ImageDiv').height() });
        }
        else {
            $('#slideFullScreen .pf-container').css({ width: $('#slideFullScreen .ImageDiv').width(), height: $('#slideFullScreen .ImageDiv').height() });
        }
    }, 1500);

    thisObj.wF();
}

function addCustomVideo() {
    var thisObj = this;
    var randomizedVideoUrl = videoMp4Url + "&z=" + Math.floor((Math.random() * 100000) + 1);
    if ($(".pf-video").size() == 0 && $(".pf-silverlight").size() == 0) {

        var videoElement = addVideoElement(document.getElementById("divVideoPlayer"));
        addVideoSource(videoElement, randomizedVideoUrl);
        var objectElement = addVideoObject(videoElement);
        videoElement.appendChild(objectElement);

        addVideoParam(objectElement, "source", "/xap/SmoothStreamingPlayer.xap");
        addVideoParam(objectElement, "onError", "onSilverlightError");
        addVideoParam(objectElement, "onLoad", "onSilverlightLoad");
        addVideoParam(objectElement, "minRuntimeVersion", "4.0.50401.0");
        addVideoParam(objectElement, "autoUpgrade", "false");
        addVideoParam(objectElement, "enableGPUAcceleration", "true");
        addVideoParam(objectElement, "windowless", "true");
        addVideoParam(objectElement, "InitParams", "scriptablename=Player,autoplay=true,mediaurl=" + videoSmoothUrl);

        var playerElements = PlayerFramework.getElementsByClass("pf-video").concat(PlayerFramework.getElementsByClass("pf-silverlight"));
        PlayerFramework.forEach(playerElements, function (element) {
            if (element.id) {
                thisObj.player = new PlayerFramework.Player(element);
                thisObj.player.play();
                trackProgress(thisObj.player);

                element.onclick = function() {
                    if (thisObj.player.paused()) {
                        thisObj.player.play();
                    } else {
                        thisObj.player.pause();
                    }
                    return false;
                };

                thisObj.player.addEventListener("fullscreenchange", function () {
                    if ($(".pf-container").hasClass("pf-full-browser")) {
                        $("#slideFullScreen .ImageDiv").css("width", "auto").css("height", "auto");
                        $(".ie9 #slideFullScreen .ImageDiv").css("overflow", "visible");
                    } else {
                        $("#slideFullScreen .ImageDiv").css("width", modalSize.imgWidth).css("height", modalSize.imgHeight);
                        $(".ie9 #slideFullScreen .ImageDiv").css("overflow", "hidden");
                    }
                });
            }
        });
    }
}

function trackProgress(player) {

    player.percentReached = { 0: false, 5: false, 10: false, 25: false, 50: false, 75: false };
    player.addEventListener("timeupdate", function () {
        var duration = player.duration();
        if (duration > 0) {
            var curTime = player.currentTime();
            var percentReached = player.percentReached;
            for (var percent in percentReached) {
                if (curTime > (duration * percent / 100) && !percentReached[percent]) {
                    var action = (percent == 0 ? "Loaded" : (percent + "%"));
                    wa_trackMarketplaceVideoEvent(action, videoEventLabel);
                    percentReached[percent] = true;
                }
            }
        }
    });
    player.addEventListener("ended", function () {
        wa_trackMarketplaceVideoEvent("100%", videoEventLabel);
    });
}

function addVideoElement(parent) {
    var videoElement = document.createElement('video');
    videoElement.id = "customVideo";
    videoElement.className = 'pf-video';
    videoElement.width = modalSize.imgWidth;
    videoElement.height = modalSize.imgHeight;
    videoElement.controls = "controls";
    parent.appendChild(videoElement);
    return videoElement;

}

function addVideoSource(parent, videoSourceUrl) {
    var sourceElement = document.createElement('source');
    sourceElement.src = videoSourceUrl;
    sourceElement.type = 'video/mp4; codecs="avc1.42E01E, mp4a.40.2"';
    parent.appendChild(sourceElement);
    return sourceElement;
}

function addVideoObject(parent) {
    var objectElement = document.createElement('object');
    objectElement.className = "pf-silverlight";
    objectElement.data = "data:application/x-silverlight-2,";
    objectElement.type = "application/x-silverlight-2";
    objectElement.width = modalSize.imgWidth;
    objectElement.height = modalSize.imgHeight;
    parent.appendChild(objectElement);
    return objectElement;
}

function addVideoParam(parent, name, value) {
    var paramElement = document.createElement("param");
    paramElement.name = name;
    paramElement.value = value;
    parent.appendChild(paramElement);
    return paramElement;
}

function waitFor() {
    var thisObj = this;
    var idToChange = thisObj.idPrefix + "forgroundImage";

    var miDiv;

    if (isPV == 'true') {
        miDiv = thisObj.mIDiv.fgIDiv.stDiv.mI;
    }
    else {
        miDiv = thisObj.mIDiv.fgIDiv.mI;
    }
    miDiv.src = thisObj.newImage.src;

    if (thisObj.imageLoadedArray[thisObj.currentSlide] == true) {
        $(thisObj.mIDiv.fgIDiv).fadeIn("fast");
        thisObj.mIDiv.loadingIcon.style.display = "none";
    } else {
        $(miDiv).load(function () {
            $(thisObj.mIDiv.fgIDiv).fadeIn("fast");
            thisObj.mIDiv.loadingIcon.style.display = "none";
            thisObj.imageLoadedArray[thisObj.currentSlide] = true;
        });
    }
}

function closeFullViever() {
    this.fsBg.style.display = "none";
    $('.closeFullScreen').css({ 'display': 'none' });  // Hide close button when modal closes
    this.slideFullScreen.style.display = "none";
    this.slideFullScreen.playActive = false;
    clearInterval(timeout);
    this.sSH();
    $('#divVideoPlayer').empty();

    // Show Video Player thumbnail layers on details page
    $('.at_playVideoOverLay').css({'display': 'block' });
    $('.at_playVideoIcon').css({'display': 'block' });

    // Update banner iframe to remove banner ads when VDP Gallery modal opens
    SetIframe('bnrIframeLeaderboard', '');

    SetIframe('bnrIframeBB', '');

    if (refreshBannerTimer != null)
        clearTimeout(refreshBannerTimer);

    if (isIPadBrowser)
    {
        // Re-enable page scrolling on modal close
        $('body.iPad').unbind('touchmove');
    }
    isGalleryShow = false;
}

function fullScreenViewer() {
    var thisObj = this;
    if (!this.slideFullScreen) {
        // Condition is met only the first time the modal is opened.  When modal has been opened already then closed, all re-opening attempts meet the else condition, because close button, etc do not need to be added to the DOM again
        thisObj.largeZoomIsVerticalScroll = false;

        if (isIPadBrowser)
        {
            // Disable background scrolling right before modal begins to open. This addresses iPad hardware acceleration overscrolling bug 
            $('body').bind('touchmove', function (e)
            {
                e.preventDefault();
                e.stopPropagation();
            });

            // Make change to banner ads container divs to make them display on iPad
            var iframe1 = $('#bnrIframeLeaderboard');
            iframe1.load(function () {
                $('body').height(iframe1.height());
            });

            var iframe2 = $('#bnrIframeBB');
            iframe2.load(function () {
                $('body').height(iframe2.height());
            });
        }

        setTimeout(function () { scroll(0, 0) }, 100);
        this.playActive = false;
        this.fsBg = document.createElement('div');
        this.fsBg.className = 'bgBlackOut';
        this.fsBg.onmousedown = function () {
            thisObj.cfv();
        }
        document.getElementById("boLayer").appendChild(this.fsBg);

        this.slideFullScreen = document.getElementById("slideFullScreen");

        this.closefullscreen = document.createElement('div');
        this.closefullscreen.className = 'closeFullScreen';
        this.closefullscreen.onmousedown = function () {
            thisObj.cfv();
        }

        // Add Close button 
        this.closefullscreen.onmouseout = function () { this.className = "closeFullScreen at_sprite"; };
        this.closefullscreen.onmouseover = function () { this.className = "closeFullScreen at_sprite closeFullScreen_over"; };
        this.closefullscreen.onmouseup = function () { this.className = "closeFullScreen at_sprite closeFullScreen_over" };
        $("#slideFullScreenWrapper").append(this.closefullscreen);
        $('.closeFullScreen').addClass('at_sprite');  

        if (this.gCS() >= 0 && this.gCS() <= 8) {
            gotoSlide = 1;
        } else {
            gotoSlide = this.gCS();
        }

        thisObj.slideFullScreen.fullScreenViewer = new createMultiPhotoViewer(thisObj.theXML, thisObj.thumbWidth, thisObj.thumbHeight, thisObj.largeZoomthumbMarginV, thisObj.largeZoomthumbMarginH, thisObj.largeZoomthumbBorderWidth, 1, thisObj.largeZoomWidth, thisObj.largeZoomHeight, false, thisObj.largeZoomIsVerticalScroll, thisObj.largeZoomidPrefix, gotoSlide, 0, 0, 0, this.leaderboardAdURL, this.bbAdURL, this.dealerEvent);
    }
    else
    {
        document.getElementById("boLayer").appendChild(this.fsBg);
        this.slideFullScreen.style.display = "block";
        this.slideFullScreen.fullScreenViewer.container.sCS(this.gCS());
    //this.sCS(this.gCS());

    }

    // Show close button when VDP Gallery modal opens
    $('.closeFullScreen').css({ 'display': 'block' });
    
    // Update banner iframe to show banner ads when VDP Gallery modal opens
    SetIframe('bnrIframeLeaderboard', this.leaderboardAdURL);
    SetIframe('bnrIframeBB', this.bbAdURL);

    // Center modal vertically and horizontally by setting bottom to 0 when not on iPad (bottom: 0; breaks iPad - caused modal not to appear)
    if (!isIPadBrowser) {
        $("#slideFullScreen").css({ 'bottom': '0' });
    }

    this.slideFullScreen.style.display = "block";
    this.fsBg.style.display = "block";

    // LTWO-157 - COMSCORE tracking undefined when user disables tracking and browses in private mode - catch error to prevent modal layout from getting mangled
    try { comScoreTrack(); } catch (error) { }

    wa_trackMultiPhotoView(window.location.href);
    dl_trackMedia(this);
    isGalleryShow = true;
    resizeImg(true);
}


// Scale slide image in VDP Gallery modal
function resizeImg(isFromGallery) {
    var currentViewport = $(window);
    var updatedModalSize;

    // Remove all classes from modal container to prepare for resizing & customization
    $("#slideFullScreen").removeClass();

    // Assign modal size based on viewport size
    if (currentViewport.width() < 991 &&  !isIPadBrowser) {
        updatedModalSize = smallModal;
    }
    else if ((currentViewport.height() < 609) || (currentViewport.width() >= 991 && currentViewport.width() < 1300) || (currentViewport.width() >= 1300 && currentViewport.height() < 768) || isIPadBrowser)
    {
        updatedModalSize = mediumModal;
    }

    else if (currentViewport.width() >= 1300 && currentViewport.height() >= 768)
    {
        updatedModalSize = largeModal;    // Large image - 800 x 600 image - Viewport >= 1300 x 768
    }

    // Update banner iframe src to remove or show big box banner & other elements, dependent on modal size
    if (updatedModalSize == smallModal)
    {
        // Remove big box banner
        if (isFromGallery) {
            SetIframe('bnrIframeBB', '');
            SetIframe('bnrIframeLeaderboard', '');
        }

        // Hide all elements except for photo, arrows, & navigation bullets
        $('.slideFullScreenHeader, .slideFullScreenBody').css({ 'display' : 'none'});
    }
    else
    {
        //Add big box banner, if it was not already displayed
        if (isGalleryShow && $('#bnrIframeLeaderboard').attr('src') == '' && $('#bnrIframeBB').attr('src') == '') {
            SetIframe('bnrIframeLeaderboard', this.leaderboardAdURL);
            SetIframe('bnrIframeBB', this.bbAdURL);
        }

        // Show all elements
        $('.slideFullScreenHeader, .slideFullScreenBody').css({ 'display' : 'block'});
    }

    // Add class to identify modal size for customization
    $('#slideFullScreen').addClass(updatedModalSize.cssClass);

    // Resize modal & photo
    $('#slideFullScreen, #slideFullScreenWrapper').css({ width: updatedModalSize.modalWidth, height: updatedModalSize.modalHeight });

    // Resize photo        
    $('#slideFullScreen .fgIDiv img, #slideFullScreen .ImageDiv').css({ width: updatedModalSize.imgWidth, height: updatedModalSize.imgHeight });

    // Resize video to match current modal size
    if (isPV == 'true') {
        $('#slideFullScreen .jwplayer').css({ width: updatedModalSize.imgWidth, height: updatedModalSize.imgHeight });
    }
    else {
        $('#slideFullScreen .pf-container').css({ width: updatedModalSize.imgWidth, height: updatedModalSize.imgHeight });
    }
}

function SetIframe(iFrameId, src) {
    var original = $('#' + iFrameId)[0];
    var newFrame = document.createElement("iframe");
    newFrame.src = src;
    newFrame.id = iFrameId;
    newFrame.height = original.height;
    newFrame.width = original.width;
    newFrame.scrolling = 'no';
    newFrame.style.border = "0";

    var parent = original.parentNode;
    parent.replaceChild(newFrame, original);
}

function dl_trackMedia(obj) {
    if (typeof (obj.currentSlide) !== "undefined") {
        if (obj.imageArray[obj.currentSlide].itemType == "video")
            dl_trackViewMediaVideo();
        else
            dl_trackViewMediaPhoto();
    }
}

function refreshBannerAd() {
    if (!enableBannerRefresh)
        return;

    console.log("refreshing banner ad");
    if (refreshBannerTimer != null)
        clearTimeout(refreshBannerTimer);
    refreshBannerTimer = setTimeout(refreshBannerIFrame, 3000);
}


function refreshBannerIFrame() {
    console.log("refreshing banner iframe");
    var iframe = document.getElementById('bnrIframeBB');
    iframe.src = iframe.src;
    iframe = document.getElementById('bnrIframeLeaderboard');
    iframe.src = iframe.src;
}

/**
* jQuery.ScrollTo - Easy element scrolling using jQuery.
* Copyright (c) 2007-2009 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com
* Dual licensed under MIT and GPL.
* Date: 5/25/2009
* @author Ariel Flesler
* @version 1.4.2
*
* http://flesler.blogspot.com/2007/10/jqueryscrollto.html
*/
    ; (function (d) { var k = d.scrollTo = function (a, i, e) { d(window).scrollTo(a, i, e) }; k.defaults = { axis: 'xy', duration: parseFloat(d.fn.jquery) >= 1.3 ? 0 : 1 }; k.window = function (a) { return d(window)._scrollable() }; d.fn._scrollable = function () { return this.map(function () { var a = this, i = !a.nodeName || d.inArray(a.nodeName.toLowerCase(), ['iframe', '#document', 'html', 'body']) != -1; if (!i) return a; var e = (a.contentWindow || a).document || a.ownerDocument || a; return d.browser.safari || e.compatMode == 'BackCompat' ? e.body : e.documentElement }) }; d.fn.scrollTo = function (n, j, b) { if (typeof j == 'object') { b = j; j = 0 } if (typeof b == 'function') b = { onAfter: b }; if (n == 'max') n = 9e9; b = d.extend({}, k.defaults, b); j = j || b.speed || b.duration; b.queue = b.queue && b.axis.length > 1; if (b.queue) j /= 2; b.offset = p(b.offset); b.over = p(b.over); return this._scrollable().each(function () { var q = this, r = d(q), f = n, s, g = {}, u = r.is('html,body'); switch (typeof f) { case 'number': case 'string': if (/^([+-]=)?\d+(\.\d+)?(px|%)?$/.test(f)) { f = p(f); break } f = d(f, this); case 'object': if (f.is || f.style) s = (f = d(f)).offset() } d.each(b.axis.split(''), function (a, i) { var e = i == 'x' ? 'Left' : 'Top', h = e.toLowerCase(), c = 'scroll' + e, l = q[c], m = k.max(q, i); if (s) { g[c] = s[h] + (u ? 0 : l - r.offset()[h]); if (b.margin) { g[c] -= parseInt(f.css('margin' + e)) || 0; g[c] -= parseInt(f.css('border' + e + 'Width')) || 0 } g[c] += b.offset[h] || 0; if (b.over[h]) g[c] += f[i == 'x' ? 'width' : 'height']() * b.over[h] } else { var o = f[h]; g[c] = o.slice && o.slice(-1) == '%' ? parseFloat(o) / 100 * m : o } if (/^\d+$/.test(g[c])) g[c] = g[c] <= 0 ? 0 : Math.min(g[c], m); if (!a && b.queue) { if (l != g[c]) t(b.onAfterFirst); delete g[c] } }); t(b.onAfter); function t(a) { r.animate(g, j, b.easing, a && function () { a.call(this, n, b) }) } }).end() }; k.max = function (a, i) { var e = i == 'x' ? 'Width' : 'Height', h = 'scroll' + e; if (!d(a).is('html,body')) return a[h] - d(a)[e.toLowerCase()](); var c = 'client' + e, l = a.ownerDocument.documentElement, m = a.ownerDocument.body; return Math.max(l[h], m[h]) - Math.min(l[c], m[c]) }; function p(a) { return typeof a == 'object' ? a : { top: a, left: a } } })(jQuery);

;
// version 1.6.0
// http://welcome.totheinter.net/columnizer-jquery-plugin/
// created by: Adam Wulf @adamwulf, adam.wulf@gmail.com

(function($){

 $.fn.columnize = function(options) {


	var defaults = {
		// default width of columns
		width: 400,
		// optional # of columns instead of width
		columns : false,
		// true to build columns once regardless of window resize
		// false to rebuild when content box changes bounds
		buildOnce : false,
		// an object with options if the text should overflow
		// it's container if it can't fit within a specified height
		overflow : false,
		// this function is called after content is columnized
		doneFunc : function(){},
		// if the content should be columnized into a 
		// container node other than it's own node
		target : false,
		// re-columnizing when images reload might make things
		// run slow. so flip this to true if it's causing delays
		ignoreImageLoading : true,
		// should columns float left or right
		columnFloat : "left",
		// ensure the last column is never the tallest column
		lastNeverTallest : false,
		// (int) the minimum number of characters to jump when splitting
		// text nodes. smaller numbers will result in higher accuracy
		// column widths, but will take slightly longer
		accuracy : false,
		// don't automatically layout columns, only use manual columnbreak
		manualBreaks : false,
		// previx for all the CSS classes used by this plugin
		// default to empty string for backwards compatibility
		cssClassPrefix : ""
	};
	options = $.extend(defaults, options);

	if(typeof(options.width) == "string"){
		options.width = parseInt(options.width,10);
		if(isNaN(options.width)){
			options.width = defaults.width;
		}
	}

    return this.each(function() {
		var $inBox = options.target ? $(options.target) : $(this);
		var maxHeight = $(this).height();
		var $cache = $('<div></div>'); // this is where we'll put the real content
		var lastWidth = 0;
		var columnizing = false;
		var manualBreaks = options.manualBreaks;
		var cssClassPrefix = defaults.cssClassPrefix;
		if(typeof(options.cssClassPrefix) == "string"){
			cssClassPrefix = options.cssClassPrefix;
		}


		var adjustment = 0;

		$cache.append($(this).contents().clone(true));

		// images loading after dom load
		// can screw up the column heights,
		// so recolumnize after images load
		if(!options.ignoreImageLoading && !options.target){
			if(!$inBox.data("imageLoaded")){
				$inBox.data("imageLoaded", true);
				if($(this).find("img").length > 0){
					// only bother if there are
					// actually images...
					var func = function($inBox,$cache){ return function(){
							if(!$inBox.data("firstImageLoaded")){
								$inBox.data("firstImageLoaded", "true");
								$inBox.empty().append($cache.children().clone(true));
								$inBox.columnize(options);
							}
						};
					}($(this), $cache);
					$(this).find("img").one("load", func);
					$(this).find("img").one("abort", func);
					return;
				}
			}
		}

		$inBox.empty();

		columnizeIt();

		if(!options.buildOnce){
			$(window).resize(function() {
				if(!options.buildOnce){
					if($inBox.data("timeout")){
						clearTimeout($inBox.data("timeout"));
					}
					$inBox.data("timeout", setTimeout(columnizeIt, 200));
				}
			});
		}

		function prefixTheClassName(className, withDot){
			var dot = withDot ? "." : "";
			if(cssClassPrefix.length){
				return dot + cssClassPrefix + "-" + className;
			}
			return dot + className;
		}

		/**
		 * this fuction builds as much of a column as it can without
		 * splitting nodes in half. If the last node in the new column
		 * is a text node, then it will try to split that text node. otherwise
		 * it will leave the node in $pullOutHere and return with a height
		 * smaller than targetHeight.
		 * 
         * Returns a boolean on whether we did some splitting successfully at a text point
         * (so we know we don't need to split a real element). return false if the caller should
         * split a node if possible to end this column.
		 *
		 * @param putInHere, the jquery node to put elements into for the current column
		 * @param $pullOutHere, the jquery node to pull elements out of (uncolumnized html)
		 * @param $parentColumn, the jquery node for the currently column that's being added to
		 * @param targetHeight, the ideal height for the column, get as close as we can to this height
		 */
		function columnize($putInHere, $pullOutHere, $parentColumn, targetHeight){
			//
			// add as many nodes to the column as we can,
			// but stop once our height is too tall
			while((manualBreaks || $parentColumn.height() < targetHeight) &&
				$pullOutHere[0].childNodes.length){
				var node = $pullOutHere[0].childNodes[0];
				//
				// Because we're not cloning, jquery will actually move the element"
				// http://welcome.totheinter.net/2009/03/19/the-undocumented-life-of-jquerys-append/
				if($(node).find(prefixTheClassName("columnbreak", true)).length){
					//
					// our column is on a column break, so just end here
					return;
				}
				if($(node).hasClass(prefixTheClassName("columnbreak"))){
					//
					// our column is on a column break, so just end here
					return;
				}
				$putInHere.append(node);
			}
			if($putInHere[0].childNodes.length === 0) return;

			// now we're too tall, so undo the last one
			var kids = $putInHere[0].childNodes;
			var lastKid = kids[kids.length-1];
			$putInHere[0].removeChild(lastKid);
			var $item = $(lastKid);

			// now lets try to split that last node
			// to fit as much of it as we can into this column
			if($item[0].nodeType == 3){
				// it's a text node, split it up
				var oText = $item[0].nodeValue;
				var counter2 = options.width / 18;
				if(options.accuracy)
				counter2 = options.accuracy;
				var columnText;
				var latestTextNode = null;
				while($parentColumn.height() < targetHeight && oText.length){
					var indexOfSpace = oText.indexOf(' ', counter2);
					if (indexOfSpace != -1) {
						columnText = oText.substring(0, oText.indexOf(' ', counter2));
					} else {
						columnText = oText;
					}
					latestTextNode = document.createTextNode(columnText);
					$putInHere.append(latestTextNode);

					if(oText.length > counter2 && indexOfSpace != -1){
						oText = oText.substring(indexOfSpace);
					}else{
						oText = "";
					}
				}
				if($parentColumn.height() >= targetHeight && latestTextNode !== null){
					// too tall :(
					$putInHere[0].removeChild(latestTextNode);
					oText = latestTextNode.nodeValue + oText;
				}
				if(oText.length){
					$item[0].nodeValue = oText;
				}else{
					return false; // we ate the whole text node, move on to the next node
				}
			}

			if($pullOutHere.contents().length){
				$pullOutHere.prepend($item);
			}else{
				$pullOutHere.append($item);
			}

			return $item[0].nodeType == 3;
		}

		/**
		 * Split up an element, which is more complex than splitting text. We need to create 
		 * two copies of the element with it's contents divided between each
		 */
		function split($putInHere, $pullOutHere, $parentColumn, targetHeight){
			if($putInHere.contents(":last").find(prefixTheClassName("columnbreak", true)).length){
				//
				// our column is on a column break, so just end here
				return;
			}
			if($putInHere.contents(":last").hasClass(prefixTheClassName("columnbreak"))){
				//
				// our column is on a column break, so just end here
				return;
			}
			if($pullOutHere.contents().length){
				var $cloneMe = $pullOutHere.contents(":first");
				//
				// make sure we're splitting an element
				if($cloneMe.get(0).nodeType != 1) return;

				//
				// clone the node with all data and events
				var $clone = $cloneMe.clone(true);
				//
				// need to support both .prop and .attr if .prop doesn't exist.
				// this is for backwards compatibility with older versions of jquery.
				if($cloneMe.hasClass(prefixTheClassName("columnbreak"))){
					//
					// ok, we have a columnbreak, so add it into
					// the column and exit
					$putInHere.append($clone);
					$cloneMe.remove();
				}else if (manualBreaks){
					// keep adding until we hit a manual break
					$putInHere.append($clone);
					$cloneMe.remove();
				}else if($clone.get(0).nodeType == 1 && !$clone.hasClass(prefixTheClassName("dontend"))){
					$putInHere.append($clone);
					if($clone.is("img") && $parentColumn.height() < targetHeight + 20){
						//
						// we can't split an img in half, so just add it
						// to the column and remove it from the pullOutHere section
						$cloneMe.remove();
					}else if(!$cloneMe.hasClass(prefixTheClassName("dontsplit")) && $parentColumn.height() < targetHeight + 20){
						//
						// pretty close fit, and we're not allowed to split it, so just
						// add it to the column, remove from pullOutHere, and be done
						$cloneMe.remove();
					}else if($clone.is("img") || $cloneMe.hasClass(prefixTheClassName("dontsplit"))){
						//
						// it's either an image that's too tall, or an unsplittable node
						// that's too tall. leave it in the pullOutHere and we'll add it to the 
						// next column
						$clone.remove();
					}else{
						//
						// ok, we're allowed to split the node in half, so empty out
						// the node in the column we're building, and start splitting
						// it in half, leaving some of it in pullOutHere
						$clone.empty();
						if(!columnize($clone, $cloneMe, $parentColumn, targetHeight)){
							// this node still has non-text nodes to split
							// add the split class and then recur
							$cloneMe.addClass(prefixTheClassName("split"));
							if($cloneMe.children().length){
								split($clone, $cloneMe, $parentColumn, targetHeight);
							}
						}else{
							// this node only has text node children left, add the
							// split class and move on.
							$cloneMe.addClass(prefixTheClassName("split"));
						}
						if($clone.get(0).childNodes.length === 0){
							// it was split, but nothing is in it :(
							$clone.remove();
						}
					}
				}
			}
		}


		function singleColumnizeIt() {
			if ($inBox.data("columnized") && $inBox.children().length == 1) {
				return;
			}
			$inBox.data("columnized", true);
			$inBox.data("columnizing", true);

			$inBox.empty();
			$inBox.append($("<div class='"
				+ prefixTheClassName("first") + " "
				+ prefixTheClassName("last") + " "
				+ prefixTheClassName("column") + " "
				+ "' style='width:100%; float: " + options.columnFloat + ";'></div>")); //"
			$col = $inBox.children().eq($inBox.children().length-1);
			$destroyable = $cache.clone(true);
			if(options.overflow){
				targetHeight = options.overflow.height;
				columnize($col, $destroyable, $col, targetHeight);
				// make sure that the last item in the column isn't a "dontend"
				if(!$destroyable.contents().find(":first-child").hasClass(prefixTheClassName("dontend"))){
					split($col, $destroyable, $col, targetHeight);
				}

				while($col.contents(":last").length && checkDontEndColumn($col.contents(":last").get(0))){
					var $lastKid = $col.contents(":last");
					$lastKid.remove();
					$destroyable.prepend($lastKid);
				}

				var html = "";
				var div = document.createElement('DIV');
				while($destroyable[0].childNodes.length > 0){
					var kid = $destroyable[0].childNodes[0];
					if(kid.attributes){
						for(var i=0;i<kid.attributes.length;i++){
							if(kid.attributes[i].nodeName.indexOf("jQuery") === 0){
								kid.removeAttribute(kid.attributes[i].nodeName);
							}
						}
					}
					div.innerHTML = "";
					div.appendChild($destroyable[0].childNodes[0]);
					html += div.innerHTML;
				}
				var overflow = $(options.overflow.id)[0];
				overflow.innerHTML = html;

			}else{
				$col.append($destroyable);
			}
			$inBox.data("columnizing", false);

			if(options.overflow && options.overflow.doneFunc){
				options.overflow.doneFunc();
			}

		}

		/**
		 * returns true if the input dom node
		 * should not end a column.
		 * returns false otherwise
		 */
		function checkDontEndColumn(dom){
			if(dom.nodeType == 3){
				// text node. ensure that the text
				// is not 100% whitespace
				if(/^\s+$/.test(dom.nodeValue)){
						//
						// ok, it's 100% whitespace,
						// so we should return checkDontEndColumn
						// of the inputs previousSibling
						if(!dom.previousSibling) return false;
					return checkDontEndColumn(dom.previousSibling);
				}
				return false;
			}
			if(dom.nodeType != 1) return false;
			if($(dom).hasClass(prefixTheClassName("dontend"))) return true;
			if(dom.childNodes.length === 0) return false;
			return checkDontEndColumn(dom.childNodes[dom.childNodes.length-1]);
		}

		function columnizeIt() {
			//reset adjustment var
			adjustment = 0;
			if(lastWidth == $inBox.width()) return;
			lastWidth = $inBox.width();

			var numCols = Math.round($inBox.width() / options.width);
			var optionWidth = options.width;
			var optionHeight = options.height;
			if(options.columns) numCols = options.columns;
			if(manualBreaks){
				numCols = $cache.find(prefixTheClassName("columnbreak", true)).length + 1;
				optionWidth = false;
			}

//			if ($inBox.data("columnized") && numCols == $inBox.children().length) {
//				return;
//			}
			if(numCols <= 1){
				return singleColumnizeIt();
			}
			if($inBox.data("columnizing")) return;
			$inBox.data("columnized", true);
			$inBox.data("columnizing", true);

			$inBox.empty();
			$inBox.append($("<div style='width:" + (Math.floor(100 / numCols))+ "%; float: " + options.columnFloat + ";'></div>")); //"
			$col = $inBox.children(":last");
			$col.append($cache.clone());
			maxHeight = $col.height();
			$inBox.empty();

			var targetHeight = maxHeight / numCols;
			var firstTime = true;
			var maxLoops = 3;
			var scrollHorizontally = false;
			if(options.overflow){
				maxLoops = 1;
				targetHeight = options.overflow.height;
			}else if(optionHeight && optionWidth){
				maxLoops = 1;
				targetHeight = optionHeight;
				scrollHorizontally = true;
			}

			//
			// We loop as we try and workout a good height to use. We know it initially as an average 
			// but if the last column is higher than the first ones (which can happen, depending on split
			// points) we need to raise 'adjustment'. We try this over a few iterations until we're 'solid'.
			//
			// also, lets hard code the max loops to 20. that's /a lot/ of loops for columnizer,
			// and should keep run aways in check. if somehow someone has content combined with
			// options that would cause an infinite loop, then this'll definitely stop it.
			for(var loopCount=0;loopCount<maxLoops && loopCount<20;loopCount++){
				$inBox.empty();
				var $destroyable, className, $col, $lastKid;
				try{
					$destroyable = $cache.clone(true);
				}catch(e){
					// jquery in ie6 can't clone with true
					$destroyable = $cache.clone();
				}
				$destroyable.css("visibility", "hidden");
				// create the columns
				for (var i = 0; i < numCols; i++) {
					/* create column */
					className = (i === 0) ? prefixTheClassName("first") : "";
					className += " " + prefixTheClassName("column");
					className = (i == numCols - 1) ? (prefixTheClassName("last") + " " + className) : className;
					$inBox.append($("<div class='" + className + "' style='width:" + (Math.floor(100 / numCols))+ "%; float: " + options.columnFloat + ";'></div>")); //"
				}

				// fill all but the last column (unless overflowing)
				i = 0;
				while(i < numCols - (options.overflow ? 0 : 1) || scrollHorizontally && $destroyable.contents().length){
					if($inBox.children().length <= i){
						// we ran out of columns, make another
						$inBox.append($("<div class='" + className + "' style='width:" + (Math.floor(100 / numCols))+ "%; float: " + options.columnFloat + ";'></div>")); //"
					}
					$col = $inBox.children().eq(i);
					if(scrollHorizontally){
						$col.width(optionWidth + "px");
					}
					columnize($col, $destroyable, $col, targetHeight);
					// make sure that the last item in the column isn't a "dontend"
					split($col, $destroyable, $col, targetHeight);

					while($col.contents(":last").length && checkDontEndColumn($col.contents(":last").get(0))){
						$lastKid = $col.contents(":last");
						$lastKid.remove();
						$destroyable.prepend($lastKid);
					}
					i++;

					//
					// https://github.com/adamwulf/Columnizer-jQuery-Plugin/issues/47
					//
					// check for infinite loop.
					//
					// this could happen when a dontsplit or dontend item is taller than the column
					// we're trying to build, and its never actually added to a column.
					//
					// this results in empty columns being added with the dontsplit item
					// perpetually waiting to get put into a column. lets force the issue here
					if($col.contents().length === 0 && $destroyable.contents().length){
						//
						// ok, we're building zero content columns. this'll happen forever
						// since nothing can ever get taken out of destroyable.
						//
						// to fix, lets put 1 item from destroyable into the empty column
						// before we iterate
						$col.append($destroyable.contents(":first"));
					}else if(i == numCols - (options.overflow ? 0 : 1) && !options.overflow){
						//
						// ok, we're about to exit the while loop because we're done with all
						// columns except the last column.
						//
						// if $destroyable still has columnbreak nodes in it, then we need to keep
						// looping and creating more columns.
						if($destroyable.find(prefixTheClassName("columnbreak", true)).length){
							numCols ++;
						}
					}
				}
				if(options.overflow && !scrollHorizontally){
					var IE6 = false /*@cc_on || @_jscript_version < 5.7 @*/;
					var IE7 = (document.all) && (navigator.appVersion.indexOf("MSIE 7.") != -1);
					if(IE6 || IE7){
						var html = "";
						var div = document.createElement('DIV');
						while($destroyable[0].childNodes.length > 0){
							var kid = $destroyable[0].childNodes[0];
							for(i=0;i<kid.attributes.length;i++){
								if(kid.attributes[i].nodeName.indexOf("jQuery") === 0){
									kid.removeAttribute(kid.attributes[i].nodeName);
								}
							}
							div.innerHTML = "";
							div.appendChild($destroyable[0].childNodes[0]);
							html += div.innerHTML;
						}
						var overflow = $(options.overflow.id)[0];
						overflow.innerHTML = html;
					}else{
						$(options.overflow.id).empty().append($destroyable.contents().clone(true));
					}
				}else if(!scrollHorizontally){
					// the last column in the series
					$col = $inBox.children().eq($inBox.children().length-1);
					$destroyable.contents().each( function() {
						$col.append( $(this) );
					});
					var afterH = $col.height();
					var diff = afterH - targetHeight;
					var totalH = 0;
					var min = 10000000;
					var max = 0;
					var lastIsMax = false;
					var numberOfColumnsThatDontEndInAColumnBreak = 0;
					$inBox.children().each(function($inBox){ return function($item){
						var $col = $inBox.children().eq($item);
						var endsInBreak = $col.children(":last").find(prefixTheClassName("columnbreak", true)).length;
						if(!endsInBreak){
							var h = $col.height();
							lastIsMax = false;
							totalH += h;
							if(h > max) {
								max = h;
								lastIsMax = true;
							}
							if(h < min) min = h;
							numberOfColumnsThatDontEndInAColumnBreak++;
						}
					};
				}($inBox));

					var avgH = totalH / numberOfColumnsThatDontEndInAColumnBreak;
					if(totalH === 0){
						//
						// all columns end in a column break,
						// so we're done here
						loopCount = maxLoops;
					}else if(options.lastNeverTallest && lastIsMax){
						// the last column is the tallest
						// so allow columns to be taller
						// and retry
						//
						// hopefully this'll mean more content fits into
						// earlier columns, so that the last column
						// can be shorter than the rest
						adjustment += 30;

						targetHeight = targetHeight + 30;
						if(loopCount == maxLoops-1) maxLoops++;
					}else if(max - min > 30){
						// too much variation, try again
						targetHeight = avgH + 30;
					}else if(Math.abs(avgH-targetHeight) > 20){
						// too much variation, try again
						targetHeight = avgH;
					}else {
						// solid, we're done
						loopCount = maxLoops;
					}
				}else{
					// it's scrolling horizontally, fix the width/classes of the columns
					$inBox.children().each(function(i){
						$col = $inBox.children().eq(i);
						$col.width(optionWidth + "px");
						if(i === 0){
							$col.addClass(prefixTheClassName("first"));
						}else if(i==$inBox.children().length-1){
							$col.addClass(prefixTheClassName("last"));
						}else{
							$col.removeClass(prefixTheClassName("first"));
							$col.removeClass(prefixTheClassName("last"));
						}
					});
					$inBox.width($inBox.children().length * optionWidth + "px");
				}
				$inBox.append($("<br style='clear:both;'>"));
			}
			$inBox.find(prefixTheClassName("column", true)).find(":first" + prefixTheClassName("removeiffirst", true)).remove();
			$inBox.find(prefixTheClassName("column", true)).find(':last' + prefixTheClassName("removeiflast", true)).remove();
			$inBox.data("columnizing", false);

			if(options.overflow){
				options.overflow.doneFunc();
			}
			options.doneFunc();
		}
    });
 };
})(jQuery);
;
var aew = aew || {};
aew.cts = {

    getCookie: function () {
        if (!document.cookie) {
            return;
        }
        var cookies = document.cookie.split(';');
        for (var i = 0; i < cookies.length; i++) {
            var cookie = cookies[i];
            var index = cookie.indexOf('=');
            if (index > 0) {
                var name = cookie.substr(0, index);
                var regex = /^\s+|\s+$/g;
                name = name.replace(regex, '');
                if (name === '_cts') {
                    return cookie.substring(index + 1);
                }
            }
        }
        return null;
    },

    register: function (adId) {
        var cookie = aew.cts.getCookie();
        if (cookie) {
            var adIds = cookie.split(',');
            for (var i = 0; i < adIds.length; i++) {
                if (adIds[i] == adId) {
                    return;
                }
            }
            if (adIds.length > 50) {
                adIds.splice(0, 1);
            }
            adIds.push(adId);
            document.cookie = '_cts=' + adIds.join(',') + '; path=/';

        } else {
            document.cookie = '_cts=' + adId + '; path=/';
        }
    },

    show: function (link, suffix, labelId, adType, adId, sourcePage, pricePhoto) {
        if (link.aew_revealed) {
            return;
        }
        aew.cts.register(adId);
        wa_trackShowPhoneNew(adType, sourcePage, pricePhoto);
        jQuery(link).removeClass('at_btn at_smallBtn');
        jQuery("[groupkey='" + adId + "']").css('display', 'none');
        var label = document.getElementById(labelId);
        var regex = /X/g;
        var phoneNo = label.innerHTML.replace(regex, '');
        label.innerHTML = phoneNo + suffix;

        // For VDP contact seller bar.
        if ($("#contactSellerBar .csbPhoneNumber").length) {
            $("#contactSellerBar .csbPhoneNumber").html(phoneNo + suffix);
            $("#contactSellerBar .csbMaskedPhoneNumber").hide();
            $("#contactSellerBar .csbPhoneNumber").show();
        }

        link.aew_revealed = true;
    },

    coherent: function () {
        _cp('recordAction', 'conversion_phone', '&aam_uuid=' + (/aam_uuid=([^;&]*)[;&]/.exec(document.cookie) || [','])[1] + '&__gads=' + (/__gads=.*?ID=([^;:]*)[:;]*/.exec(document.cookie) || [','])[1]);
    }
};;
/*
 * Toastr
 * Copyright 2012-2015
 * Authors: John Papa, Hans Fjällemark, and Tim Ferrell.
 * All Rights Reserved.
 * Use, reproduction, distribution, and modification of this code is subject to the terms and
 * conditions of the MIT license, available at http://www.opensource.org/licenses/mit-license.php
 *
 * ARIA Support: Greta Krafsig
 *
 * Project: https://github.com/CodeSeven/toastr
 */
/* global define */
; (function (define) {
    define(['jquery'], function ($) {
        return (function () {
            var $container;
            var listener;
            var toastId = 0;
            var toastType = {
                error: 'error',
                info: 'info',
                success: 'success',
                warning: 'warning'
            };

            var toastr = {
                clear: clear,
                remove: remove,
                error: error,
                getContainer: getContainer,
                info: info,
                options: {},
                subscribe: subscribe,
                success: success,
                version: '2.1.1',
                warning: warning
            };

            var previousToast;

            return toastr;

            ////////////////

            function error(message, title, optionsOverride) {
                return notify({
                    type: toastType.error,
                    iconClass: getOptions().iconClasses.error,
                    message: message,
                    optionsOverride: optionsOverride,
                    title: title
                });
            }

            function getContainer(options, create) {
                if (!options) { options = getOptions(); }
                $container = $('#' + options.containerId);
                if ($container.length) {
                    return $container;
                }
                if (create) {
                    $container = createContainer(options);
                }
                return $container;
            }

            function info(message, title, optionsOverride) {
                return notify({
                    type: toastType.info,
                    iconClass: getOptions().iconClasses.info,
                    message: message,
                    optionsOverride: optionsOverride,
                    title: title
                });
            }

            function subscribe(callback) {
                listener = callback;
            }

            function success(message, title, optionsOverride) {
                return notify({
                    type: toastType.success,
                    iconClass: getOptions().iconClasses.success,
                    message: message,
                    optionsOverride: optionsOverride,
                    title: title
                });
            }

            function warning(message, title, optionsOverride) {
                return notify({
                    type: toastType.warning,
                    iconClass: getOptions().iconClasses.warning,
                    message: message,
                    optionsOverride: optionsOverride,
                    title: title
                });
            }

            function clear($toastElement, clearOptions) {
                var options = getOptions();
                if (!$container) { getContainer(options); }
                if (!clearToast($toastElement, options, clearOptions)) {
                    clearContainer(options);
                }
            }

            function remove($toastElement) {
                var options = getOptions();
                if (!$container) { getContainer(options); }
                if ($toastElement && $(':focus', $toastElement).length === 0) {
                    removeToast($toastElement);
                    return;
                }
                if ($container.children().length) {
                    $container.remove();
                }
            }

            // internal functions

            function clearContainer (options) {
                var toastsToClear = $container.children();
                for (var i = toastsToClear.length - 1; i >= 0; i--) {
                    clearToast($(toastsToClear[i]), options);
                }
            }

            function clearToast ($toastElement, options, clearOptions) {
                var force = clearOptions && clearOptions.force ? clearOptions.force : false;
                if ($toastElement && (force || $(':focus', $toastElement).length === 0)) {
                    $toastElement[options.hideMethod]({
                        duration: options.hideDuration,
                        easing: options.hideEasing,
                        complete: function () { removeToast($toastElement); }
                    });
                    return true;
                }
                return false;
            }

            function createContainer(options) {
                $container = $('<div/>')
                    .attr('id', options.containerId)
                    .addClass(options.positionClass)
                    .attr('aria-live', 'polite')
                    .attr('role', 'alert');

                $container.appendTo($(options.target));
                return $container;
            }

            function getDefaults() {
                return {
                    tapToDismiss: true,
                    toastClass: 'toast',
                    containerId: 'toast-container',
                    debug: false,

                    showMethod: 'fadeIn', //fadeIn, slideDown, and show are built into jQuery
                    showDuration: 300,
                    showEasing: 'swing', //swing and linear are built into jQuery
                    onShown: undefined,
                    hideMethod: 'fadeOut',
                    hideDuration: 1000,
                    hideEasing: 'swing',
                    onHidden: undefined,

                    extendedTimeOut: 1000,
                    iconClasses: {
                        error: 'toast-error',
                        info: 'toast-info',
                        success: 'toast-success',
                        warning: 'toast-warning'
                    },
                    iconClass: 'toast-info',
                    positionClass: 'toast-top-right',
                    timeOut: 5000, // Set timeOut and extendedTimeOut to 0 to make it sticky
                    titleClass: 'toast-title',
                    messageClass: 'toast-message',
                    target: 'body',
                    closeHtml: '<button type="button">&times;</button>',
                    newestOnTop: true,
                    preventDuplicates: false,
                    progressBar: false
                };
            }

            function publish(args) {
                if (!listener) { return; }
                listener(args);
            }

            function notify(map) {
                var options = getOptions();
                var iconClass = map.iconClass || options.iconClass;

                if (typeof (map.optionsOverride) !== 'undefined') {
                    options = $.extend(options, map.optionsOverride);
                    iconClass = map.optionsOverride.iconClass || iconClass;
                }

                if (shouldExit(options, map)) { return; }

                toastId++;

                $container = getContainer(options, true);

                var intervalId = null;
                var $toastElement = $('<div/>');
                var $titleElement = $('<div/>');
                var $messageElement = $('<div/>');
                var $progressElement = $('<div/>');
                var $closeElement = $(options.closeHtml);
                var progressBar = {
                    intervalId: null,
                    hideEta: null,
                    maxHideTime: null
                };
                var response = {
                    toastId: toastId,
                    state: 'visible',
                    startTime: new Date(),
                    options: options,
                    map: map
                };

                personalizeToast();

                displayToast();

                handleEvents();

                publish(response);

                if (options.debug && console) {
                    console.log(response);
                }

                return $toastElement;

                function personalizeToast() {
                    setIcon();
                    setTitle();
                    setMessage();
                    setCloseButton();
                    setProgressBar();
                    setSequence();
                }

                function handleEvents() {
                    $toastElement.hover(stickAround, delayedHideToast);
                    if (!options.onclick && options.tapToDismiss) {
                        $toastElement.click(hideToast);
                    }

                    if (options.closeButton && $closeElement) {
                        $closeElement.click(function (event) {
                            if (event.stopPropagation) {
                                event.stopPropagation();
                            } else if (event.cancelBubble !== undefined && event.cancelBubble !== true) {
                                event.cancelBubble = true;
                            }
                            hideToast(true);
                        });
                    }

                    if (options.onclick) {
                        $toastElement.click(function () {
                            options.onclick();
                            hideToast();
                        });
                    }
                }

                function displayToast() {
                    $toastElement.hide();

                    $toastElement[options.showMethod](
                        {duration: options.showDuration, easing: options.showEasing, complete: options.onShown}
                    );

                    if (options.timeOut > 0) {
                        intervalId = setTimeout(hideToast, options.timeOut);
                        progressBar.maxHideTime = parseFloat(options.timeOut);
                        progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;
                        if (options.progressBar) {
                            progressBar.intervalId = setInterval(updateProgress, 10);
                        }
                    }
                }

                function setIcon() {
                    if (map.iconClass) {
                        $toastElement.addClass(options.toastClass).addClass(iconClass);
                    }
                }

                function setSequence() {
                    if (options.newestOnTop) {
                        $container.prepend($toastElement);
                    } else {
                        $container.append($toastElement);
                    }
                }

                function setTitle() {
                    if (map.title) {
                        $titleElement.append(map.title).addClass(options.titleClass);
                        $toastElement.append($titleElement);
                    }
                }

                function setMessage() {
                    if (map.message) {
                        $messageElement.append(map.message).addClass(options.messageClass);
                        $toastElement.append($messageElement);
                    }
                }

                function setCloseButton() {
                    if (options.closeButton) {
                        $closeElement.addClass('toast-close-button').attr('role', 'button');
                        $toastElement.prepend($closeElement);
                    }
                }

                function setProgressBar() {
                    if (options.progressBar) {
                        $progressElement.addClass('toast-progress');
                        $toastElement.prepend($progressElement);
                    }
                }

                function shouldExit(options, map) {
                    if (options.preventDuplicates) {
                        if (map.message === previousToast) {
                            return true;
                        } else {
                            previousToast = map.message;
                        }
                    }
                    return false;
                }

                function hideToast(override) {
                    if ($(':focus', $toastElement).length && !override) {
                        return;
                    }
                    clearTimeout(progressBar.intervalId);
                    return $toastElement[options.hideMethod]({
                        duration: options.hideDuration,
                        easing: options.hideEasing,
                        complete: function () {
                            removeToast($toastElement);
                            if (options.onHidden && response.state !== 'hidden') {
                                options.onHidden();
                            }
                            response.state = 'hidden';
                            response.endTime = new Date();
                            publish(response);
                        }
                    });
                }

                function delayedHideToast() {
                    if (options.timeOut > 0 || options.extendedTimeOut > 0) {
                        intervalId = setTimeout(hideToast, options.extendedTimeOut);
                        progressBar.maxHideTime = parseFloat(options.extendedTimeOut);
                        progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;
                    }
                }

                function stickAround() {
                    clearTimeout(intervalId);
                    progressBar.hideEta = 0;
                    $toastElement.stop(true, true)[options.showMethod](
                        {duration: options.showDuration, easing: options.showEasing}
                    );
                }

                function updateProgress() {
                    var percentage = ((progressBar.hideEta - (new Date().getTime())) / progressBar.maxHideTime) * 100;
                    $progressElement.width(percentage + '%');
                }
            }

            function getOptions() {
                return $.extend({}, getDefaults(), toastr.options);
            }

            function removeToast($toastElement) {
                if (!$container) { $container = getContainer(); }
                if ($toastElement.is(':visible')) {
                    return;
                }
                $toastElement.remove();
                $toastElement = null;
                if ($container.children().length === 0) {
                    $container.remove();
                    previousToast = undefined;
                }
            }

        })();
    });
}(typeof define === 'function' && define.amd ? define : function (deps, factory) {
    if (typeof module !== 'undefined' && module.exports) { //Node
        module.exports = factory(require('jquery'));
    } else {
        window['toastr'] = factory(window['jQuery']);
    }
}));
;
var PrevNextBar = function (settings) {
    var self = this;

    self.dealerPage = false;

    settings = $.extend(settings, {
        resultItemSelector: '[sourceId][foreignId]',
        adBarPrevNextSelector: '.ad-bar-prev-next',
        previousLinkSelector: '.ad-bar-prev a',
        nextLinkSelector: '.ad-bar-next a',
        previousSelector: '.ad-bar-prev',
        nextSelector: '.ad-bar-next',
        previousImageSelector: '.ad-bar-prev-image',
        nextImageSelector: '.ad-bar-next-image',
        titleSelector: '.ad-bar-title'
    });

    /*#region .: Inits .  */


    self.initStorageForSearchResultsDataOnResultsPage = function(data, dealerPage) {
        if (typeof (Storage) === "undefined")
            return;

        if (typeof (dealerPage) !== "undefined" && dealerPage === true)
            self.dealerPage = dealerPage;

        self.setSearchResultsData(data);
        self.addSearchResultsDataUpsells(data.CurrentPage, data.UpsellCount, true);

        self.setupResultItems();
    };

    self.getLocalStorageName = function() {
        return self.dealerPage ? "SearchResultsDataDealerPage" : "SearchResultsData";
    };

    self.initPrevNextBar = function(sourceId, foreignId, enablePreviousNextBarWithPictures, dealerPage) {
        if (typeof (Storage) === "undefined")
            return;

        if (typeof (dealerPage) !== "undefined" && dealerPage === true)
            self.dealerPage = dealerPage;

        var data = self.getSearchResultsData();

        if (!data || !data.CompositeIds || data.CompositeIds.length == 0)
            return;

        var compositeId = sourceId + "-" + foreignId;
        var compositeIdIndex = data.CompositeIds.indexOf(compositeId);
        var currentIndex = self.getSearchResultsDataCurrentIndex();

        var refHolder = {
            currentIndex: currentIndex,
            compositeId: compositeId,
            compositeIdIndex: compositeIdIndex,
            data: data
        };

        var pnbar = getParameterByName('pnbar');

        if (pnbar == 1 && self.trygetPreviousCompositeIdIndex(refHolder)) {
            data = refHolder.data;
            compositeIdIndex = refHolder.compositeIdIndex;
        }

        if (pnbar == 2 && self.trygetNextCompositeIdIndex(refHolder)) {
            data = refHolder.data;
            compositeIdIndex = refHolder.compositeIdIndex;
        }

        if (compositeIdIndex < 0)
            return;

        if (self.trygetCurrentCompositeIdIndex(refHolder)) {
            compositeIdIndex = refHolder.compositeIdIndex;
        }

        self.setupPrevious(compositeIdIndex, data);
        self.setupNext(compositeIdIndex, data);
        self.setupPrevNextTitle(compositeIdIndex, data);

        $(settings.adBarPrevNextSelector).show();

        if (enablePreviousNextBarWithPictures === true) {
            $(settings.adBarPrevNextSelector).addClass('withPictures');
        }
    };

    /*#endregion */

    /*#region .: TryGets .  */

    self.trygetPreviousCompositeIdIndex = function(refHolder) {
        if (refHolder.currentIndex != -2 || !refHolder.data.PreviousData)
            return false;

        if (refHolder.data.PreviousData.CompositeIds.indexOf(refHolder.compositeId) == -1)
            return false;

        var oldNextData = $.extend({}, refHolder.data);
        oldNextData.PreviousData = null;
        oldNextData.NextData = null;

        refHolder.data = refHolder.data.PreviousData;
        refHolder.data.NextData = oldNextData;
        self.setSearchResultsData(refHolder.data);

        refHolder.compositeIdIndex = refHolder.data.CompositeIds.length - 1;
        self.setSearchResultsDataCurrentIndex(refHolder.compositeIdIndex);

        self.consoleLog('trygetPreviousCompositeIdIndex :: ' + refHolder.data.CurrentPage + ' :: ' + refHolder.data.NextData.CurrentPage);

        return true;
    };

    self.trygetNextCompositeIdIndex = function(refHolder) {
        if (refHolder.currentIndex != -2 || !refHolder.data.NextData)
            return false;

        if (refHolder.data.NextData.CompositeIds.indexOf(refHolder.compositeId) == -1)
            return false;

        var oldPreviousData = $.extend({}, refHolder.data);
        oldPreviousData.PreviousData = null;
        oldPreviousData.NextData = null;

        refHolder.data = refHolder.data.NextData;
        refHolder.data.PreviousData = oldPreviousData;
        self.setSearchResultsData(refHolder.data);

        refHolder.compositeIdIndex = 0;
        self.setSearchResultsDataCurrentIndex(refHolder.compositeIdIndex);

        self.consoleLog('trygetNextCompositeIdIndex :: ' + refHolder.data.CurrentPage + ' :: ' + refHolder.data.PreviousData.CurrentPage);

        return true;
    };

    self.trygetCurrentCompositeIdIndex = function(refHolder) {
        if (refHolder.currentIndex == -2 || refHolder.currentIndex == refHolder.compositeIdIndex)
            return false;

        if (refHolder.data.CompositeIds[refHolder.currentIndex] == refHolder.compositeId) {
            refHolder.compositeIdIndex = refHolder.currentIndex;
            return true;
        }

        self.setSearchResultsDataCurrentIndex(refHolder.compositeIdIndex);
        return false;
    };

    /*#endregion */

    /*#region .: Setups .  */

    self.setupResultItems = function () {
        self.setSearchResultsDataCurrentIndex(-1);

        $(settings.resultItemSelector).each(function (index, item) {
            var resultItem = $(item);
            resultItem.data('compositeIdIndex', index);
            resultItem.bind('click', function () {
                self.setSearchResultsDataCurrentIndex($(this).data('compositeIdIndex'));
            });
        });
    };

    self.setupPrevious = function(compositeIdIndex, data) {
        var previousPos = compositeIdIndex - 1;
        if (compositeIdIndex > 0) {
            self.setupPreviousLink(data, previousPos, previousPos);
        } else if (data.CurrentPage > 1) {
            if (data.PreviousData) {
                self.consoleLog('setupPrevious :: ' + data.CurrentPage + ' :: ' + data.PreviousData.CurrentPage);

                previousPos = data.PreviousData.CompositeIds.length - 1;
                self.setupPreviousLink(data.PreviousData, previousPos, -2);
            } else {
                self.loadSearchResultsData(data, data.CurrentPage - 1);
            }
        }
    };

    self.setupPreviousLink = function (data, index, clickIndex) {
        var url = self.getUrl(data, index, '1');
        var previousLink = $(settings.previousLinkSelector);
        previousLink.attr('href', url);
        previousLink.removeAttr('disabled');
        previousLink.bind('click', function() {
            self.setSearchResultsDataCurrentIndex(clickIndex);
            wa_trackEventNoInteraction('DV Next/Previous Navigation', 'Previous', WaData && WaData.pv ? WaData.pv : 'Not Defined', null);
        });

        if (data.AdImageUrls && data.AdImageUrls.length > 0) {
            var previous = $(settings.previousSelector);
            previous.addClass('hasPhoto');
            var previousImage = $(settings.previousImageSelector);
            previousImage.css('background-image', 'url(' + data.AdImageUrls[index] + ')');
            previousImage.addClass('hasPhoto');
        }
    };

    self.setupNext = function(compositeIdIndex, data) {
        var nextPos = compositeIdIndex + 1;
        if (nextPos < data.CompositeIds.length) {
            self.setupNextLink(data, nextPos, nextPos);
        } else if (data.CurrentPage < data.MaxPage) {
            if (data.NextData) {
                self.consoleLog('setupNext :: ' + data.CurrentPage + ' :: ' + data.NextData.CurrentPage);

                nextPos = 0;
                self.setupNextLink(data.NextData, nextPos, -2);
            } else {
                self.loadSearchResultsData(data, data.CurrentPage + 1);
            }
        }
    };

    self.setupNextLink = function (data, index, clickIndex) {
        var url = self.getUrl(data, index, '2');
        var nextLink = $(settings.nextLinkSelector);
        nextLink.attr('href', url);
        nextLink.removeAttr('disabled');
        nextLink.bind('click', function() {
            self.setSearchResultsDataCurrentIndex(clickIndex);
            wa_trackEventNoInteraction('DV Next/Previous Navigation', 'Next', WaData && WaData.pv ? WaData.pv : 'Not Defined', null);
        });

        if (data.AdImageUrls && data.AdImageUrls.length > 0) {
            var next = $(settings.nextSelector);
            next.addClass('hasPhoto');
            var nextImage = $(settings.nextImageSelector);
            nextImage.css('background-image', 'url(' + data.AdImageUrls[index] + ')');
            nextImage.addClass('hasPhoto');
        }
    };

    self.getUrl = function (data, index, pnbarValue) {
        var url = '/go/' + data.CompositeIds[index];
        if (data.CompositeIdUrls && data.CompositeIdUrls.length > index) {
            url = data.CompositeIdUrls[index];
        }

        url += url.indexOf('?') >= 0 ? '&' : '?';
        url += 'pnbar=' + pnbarValue;

        if (url.indexOf('showdpl') < 0)  {
            if (data.AbsolutePath.toLowerCase().indexOf("dealerpage") >= 0) {
                url += url.indexOf('?') >= 0 ? '&' : '?';
                url += 'showdpl=false';
            }
        }

        return url;
    };

    self.setupPrevNextTitle = function (compositeIdIndex, data) {
        var posSum = self.posSumSearchResultsDataUpsells(data.CurrentPage);
        var pos = compositeIdIndex + 1 + (data.RecordsPerPage * (data.CurrentPage - 1)) + posSum;

        var countSum = self.countSumSearchResultsDataUpsells(data.CurrentPage);
        var count = data.OrganicCount + countSum;

        $(settings.titleSelector).text(data.PageTitle.format(pos, count));
    };

    /*#endregion */

    /*#region .: Load Search Results Data .  */

    self.loadSearchResultsData = function(currentData, newPage) {
        self.consoleLog('loadSearchResultsData :: ' + currentData.CurrentPage + ' :: ' + newPage);

        var service = new AutomotiveExaleadWeb.WebServices.ResultsRefinement();

        service.LoadSearchResultsData(
            currentData.AbsolutePath,
            currentData.QueryString,
            currentData.RecordsStartingIndex,
            currentData.RecordsPerPage,
            currentData.CurrentPage,
            newPage,
            self.loadSearchResultsDataOnSuccess,
            self.loadSearchResultsDataOnError,
            { currentData: currentData, newPage: newPage }
        );
    };

    self.loadSearchResultsDataOnSuccess = function(data, callbackValues) {
        if (!data || !data.CompositeIds || data.CompositeIds.length == 0)
            return;

        var currentData = callbackValues.currentData;
        if (currentData.CurrentPage > callbackValues.newPage) {
            currentData.PreviousData = data;
            self.setupPreviousLink(data, data.CompositeIds.length - 1, -2);
        } else {
            currentData.NextData = data;
            self.setupNextLink(data, 0, -2);
        }

        self.setSearchResultsData(currentData);
        self.addSearchResultsDataUpsells(data.CurrentPage, data.UpsellCount);
    };

    self.loadSearchResultsDataOnError = function(data, callbackValues) {
        self.consoleLog('loadSearchResultsData :: ' + callbackValues.currentData.CurrentPage + ' :: ' + callbackValues.newPage);
        self.consoleLog(data._message);
    };

    /*#endregion */

    /*#region .: LocalStorage / Gets-Sets .  */

    /*#region .: Search Results Data .  */

    self.getSearchResultsData = function () {
        var dataString = localStorage.getItem(self.getLocalStorageName());
        if (dataString && dataString.length > 0)
            return JSON.parse(dataString);

        return null;
    };

    self.setSearchResultsData = function(data) {
        var dataString = JSON.stringify(data);
        localStorage.setItem(self.getLocalStorageName(), dataString);
    };

    /*#endregion */

    /*#region .: Current Index .  */

    self.getSearchResultsDataCurrentIndex = function() {
        var currentIndex = localStorage.getItem(self.getLocalStorageName() + ".CurrentIndex");
        return currentIndex == null ? -1 : currentIndex * 1;
    };

    self.setSearchResultsDataCurrentIndex = function(currentIndex) {
        localStorage.setItem(self.getLocalStorageName()  +".CurrentIndex", currentIndex);
    };

    /*#endregion */

    /*#region .: Upsells .  */

    self.getSearchResultsDataUpsells = function () {
        var upsellsString = localStorage.getItem(self.getLocalStorageName()  +".Upsells");
        if (upsellsString && upsellsString.length > 0)
            return JSON.parse(upsellsString);

        return [];
    };

    self.setSearchResultsDataUpsells = function (upsells) {
        var upsellsString = JSON.stringify(upsells);
        localStorage.setItem(self.getLocalStorageName()  + ".Upsells", upsellsString);
    };

    self.addSearchResultsDataUpsells = function (page, count, clear) {
        var item = { page: page, count: count };
        var upsells = self.getSearchResultsDataUpsells();

        for (var index = 0; index < upsells.length; index++) {
            if (upsells[index].page === item.page) {
                upsells[index].count = item.count;
                self.setSearchResultsDataUpsells(upsells);
                return;
            }
        }

        if (clear === true)
            upsells = [];

        upsells.push(item);
        self.setSearchResultsDataUpsells(upsells);
    };

    self.posSumSearchResultsDataUpsells = function (currentPage) {
        var sum = 0;
        var upsells = self.getSearchResultsDataUpsells();

        for (var index = 0; index < upsells.length; index++) {
            if (upsells[index].page < currentPage)
                sum += upsells[index].count;
        }

        return sum;
    };

    self.countSumSearchResultsDataUpsells = function (currentPage) {
        var sum = 0;
        var upsells = self.getSearchResultsDataUpsells();

        for (var index = 0; index < upsells.length; index++) {
            if (upsells[index].page <= currentPage)
                sum += upsells[index].count;
        }

        return sum;
    };

    /*#endregion */

    /*#endregion */

    self.consoleLog = function (text) {
        console.log(text);
    };

};

var prevNextBar = new PrevNextBar();;
var aew = aew || {};
aew.smartOfferModel = aew.smartOfferModel || {};

aew.smartOfferModel.SmoEntry = function (dealerId, companySourceId, companyForeignId, lastShown, count, offers) {
    this.dealerId = dealerId;
    this.companySourceId = companySourceId;
    this.companyForeignId = companyForeignId;
    this.lastShown = lastShown;
    this.count = count;
    this.offers = offers;
};

aew.smartOfferModel.PageView = function(companySourceId, companyForeignId, count) {
    this.CompanySourceId = companySourceId;
    this.CompanyForeignId = companyForeignId;
    this.PageViewsCount = count;
}

aew.smartOfferModel.Offer = function (companySourceId, companyForeignId, accepted, denomination, publicKey) {
    this.CompanySourceId = companySourceId;
    this.CompanyForeignId = companyForeignId;
    this.Accepted = accepted;
    this.Denomination = denomination;
    this.PublicKey = publicKey;
};

aew.smartOfferModel.EligibilityRequest = function (companySourceId, companyForeignId, sessionStart, userId, searchLocation) {
    var operation = new aew.smartOfferModel.Operations();
    this.Offers = operation.getAllOffers();
    this.PageViews = operation.getAllPageViews();
    this.CompanySourceId = companySourceId;
    this.CompanyForeignId = companyForeignId;
    this.SessionStart = sessionStart;
    this.UserId = userId;
    this.SearchLocation = searchLocation;
};

aew.smartOfferModel.AcceptOfferRequest = function (adSourceId, adForeignId, companySourceId, companyForeignId,
    email, firstName, lastName, phone, message, cardType, cardValue, key) {
    this.AdSourceId = adSourceId;
    this.AdForeignId = adForeignId;
    this.CompanySourceId = companySourceId;
    this.CompanyForeignId = companyForeignId;
    this.EmailAddress = email;
    this.FirstName = firstName;
    this.LastName = lastName;
    this.PhoneNumber = phone;
    this.Message = message;
    this.GiftCardType = cardType;
    this.Denomination = cardValue;
    this.PublicKey = key;
    this.TimeZoneOffset = -(new Date()).getTimezoneOffset()/60;
    this.DetailsPageUrl = window.location.href;
};

aew.smartOfferModel.Operations = function () {
    this._smoKey = "smoKey";
    this._tsKey = "tsKey";
    this._rejectSurveyKey = "smartOfferSurveyRejectedKey";

    this.getAllOffers = function () {
        var offers = [];
        if (Storage) {
            var o = this.getBaseSmo();
            if (o) {
                for (var p in o) {
                    if (o.hasOwnProperty(p) && o[p].offers) {
                        for (var i = 0; i < o[p].offers.length; i ++)
                            offers.push(o[p].offers[i]);
                    }
                }
            }
        }
        return offers;
    };

    this.getAllPageViews = function () {
        var views = [];
        if (Storage) {
            var o = this.getBaseSmo();
            if (o) {
                for (var p in o) {
                    if (o.hasOwnProperty(p)) {
                        views.push(new aew.smartOfferModel.PageView(o[p].companySourceId, o[p].companyForeignId, o[p].count));
                    }
                }
            }
        }
        return views;
    };

    this.pendingOfferValue = function(dealerId) {
        var offers = this.getSavedOffers(dealerId);
        var denomination = 0;
        if (offers) {
            for (var i = 0; i < offers.length; i++) {
                if (!offers[i].Accepted) {
                    denomination = offers[i].Denomination;
                    break;
                }
            }
        }
        return denomination;
    };

    this.pendingOfferPublicKey = function (dealerId) {
        var offers = this.getSavedOffers(dealerId);
        var key = "";
        if (offers) {
            for (var i = 0; i < offers.length; i++) {
                if (!offers[i].Accepted) {
                    key = offers[i].PublicKey;
                    break;
                }
            }
        }
        return key;
    };

    this.getSavedOffers = function (dealerId) {
        if (Storage) {
            var o = this.getSmo(dealerId);
            if (o && o.offers) {
                return o.offers;
            }
        }
        return null;
    };

    this.saveOffer = function (dealerId, offer) {
        if (Storage) {
            var o = this.getSmo(dealerId);
            if (o && o.offers) {
                o.offers.push(offer);
            }
            this.setSmo(o);
        }
    };

    this.saveAcceptedOffer = function (dealerId, offer) {
        if (Storage) {
            var o = this.getSmo(dealerId);
            if (o && o.offers) {
                for (var i = 0; i < o.offers.length; i++) {
                    if (o.offers[i].PublicKey == offer.PublicKey) {
                        o.offers[i].Accepted = offer.Accepted;
                        break;
                    }
                }
            }
            this.setSmo(o);
        }
    };

    this.dealerEntryExists = function (dealerId) {
        return this.getSmo(dealerId) != null;
    }

    this.incViewCount = function(dealerId) {
        var o = this.getSmo(dealerId);
        if (o) {
            o.count = o.count + 1;
        }
        this.setSmo(o);
    };

    this.getViewCount = function (dealerId) {
        var o = this.getSmo(dealerId);
        if (o) {
            return o.count;
        }
        return 0;
    };

    this.getSmo = function(dealerId) {
        if (dealerId && parseInt(dealerId) > 0) {
            var base = this.getBaseSmo();
            if (base && base[dealerId]) {
                var sel = base[dealerId];
                return sel;
            }
        }
        return null;
    };

    this.setSmo = function(o) {
        var base = this.getBaseSmo();
        if (base) {
            base[o.dealerId] = o;
            var str = JSON.stringify(base);
            localStorage.setItem(this._smoKey, str);
        }
    };

    this.setSurveyRejected = function () {
        if (Storage) {
            localStorage.setItem(this._rejectSurveyKey, "true");
        }
    };

    this.hasSurveyBeenRejected = function () {
        if (Storage) {
            var str = localStorage.getItem(this._rejectSurveyKey);
            if (str != null) {
                return str.toString().toLowerCase() == "true";
            }
        }
        return false;
    };

    this.getBaseSmo = function() {
        if (Storage) {
            var str = localStorage.getItem(this._smoKey);
            if (str !== null) {
                var o = JSON.parse(str);
                return o;
            } else {
                return {};
            }
        }
        return null;
    };

    this.clearSmo = function() {
        if (Storage) {
            localStorage.removeItem(this._smoKey);
        }
    };

    this.getTimeStamp = function () {
        if (Storage) {
            var str = localStorage.getItem(this._tsKey);
            return str;
        }
        return null;
    };

    this.resetTimeStamp = function() {
        if (Storage) {
            localStorage.setItem(this._tsKey, new Date());
        }
    };

    this.resetLastShown = function (dealerId) {
        var o = this.getSmo(dealerId);
        if (o) {
            o.lastShown = new Date();
        }
        this.setSmo(o);
    };

    this.getLastShown = function (dealerId) {
        var o = this.getSmo(dealerId);
        if (o) {
            return o.lastShown;
        }
        return 0;
    };
};

Date.prototype.yyyymmdd = function () {
    var yyyy = this.getFullYear().toString();
    var mm = (this.getMonth() + 1).toString(); // getMonth() is zero-based
    var dd = this.getDate().toString();
    return yyyy + "-" + (mm[1] ? mm : "0" + mm[0]) + "-" + (dd[1] ? dd : "0" + dd[0]); // padding
};

function dateDifferenceInDays(date1, date2) {
    var timeDiff = Math.abs(date2.getTime() - date1.getTime());
    var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));
    return diffDays;
};

var _currentDate = new Date(new Date().toISOString()).yyyymmdd();;
var aew = aew || {};

aew.smartOfferOptions = function () {
    var chkPrivacyTermsId;
    var pnlSmartOfferFormId;
    var pnlSmartOfferConfirmId;
    var pnlSmartOfferErrorId;
    var pnlSmartOfferTermsId;
    var pnlSmartOfferSurveyId;
    var lblFinePrintiTuneId;
    var lblFinePrintAmazonId;
    var lblFinePrintCineplexId;
    var lblFinePrintKegId;
    var txtContactFirstNameClientId;
    var txtContactLastNameClientId;
    var txtContactEmailClientId;
    var txtContactPhoneClientId;
    var txtContactCommentsClientId;
    var ddlGiftCardClientId;
    var formHeaderClientId;
    var confirmHeaderClientId;
    var errorHeaderClientId;
    var surveyHeaderClientId;
    var litNextStepsClientId;
    var languageCode;
    var domain;
    var dealerSourceId;
    var dealerForeignId;
    var dealerId;
    var adSourceId;
    var adForeignId;
    var adId;
    var companyName;
    var searchLocation;
    var spinnerMessage;
    var languageCode;
    var gaLeadTrackingScript;
    var userId;
    var modalWidth;
    var modalHeight;
    var href;
};

aew.smartOffer = function (options) {
    var _self = this;

    this.chkPrivacyTermsId = options.chkPrivacyTermsId;
    this.pnlSmartOfferFormId = options.pnlSmartOfferFormId;
    this.pnlSmartOfferConfirmId = options.pnlSmartOfferConfirmId;
    this.pnlSmartOfferErrorId = options.pnlSmartOfferErrorId;
    this.pnlSmartOfferTermsId = options.pnlSmartOfferTermsId;
    this.pnlSmartOfferSurveyId = options.pnlSmartOfferSurveyId;
    this.lblFinePrintiTuneId = options.lblFinePrintiTuneId;
    this.lblFinePrintAmazonId = options.lblFinePrintAmazonId;
    this.lblFinePrintCineplexId = options.lblFinePrintCineplexId;
    this.lblFinePrintKegId = options.lblFinePrintKegId;
    this.txtContactFirstNameClientId = options.txtContactFirstNameClientId;
    this.txtContactLastNameClientId = options.txtContactLastNameClientId;
    this.txtContactEmailClientId = options.txtContactEmailClientId;
    this.txtContactPhoneClientId = options.txtContactPhoneClientId;
    this.txtContactCommentsClientId = options.txtContactCommentsClientId;
    this.ddlGiftCardClientId = options.ddlGiftCardClientId;
    this.formHeaderClientId = options.formHeaderClientId;
    this.confirmHeaderClientId = options.confirmHeaderClientId;
    this.errorHeaderClientId = options.errorHeaderClientId;
    this.surveyHeaderClientId = options.surveyHeaderClientId;
    this.litNextStepsClientId = options.litNextStepsClientId;
    this.domain = options.domain;
    this.languageCode = options.languageCode;
    this.dealerSourceId = options.dealerSourceId;
    this.dealerForeignId = options.dealerForeignId;
    this.dealerId = options.dealerId;
    this.adSourceId = options.adSourceId;
    this.adForeignId = options.adForeignId;
    this.adId = options.adId;
    this.companyName = options.companyName;
    this.searchLocation = options.searchLocation;
    this.spinnerMessage = options.spinnerMessage;
    this.languageCode = options.languageCode;
    this.gaLeadTrackingScript = options.gaLeadTrackingScript;
    this.userId = options.userId;
    this.modalWidth = options.modalWidth;
    this.modalHeight = options.modalHeight;
    this.href = options.href;

    this.ResetPasswordEmailSent = false;
    this.activeView = "Smart Offers";
    this.trackModalCloseEvent = true;
    this.publicKey = "{c58e45f7-1388-4dc2-93dd-4240d0fa1b8c}";
    this.denomination = "25";
    this.offerAccepted = false;
    this.autoPopup = false;

    this.trackSurvey = function (action) {
        if (action == "Close" && _self.trackModalCloseEvent == false)
            return;
        var radioValue = _self.getSurvetSelection();
        wa_trackEventNoInteraction("Smart Offers Survey", action, radioValue);
        dataLayer.push({
            'event': 'gtm_ad_tdr_survey_close',
            'eventAction': 'tdr - survey - close'
        });
    };

    this.trackModal = function (action) {
        if (action == "Close" && _self.trackModalCloseEvent == false)
            return;

        var label = "{0}-{1}|{2}-{3}|${4}".format(_self.adSourceId, _self.adForeignId, _self.dealerSourceId, _self.dealerForeignId, _self.denomination);
        wa_trackEventNoInteraction(_self.activeView, action, label);

    };

    this.trackCTAEvent = function (action) { 
        var label = "{0}-{1}|{2}-{3}|${4}".format(_self.adSourceId, _self.adForeignId, _self.dealerSourceId, _self.dealerForeignId, _self.denomination);
        wa_trackEventNoInteraction(_self.activeView, action, label);
    };

    this.updateOfferAmount = function (amount) {
        $("span#" + _self.formHeaderClientId)[0].innerHTML = $("span#" + _self.formHeaderClientId)[0].innerHTML.format(amount);
        $("span#" + _self.confirmHeaderClientId)[0].innerHTML = $("span#" + _self.confirmHeaderClientId)[0].innerHTML.format(amount, _self.companyName);
        $("span#" + _self.errorHeaderClientId)[0].innerHTML = $("span#" + _self.errorHeaderClientId)[0].innerHTML.format(amount, _self.companyName);
        $("span#" + _self.surveyHeaderClientId)[0].innerHTML = $("span#" + _self.surveyHeaderClientId)[0].innerHTML.format(amount, _self.companyName);
        $("div.smoTileLn1")[0].innerHTML = $("div.smoTileLn1")[0].innerHTML.format(amount);
    };

    this.showSmartOfferModal = function () {
        showColorboxModal(_self.modalWidth, _self.modalHeight, _self.href, null, _self.smartOfferCloseCallback);
        $('.smartOfferColorbox #cboxClose').css({ 'left': '638px' });

        // Scroll to top & set modal top on iPad to ensure proper positioning regardless of orientation
        $('body.iPad').scrollTop(0);
        var ipadOrientation = Math.abs(window.orientation) == 90 ? 'landscape' : 'portrait';
        if (ipadOrientation == 'landscape') {
            $('.iPad #colorbox.smartOfferColorbox').css({ 'top': '60px' });
        }
        else if (ipadOrientation == 'portrait') {
            $('.iPad #colorbox.smartOfferColorbox').css({ 'top': '312px' });
        }

        var operation = new aew.smartOfferModel.Operations();
        operation.resetLastShown(_self.dealerId);

        _self.activeView = "Smart Offers";

        if (_self.autoPopup) {
            _self.trackModal("Impression");
            _self.autoPopup = false;
            dataLayer.push({
		'event': 'gtm_ad_tdr_vdp_impression',
		'eventAction': 'tdr – impression'
            }); 
        }
        _self.updateOfferAmount(_self.denomination);
        _self.showPanel("form");
    };

    this.showSmartOfferTile = function (amount) {
        _self.updateOfferAmount(amount);
        $('#divSmartOfferTile').show();

        if (!_self.autoPopup)
            _self.trackCTAEvent("CTA-Impression");
        dataLayer.push({
		'event': 'gtm_ad_tdr_cta_impression',
		'eventAction': 'tdr – cta impression'
        }); 
    };

    this.initialize = function () {
        // Prevent elements in modal from displaying before colorbox opens
        $('.smartOfferColorbox #cboxClose').css({ 'display': 'none' });
        $('#smartOfferPopup').hide();

        // Call colorbox open function
        $('#divSmartOfferTile').on('click', function () {
            _self.trackCTAEvent("CTA-Click");
            dataLayer.push({
                'event': 'gtm_ad_tdr_cta_click',
                'eventAction': 'tdr - cta click'
            });
            _self.showSmartOfferModal();
            return false;
        });

        // Add event listener for orientaiton change
        if (isIPadBrowser) {
            window.addEventListener('orientationchange',
                function () {
                    doOnOrientationChange_Modal(_self.modalWidth, _self.modalHeight);
                },
                false
            );
            // Initial execution if needed
            doOnOrientationChange_Modal(_self.modalWidth, _self.modalHeight);
        }
    };

    this.eligibilityCallback = function (result) {
        if (result != undefined && result.Denomination > 0) {
            var operation = new aew.smartOfferModel.Operations();

            _self.publicKey = result.PublicKey;
            _self.denomination = result.Denomination;
            var offer = new aew.smartOfferModel.Offer(_self.dealerSourceId, _self.dealerForeignId, null, result.Denomination, result.PublicKey);
            operation.saveOffer(_self.dealerId, offer);
            _self.initialize();
            _self.autoPopup = true;
            var timeout = $('#inputTestDriveRewardsOfferPopupTimeOut').val();
            _self.showSmartOfferTile(_self.denomination);
            setTimeout(function () {
                _self.showSmartOfferModal();
            }, timeout);
        }
    };

    this.checkEligibility = function () {
        var operation = new aew.smartOfferModel.Operations();

        if (!operation.getTimeStamp()) {
            operation.resetTimeStamp();
        } else if (operation.getTimeStamp() && dateDifferenceInDays(new Date(operation.getTimeStamp()), new Date()) > 30) {
            operation.resetTimeStamp();
            operation.clearSmo();
        }

        if (!operation.dealerEntryExists(_self.dealerId))
            operation.setSmo(new aew.smartOfferModel.SmoEntry(_self.dealerId, _self.dealerSourceId, _self.dealerForeignId, new Date(), 0, new Array));

        operation.incViewCount(_self.dealerId);

        var poValue = operation.pendingOfferValue(_self.dealerId);
        if (poValue > 0) {
            _self.initialize();

            _self.denomination = poValue;
            _self.publicKey = operation.pendingOfferPublicKey(_self.dealerId);

            if (!operation.getLastShown(_self.dealerId) || dateDifferenceInDays(new Date(operation.getLastShown(_self.dealerId)), new Date()) > 7) {
                _self.autoPopup = true;
                var timeout = $('#inputTestDriveRewardsOfferPopupTimeOut').val();
                setTimeout(function () {
                    _self.showSmartOfferModal();
                }, timeout);
            }
            _self.showSmartOfferTile(poValue);

            return;
        }

        var request = new aew.smartOfferModel.EligibilityRequest(_self.dealerSourceId, _self.dealerForeignId,
             new Date(operation.getTimeStamp()).toISOString(), _self.userId, _self.searchLocation);

        $.ajax({
            url: "/api/TestDrive/IsEligible",
            type: "POST",
            dataType: "json",
            data: JSON.stringify(request),
            contentType: "application/json",
            success: function (result) {
                _self.eligibilityCallback(result);
            }
        });
    };

    this.acceptOfferCallback = function (result) {
        if (result != undefined) {
            eval(_self.gaLeadTrackingScript);

            var operation = new aew.smartOfferModel.Operations();
            var offer = new aew.smartOfferModel.Offer(_self.dealerSourceId, _self.dealerForeignId, result.Accepted, result.Denomination, result.PublicKey);
            operation.saveAcceptedOffer(_self.dealerId, offer);
            _self.offerAccepted = true;

            $("span#" + _self.litNextStepsClientId)[0].innerHTML = $("span#" + _self.litNextStepsClientId)[0].innerHTML.format($("#" + _self.txtContactEmailClientId)[0].value);
            _self.showPanel('confirmation');
        }
    };

    this.lnkSubmitClick = function () {
        var form = $("#" + _self.pnlSmartOfferFormId);
        if (Page_ClientValidate("SmartOfferContactInfo")) {
            form.block({
                message: _self.spinnerMessage,
                css: {},
                overlayCSS: { opacity: 0.3 }
            });

            _self.trackModal("Complete");
            dataLayer.push({
                'event': 'gtm_ad_tdr_complete',
                'eventAction': 'tdr – complete'
            });
            var firstName = $("#" + _self.txtContactFirstNameClientId).val();
            var lastName = $("#" + _self.txtContactLastNameClientId).val();
            var email = $("#" + _self.txtContactEmailClientId).val();
            var phone = $("#" + _self.txtContactPhoneClientId).val();
            phone = (phone == $("#" + _self.txtContactPhoneClientId).attr("placeholder")) ? "" : phone;
            var message = $("#" + _self.txtContactCommentsClientId).val();
            var cartType = $("#" + _self.ddlGiftCardClientId).val();

            var request = new aew.smartOfferModel.AcceptOfferRequest(_self.adSourceId, _self.adForeignId, _self.dealerSourceId, _self.dealerForeignId,
                email, firstName, lastName, phone, message, cartType, _self.denomination, _self.publicKey);

            $.ajax({
                url: "/api/TestDrive/AcceptOffer",
                type: "POST",
                dataType: "json",
                headers: {
                    "Accept-Language": _self.languageCode
                },
                data: JSON.stringify(request),
                contentType: "application/json",
                success: function (result) {
                    _self.acceptOfferCallback(result);
                },
                error: function (result) {
                    _self.showPanel('error');
                },
                complete: function () {
                    form.unblock();
                }
            });
        }
    };

    this.smartOfferCloseCallback = function () {
        if (_self.offerAccepted) {
            $('#divSmartOfferTile').hide();
            _self.trackModal("Close After Complete");
            dataLayer.push({
                'event': 'gtm_ad_tdr_close_after_complete',
                'eventAction': 'tdr – close after complete'
            });
        } else {
            if (_self.activeView == "Smart Offers Survey")
                _self.trackSurvey("Close");
            else {
                _self.trackModal("Close");
                dataLayer.push({
                    'event': 'gtm_ad_tdr_close',
                    'eventAction': 'tdr – close'
                });
            }
        }
        _self.activeView = "Smart Offers";
    };

    this.ValidateCheckBox = function (sender, args) {
        if (document.getElementById(_self.chkPrivacyTermsId).checked == true) {
            args.IsValid = true;
        } else {
            args.IsValid = false;
        }
    };

    this.ShowHideCustomerValidator = function () {
        if (document.getElementById(_self.chkPrivacyTermsId).checked == true)
            $("span.cvChkPrivacyTerms").hide();
        else
            $("span.cvChkPrivacyTerms").show();
    };

    this.closeModal = function () {
        if (parent != null) {
            parent.jQuery.fn.colorbox.close();

            // Re-enable page scrolling & reset css on colorbox modal close
            $('body', window.parent.document).unbind('touchmove');
            $('body', window.parent.document).removeClass('noscroll');
            $('body', window.parent.document).removeAttr('style');
        }
    };

    this.showPanel = function (panelName) {
        var form = $("#" + _self.pnlSmartOfferFormId);
        var term = $("#" + _self.pnlSmartOfferTermsId);
        var confirm = $("#" + _self.pnlSmartOfferConfirmId);
        var error = $("#" + _self.pnlSmartOfferErrorId);
        var survey = $("#" + _self.pnlSmartOfferSurveyId);
        _self.activeView = "Smart Offers";

        form.hide();
        term.hide();
        confirm.hide();
        error.hide();
        survey.hide();

        if (panelName == 'terms') {
            term.show();
        }
        else if (panelName == 'confirmation') {
            confirm.show();
        }
        else if (panelName == 'error') {
            error.show();
        }
        else if (panelName == 'survey') {
            survey.show();
            _self.activeView = "Smart Offers Survey";
            _self.trackSurvey("Impression");
            dataLayer.push({
                'event': 'gtm_ad_tdr_survey_impression',
                'eventAction': 'tdr - survey -  impression'
            });
        }
        else {
            form.show();
        }

        $('#smartOfferPopup').css({ 'display': 'block' });
        this.trackModalCloseEvent = true;
    };

    this.surveySubmit = function () {
        _self.trackSurvey("Submit");

        _self.trackModalCloseEvent = false;
        _self.closeModal();


    };

    this.surveyBack = function () {
        _self.trackSurvey("Back");
        dataLayer.push({
            'event': 'gtm_ad_tdr_survey_back',
            'eventAction': 'tdr - survey - back'
        });
        _self.showPanel('form');
    };

    this.surveyNoThanks = function () {
        _self.trackSurvey("No Thanks");
        new aew.smartOfferModel.Operations().setSurveyRejected();
        _self.trackModalCloseEvent = false;
        _self.closeModal();
        dataLayer.push({
            'event': 'gtm_ad_tdr_survey_no_thanks',
            'eventAction': 'tdr - survey - no thanks'
        });
    };

    this.formNoThanks = function () {
        _self.trackModal("No Thanks");
        dataLayer.push({
            'event': 'gtm_ad_tdr_no_thanks',
            'eventAction': 'tdr – no thanks'
        });
        var operation = new aew.smartOfferModel.Operations();
        if (operation.hasSurveyBeenRejected())
        {
            _self.closeModal();

            return;
        }
        _self.showPanel("survey");
    };

    this.getSurvetSelection = function () {
        var selected = $("input:radio[name='surveyRadioGroup']:checked");
        if (selected.length == 0)
            return "No Answer";

        var label = selected.siblings("span").text();

        if (selected.siblings("textarea").length > 0) {
            var comments = selected.siblings("textarea").val();
            comments = (comments == selected.siblings("textarea").attr("placeholder")) ? "" : comments;
            label += "|" + comments;
            dataLayer.push({
                'event': 'gtm_ad_tdr_survey_submit',
                'eventAction': 'tdr - survey - submit',
                'eventLabel': label
            });
        }
        return label;
    };

    this.giftCardSelected = function (obj) {
        var iTune = $("#" + _self.lblFinePrintiTuneId);
        var amazon = $("#" + _self.lblFinePrintAmazonId);
        var cineplex = $("#" + _self.lblFinePrintCineplexId);
        var keg = $("#" + _self.lblFinePrintKegId);

        iTune.hide();
        amazon.hide();
        cineplex.hide();
        keg.hide();

        switch (obj.value) {
            case "80":
                iTune.show();
                break;
            case "86":
                amazon.show();
                break;
                //case "90":
                //    cineplex.show();
                //    break;
                //case "2":
                //    keg.show();
                //    break;
        }
    };
};;
function dl_trackEvent(eventType) {
    dataLayer.push({ 'event': eventType });
}

function dl_trackCarProof(carProofType) {
    dataLayer.push({ 'event': 'gtm_ad_carproof', 'carProofType': carProofType });
}

function dl_trackSaveToMyGarage(ordinalPosition, listKey) {
    if (!isNullOrUndefined(ordinalPosition) && !isNullOrUndefined(listKey))
        dataLayer.push({ 'event': 'gtm_garage_save_vehicle', 'list': listKey, 'listNumericalPosition': ordinalPosition });
    else
        dataLayer.push({ 'event': 'gtm_ad_garage_save_vehicle' });
}


function dl_trackRemoveFromMyGarage(ordinalPosition, listKey) {
    if (!isNullOrUndefined(ordinalPosition) && !isNullOrUndefined(listKey))
        dataLayer.push({ 'event': 'gtm_garage_remove_vehicle', 'list': listKey, 'listNumericalPosition': ordinalPosition });
    else
        dataLayer.push({ 'event': 'gtm_ad_garage_remove_vehicle' });
}

function dl_trackAddAdToCompare(ordinalPosition, listKey) {
    if (!isNullOrUndefined(ordinalPosition) && !isNullOrUndefined(listKey))
        dataLayer.push({ 'event': 'gtm_compare_add_vehicle', 'list': listKey, 'listNumericalPosition': ordinalPosition });
    else
        dataLayer.push({ 'event': 'gtm_ad_compare_add_vehicle' });
}

function dl_trackRemoveAdFromCompare(ordinalPosition, listKey) {
    if (!isNullOrUndefined(ordinalPosition) && !isNullOrUndefined(listKey))
        dataLayer.push({ 'event': 'gtm_compare_remove_vehicle', 'list': listKey, 'listNumericalPosition': ordinalPosition });
    else
        dataLayer.push({ 'event': 'gtm_ad_compare_remove_vehicle' });
}

function dl_trackViewMediaPhoto() {
    dataLayer.push({ 'event': 'gtm_ad_view_media', 'mediaType': 'photo' });
}

function dl_trackViewMediaVideo() {
    dataLayer.push({ 'event': 'gtm_ad_view_media', 'mediaType': 'video' });
}

function dl_trackContactPoster(isTestDrive, isMakeOffer, hasTradeIn, saveToGarage) {
    var contactMethod = isTestDrive ? "schedule test drive" : isMakeOffer ? "make an offer" : "general inquiry";
    var withTradeIn = hasTradeIn ? "yes" : "no";
    dataLayer.push({ 'event': 'gtm_ad_contact_poster', 'contactMethod': contactMethod, 'withTradeIn': withTradeIn });

    if (saveToGarage)
        dataLayer.push({ 'event': 'gtm_ad_garage_save_vehicle' });

}

function dl_trackContactPosterDealerPage(inquireType) {
    dataLayer.push({ 'event': 'gtm_dealer_inventory_email', 'eventLabel' : inquireType });

}

function dl_trackComparisonRemoveVehicle(ordinalPosition) {
    dataLayer.push({ 'event': 'gtm_comparison_remove_vehicle', 'listNumericalPosition': ordinalPosition });

}

function dl_trackComparisonGarageSaveVehicle(ordinalPosition) {
    dataLayer.push({ 'event': 'gtm_comparison_garage_save_vehicle', 'listNumericalPosition': ordinalPosition });
}

function dl_trackComparisonGarageRemoveVehicle(ordinalPosition) {
    dataLayer.push({ 'event': 'gtm_comparison_garage_remove_vehicle', 'listNumericalPosition': ordinalPosition });
}

function dl_trackCompareContactPoster(ordinalPosition, saveToGarage) {
    dataLayer.push({ 'event': 'gtm_compare_contact_poster', 'listNumericalPosition': ordinalPosition });
    if (saveToGarage)
        dataLayer.push({ 'event': 'gtm_compare_save_vehicle', 'listNumericalPosition': ordinalPosition });
}

function dl_trackComparisonViewMedia(ordinalPosition) {
    dataLayer.push({ 'event': 'gtm_comparison_view_media', 'listNumericalPosition': ordinalPosition, 'mediaType': 'photo' });
}

function dl_trackAdClick(ordinalPosition, listKey) {
    dataLayer.push({ 'event': 'gtm_ad_click', 'list': listKey, 'listNumericalPosition': ordinalPosition });
}

function dl_trackAddVehicleNote(ordinalPosition) {
    dataLayer.push({ 'event': 'gtm_add_vehicle_note', 'listNumericalPosition': ordinalPosition, 'list': 'myGarage' });
}

function dl_trackGarageRemoveAll() {
    dataLayer.push({ 'event': 'gtm_garage_remove_all', 'list': 'myGarage' });
}

function dl_trackAccountRegister(loginType) {
    dataLayer.push({ 'event': 'gtm_account_register', 'loginType': loginType });
}

function dl_trackAccountLogin(loginType) {
    dataLayer.push({ 'event': 'gtm_account_login', 'loginType': loginType });
}

function dl_trackSocialFanPage(socialNetwork) {
    dataLayer.push({ 'event': 'gtm_social_fan_page', 'socialNetwork': socialNetwork });
}

function dl_trackAppDownload(appPlatform) {
    dataLayer.push({ 'event': 'gtm_app_download_link_click', 'appPlatform': appPlatform });
}

function dl_trackAdSocialShare(socialNetwork) {
    dataLayer.push({ 'event': 'gtm_ad_social_share', 'socialNetwork': socialNetwork });
}

function dl_trackHotDealTileClick(tileTitle) {
    dataLayer.push({ 'event': 'gtm_hotDeal_tile_click', 'tileTitle': tileTitle });
}

function dl_leadSuccessFromPhotoModal() {
    dataLayer.push({
        'event': 'gtm_gallery_contact_poster',
        'contactMethod': 'gallery modal'
    });
}
function dl_trackSearchUpdates(fieldControl, fieldValue) {
    if (typeof fieldControl === "undefined" || fieldControl == null)
        return;

    var fieldName = dl_getFieldName(fieldControl.id);
    if (fieldName == null)
        return;

    dl_trackSearchUpdatesByName(fieldName, fieldValue);
}

function dl_trackSearchUpdatesByName(fieldName, fieldValue) {
    if (typeof fieldValue === "undefined" || fieldValue == null)
        return;

    if (typeof fieldName === "undefined" || fieldName == null)
        return;

    console.log("fieldName: " + fieldName + " fieldValue: " + fieldValue);
    eval("dataLayer.push({ 'searchUpdates': { " + fieldName + ": fieldValue.toLowerCase() } })");
}

function dl_trackLearnMorePriceAnalysisHeroClick() {
    dataLayer.push({
        'event': 'gtm_ad_trans_price_analysis_learnMore_click',
        'eventAction': 'trans – price analysis link click'
    }); 
}

function dl_tracktrackKeyFeaturesHeroClick() {
    dataLayer.push({
        'event': 'gtm_ad_trans_keyFeatures_click',
        'eventAction': 'trans – key features link click'
    });
}

function dl_trackConditionAnalysisHeroClick() {
    dataLayer.push({
        'event': 'gtm_ad_trans_conditionAnalysis_click',
        'eventAction': 'trans – condition analysis link click'
    });
}

function dl_trackFeatureHighlightsShowMoreClick() {
    dataLayer.push({
        'event': 'gtm_ad_trans_featureHL_expand_click',
        'eventAction': 'trans – feature highlights show more link click'
    });
}

function dl_trackCompareCpoClick() {
    dataLayer.push({
        'event': 'gtm_ad_trans_compare_cpo_click',
        'eventAction': 'trans – compare cpo link click'
    });
}

function dl_trackSeeWarrantyDetailsClick() {
    dataLayer.push({
        'event': 'gtm_ad_trans_see_warranty_details_click',
        'eventAction': 'trans - see warranty details click'
    });
}

function isNullOrUndefined(val) {
    return (typeof val === "undefined" || val == null || (typeof val === "string" && val.trim() == "undefined"));
}

function dl_getFieldName(id) {
    if (typeof id === "undefined" || id == null || id == '')
        return null;

    if (id.indexOf("MinPrice") >= 0)
        return "minPrice";
    else if (id.indexOf("MaxPrice") >= 0)
        return "maxPrice";
    else if (id.indexOf("cddlMake") >= 0)
        return "make";
    else if (id.indexOf("cddlModel") >= 0)
        return "model";
    else if (id.indexOf("txtPostalCode") >= 0)
        return "location";
    else if (id.indexOf("chkNew") >= 0)
        return "new";
    else if (id.indexOf("chkUsed") >= 0)
        return "used";
    else if (id.indexOf("chkCPO") >= 0)
        return "cpo";
    else if (id.indexOf("chkDamaged") >= 0)
        return "damaged";
    else if (id.indexOf("SubType") >= 0)
        return "subtype";
    else if (id.indexOf("Type") >= 0)
        return "type";
    else if (id.indexOf("MinYear") >= 0)
        return "minYear";
    else if (id.indexOf("MaxYear") >= 0)
        return "maxYear";
    else if (id.indexOf("Transmission") >= 0)
        return "transmission";
    else if (id.indexOf("FuelType") >= 0)
        return "fueltype";
    else if (id.indexOf("ExtColor") >= 0)
        return "exteriorColor";
    else if (id.indexOf("MinOdometer") >= 0)
        return "minKms";
    else if (id.indexOf("MaxOdometer") >= 0)
        return "maxKmsr";
    else if (id.indexOf("Keyword") >= 0)
        return "keyword";
    else if (id.indexOf("ExtColor") >= 0)
        return "extcolor";
    else if (id.indexOf("ExtColor") >= 0)
        return "extcolor";
    else if (id.indexOf("Dealer") >= 0)
        return "dealer";
    else if (id.indexOf("Private") >= 0)
        return "private";
    else if (id.indexOf("PriceOnly") >= 0)
        return "priceOnly";
    else if (id.indexOf("CustomPhoto") >= 0)
        return "customPhoto";
    else if (id.indexOf("CarproofOnly") >= 0)
        return "carproofOnly";
    else if (id.indexOf("MinLength") >= 0)
        return "minLength";
    else if (id.indexOf("MaxLength") >= 0)
        return "maxLength";
    else if (id.indexOf("MinHours") >= 0)
        return "minHours";
    else if (id.indexOf("MaxHours") >= 0)
        return "maxHours";
    else if (id.indexOf("Sleep") >= 0)
        return "sleep";
    else if (id.indexOf("SlideOut") >= 0)
        return "slideOut";
    else if (id.indexOf("Alternative") >= 0)
        return "alternative";
    else if (id.indexOf("Category") >= 0)
        return "category";
}

function dl_trackExpandCloseCustomizeMonthlyPayment(isExpand) {
    var eventName = isExpand ? 'gtm_ad_fincalc_open_payment_calc' : "gtm_ad_fincalc_close_payment_calc";
    var action = 'financial calculator – ' + (isExpand ? 'click on cta' : 'close');
    dataLayer.push({ 'event': eventName, 'eventCategory': 'ad', 'eventAction': action, 'eventLabel': '' });
}

function dl_trackVDPPreviousButtonClick() {
    dataLayer.push({
        'event': 'gtm_ad_prev'
    });
}

function dl_trackVDPNextButtonClick() {
    dataLayer.push({
        'event': 'gtm_ad_next'
    });
}

function dl_trackPrimeCreditRating(creditRating) {
    var primeRate = '';

    switch (creditRating) {
        case 'Excellent':
            primeRate = 'prime';
            break;
        case 'Very Good':
        case 'Good':
            primeRate = 'near prime';
            break;
        default:
            primeRate = 'deep sub prime';
            break;
    };

    dataLayer.push({
        'event': 'gtm_ad_subPrime_credit_rating',
        'eventAction': 'financial calculator - credit rating',
        'eventLabel': primeRate
    });
}

//#region Sub-Prime Form
function dl_trackSubPrimeFormOpen() {
    dataLayer.push({
        'event': 'gtm_ad_subPrimeForm_cta_click',
        'eventAction': 'sub prime form - cta click'
    });
}

function dl_trackSubPrimeFormNextStep(stepNavigatedTo) {
    dataLayer.push({
        'event': 'gtm_ad_subPrimeForm_navigation',
        'eventAction': 'sub prime form - navigation',
        'eventLabel': stepNavigatedTo
    });
}

function dl_trackSubPrimeFormComplete() {
    dataLayer.push({
        'event': 'gtm_ad_subPrimeForm_submit',
        'eventAction': 'sub prime form - submit'
    });
}

function dl_trackSubPrimeFormClose() {
    dataLayer.push({
        'event': 'gm_ad_subPrimeForm_close',
        'eventAction': 'sub prime form - close'
    });
}
//#endregion Sub-Prime Form

function dl_trackSortSelectionChange(eventChangeLabel) {
    dataLayer.push({
        'event': 'gtm_search_sort_change',
        'eventAction': 'sort order change',
        'eventLabel': eventChangeLabel
    });
}

function dl_trackPageSizeSelectionChange(eventChangeLabel) {
    dataLayer.push({
        'event': 'gtm_search_change_number_of_results',
        'eventAction': 'change number of search results shown',
        'eventLabel': eventChangeLabel
    });
}

function dl_trackSearchFailedInvalidInput() {
    dataLayer.push({
        'event': 'gtm_search_failed_location',
        'eventAction': 'failed location search - invalid input'
    });
}

function dl_trackSearchFailedPostalCodeNotFound() {
    dataLayer.push({
        'event': 'gtm_search_failed_location',
        'eventAction': 'failed location search - postal code not found'
    });
};
var aew = aew || {};

aew.CompareLinkParameters = function() {
    var pnlCompareClientId;
    var toolTipMessage;
    var toolTipCompareLinkText;
    var toolTipAddLinkText;
};

aew.CompareLink = function(parameters) {
    var self = this;

    this.pnlCompareClientId = parameters.pnlCompareClientId;
    this.toolTipMessage = parameters.toolTipMessage;
    this.toolTipCompareLinkText = parameters.toolTipCompareLinkText;
    this.toolTipAddLinkText = parameters.toolTipAddLinkText;

    $(document).ready(function() {
        if (!isIPadBrowser) {
            $('#' + self.pnlCompareClientId).qtip({
                position: {
                    my: 'bottom center',
                    at: 'top center',
                    target: $('#' + self.pnlCompareClientId),
                    adjust: {
                        resize: true,
                        x: 40,
                        y: 10
                    }
                },
                show: {
                    event: 'mouseover'
                },
                hide: {
                    fixed: true,
                    delay: 500
                },
                style: {
                    classes: 'qtip-light qtip-shadow qtip-rounded enableCompareTool compareVehicle',
                    tip: {
                        height: 15,
                        width: 12
                    }
                },
                content: {
                    text: function(event, api) {
                        var obj = $(self.toolTipMessage);
                        var currentCount = $('.compareNumber:first').text();

                        var tooltopCount = obj.find('.compareNumber');
                        tooltopCount.text(currentCount);

                        var linkText = '';
                        if (parseInt($('.compareNumber:first').text()) > 0) {
                            linkText = self.toolTipCompareLinkText;
                        } else {
                            linkText = self.toolTipAddLinkText;
                        }

                        var html = obj[0].outerHTML;
                        html = html.replace(/#TextLink#/g, linkText);
                        return html;
                    }
                }
            });
        }
    });
};;
var aew = aew || {};

aew.SaveToMyGarageLinkParameters = function () {
    var isUserSignedIn;
    var pnlSaveToMyGarageClientId;
    var removeToolTipMessage;
    var addToolTipMessage;
    var toolTipMessage;
};

aew.SaveToMyGarageLink = function (parameters) {
    var self = this;

    this.isUserSignedIn = parameters.isUserSignedIn;
    this.pnlSaveToMyGarageClientId = parameters.pnlSaveToMyGarageClientId;
    this.removeToolTipMessage = parameters.removeToolTipMessage;
    this.addToolTipMessage = parameters.addToolTipMessage;
    this.toolTipMessage = parameters.toolTipMessage;

    $(document).ready(function () {
        if (!isIPadBrowser) {
            $('#' + self.pnlSaveToMyGarageClientId).qtip({
                position: {
                    my: 'bottom center',
                    at: 'top center',
                    target: $('#' + self.pnlSaveToMyGarageClientId),
                    adjust: {
                        resize: true,
                        x: 43,
                        y: 10
                    }
                },
                show: {
                    event: 'mouseover'
                },
                hide: {
                    fixed: true,
                    delay: 500
                },
                style: {
                    classes: 'qtip-light qtip-shadow qtip-rounded enableCompareTool saveToMyGarage',
                    tip: {
                        height: 15,
                        width: 12
                    }
                },
                content: {
                    text: function (event, api) {
                        if (self.isUserSignedIn) {
                            return $(this).hasClass('saved') ?
                                self.removeToolTipMessage :
                                self.addToolTipMessage;
                        } else {
                            return self.toolTipMessage;
                        }
                    }
                }
            });
        }
    });
};;
var aew = aew || {};

aew.MobialsParameters = function () {
    var currentUICultureName;
};

aew.Mobials = function (parameters) {
    var self = this;
    this.currentUICultureName = parameters.currentUICultureName;

    $(document).ready(function () {
        $(window).resize(function () {
            // Center Mobials modal on window resize
            $('#mobials-detailed-review-container').css({
                position: 'absolute',
                left: ($(window).width() - $('#mobials-detailed-review-container').outerWidth()) / 2,
                top: ($(window).height() - $('#mobials-detailed-review-container').outerHeight()) / 2
            });

            // After Mobials modal is centered, return position to fixed to keep in place when scrolling
            $('#mobials-detailed-review-container').css({ position: 'fixed' });
        });

        // To initially run the function:
        $(window).resize();


        /*  TFS 37827 - Production - Mobials - Disable background scrolling and add gray background overlay */
        if ($('body').hasClass('ie8')) {
            /*  IE8 does not suport MutationObserver or Mutation Events.
                Check for DOM changes through custom code & execute applicable changes
            */

            (function (window) {
                var last = +new Date();
                var delay = 100; // default delay

                // Manage event queue
                var stack = [];

                // Public interface
                var onDomChange = function (fn, newdelay) {
                    if (newdelay) delay = newdelay;
                    stack.push(fn);
                };

                var last = document.getElementsByTagName('*');
                var lastlen = last.length;
                var timer = setTimeout(function check() {

                    // Get current document state 
                    var current = document.getElementsByTagName('*');
                    var len = current.length;

                    // If the length is different
                    if (len != lastlen) {
                        // Finish the loop early
                        last = [];
                    }

                    // Check every element in order
                    for (var i = 0; i < len; i++) {
                        if (current[i] !== last[i]) {
                            var now = +new Date();
                            if (now - last > delay) {
                                for (var i = 0; i < stack.length; i++) {
                                    stack[i]();
                                }
                                last = now;
                            }

                            last = current;
                            lastlen = len;
                            break;
                        }
                    }

                    // Watch for DOM change
                    setTimeout(check, delay);

                }, delay);

                // expose
                window.onDomChange = onDomChange;
            })(window);

            onDomChange(function () {
                // Check if Mobials modal exists / is open
                if (document.getElementById('mobials-detailed-review-container') != null) {
                    // Show background overlay
                    $('#mobialsOverlay').css({ display: 'block', 'filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=90)' });

                    // Disable background scrolling 
                    $('body', window.parent.document).css({ overflow: 'hidden', 'margin-left': '-17px' });
                }
                else {
                    // Hide background overlay
                    $('#mobialsOverlay').css({ display: 'none' });

                    // Enable background scrolling 
                    $('body').css({ overflow: 'auto', 'margin-left': '0px' });
                }
            });
        }
        else if ($('body').hasClass('ie10') || $('body').hasClass('ie9')) {
            /*  IE9-10 does not support MutationObserver.   Use Mutation Events instead  */

            // Listen for nodes inserted into DOM to see when Mobials modal is opened
            document.getElementById(self.currentUICultureName).addEventListener("DOMNodeInserted", function (e) {
                // Mobials modal is open - Check if node inserted into DOM is Mobials modal 
                if (e.target.id == "mobials-detailed-review-container") {
                    // Show background overlay
                    $('#mobialsOverlay').css({ display: 'block' });

                    // Disable background scrolling 
                    $('body', window.parent.document).css({ overflow: 'hidden', 'margin-left': '-17px' });
                }
            }, false);


            // Listen for nodes removed from DOM to see when Mobials modal is closed
            document.getElementById(self.currentUICultureName).addEventListener("DOMNodeRemoved", function (e) {
                // Mobials modal is closed - Check if node removed from DOM is Mobials modal
                if (e.target.id == "mobials-detailed-review-container") {
                    // Hide background overlay
                    $('#mobialsOverlay').css({ display: 'none' });

                    // Enable background scrolling 
                    $('body').css({ overflow: 'auto', 'margin-left': '0px' });
                }
            }, false);
        }
        else {
            /*  For modern browsers, use more efficient MutationObserver */

            // Setup callback function to listen for Mobials modal being added and removed from DOM
            var fnCallback = function (mutations) {
                mutations.forEach(function (mutation) {
                    if (document.getElementById('mobials-detailed-review-container') == null)       // Mobials modal is closed
                    {
                        // Hide background overlay
                        $('#mobialsOverlay').css({ display: 'none' });

                        // Enable background scrolling 
                        $('body').css({ overflow: 'auto', 'margin-left': '0px' });
                    }
                    else    // Mobials modal is open
                    {
                        // Show background overlay
                        $('#mobialsOverlay').css({ display: 'block' });

                        // Disable background scrolling 
                        $('body', window.parent.document).css({ overflow: 'hidden', 'margin-left': '-17px' });
                    }
                });
            };

            /*  Create observer and get our target element
                First, check if browser is an older version of Chrome or Safari 
                that requires Webkit prefix for MutationObserver to work
            */

            // Detect if old WebKit browser

            var is_chrome = navigator.userAgent.indexOf("Chrome/") > -1;
            var is_safari = navigator.userAgent.indexOf("Safari/") > -1;

            // Detect if Chrome version older that v.27
            if (is_chrome == true && navigator.userAgent.substring(navigator.userAgent.indexOf("Chrome/") + 7, navigator.userAgent.indexOf("Chrome/") + 9) < 27)     // Is Chrome version < 27
            {
                var is_oldChrome = true;
            }

            // Detect if Safari version 3 through 6.0 (any platform) or version 6.1 on iPad
            if (is_safari == true && ((navigator.userAgent.indexOf("Version/3") > -1) || (navigator.userAgent.indexOf("Version/4") > -1) || (navigator.userAgent.indexOf("Version/5") > -1) || (navigator.userAgent.indexOf("Version/6.0") > -1) || (navigator.userAgent.indexOf("Version/6.1") > -1 && navigator.userAgent.indexOf("iPad") > -1)))    // Is Safari
            {
                var is_oldSafari = true;
            }

            var observer;
            var elTarget = document.querySelector("#" + self.currentUICultureName);
            var objConfig = {
                childList: true,
                subtree: true,
                attributes: false,
                characterData: false
            };

            // Create observer according to browser version 
            if (is_oldChrome == true || is_oldSafari === true) {
                try {
                    observer = new WebKitMutationObserver(fnCallback); // Is older version of Chrome or Safari that does not support MutationObserver without Webkit prefix
                }
                catch (err) {
                    console.log('Error while instantiating \'WebKitMutationObserver\'. ' + err);
                }
            }

            if (!observer) {
                try {
                    observer = new MutationObserver(fnCallback); // Is browser with full MutationObserver support
                }
                catch (err) {
                    console.log('Error while instantiating \'MutationObserver\'. ' + err);
                }
            }

            if (observer) {
                // Start observing
                observer.observe(elTarget, objConfig);
            } else {
                console.log('No observer found');
            }
        }
    });

}


;
$(document).ready(function () {
    $('#kanetixLink').click(function () {
        dataLayer.push({ 'event': 'gtm_npv_kanetix_quote' }); 	
    });
});
;
aew.listingHistory = function () {
    this.hideTimeOnLot = function() {
        $("div.priceSummary .priceDrop").removeClass("priceDrop").addClass("timeOnLot");
    };
};;
var aew = aew || {};

aew.contactSellerParams = function () {
    var btnSendMessage;
    var pnlContactForm;
    var spinnerMessage;
    var txtContactComments;
    var commentsPrepopulatedTextForGeneralInquiry;
    var commentsPrepopulatedTextForTestDrive;
    var commentsPrepopulatedTextForMakeOffer;
    var hfSelectedTab;
    var txtTraderInDesc;
    var rbTradeInYes;
    var tabs;
    var isShowMobials;
};

aew.contactSeller = function(parameters) {
    var self = this;
// Global variables
    var commentClickCount = 0;
    self.btnSendMessage = parameters.btnSendMessage;
    self.pnlContactForm = parameters.pnlContactForm;
    self.spinnerMessage = parameters.spinnerMessage;
    self.txtContactComments = parameters.txtContactComments;
    self.commentsPrepopulatedTextForGeneralInquiry = parameters.commentsPrepopulatedTextForGeneralInquiry;
    self.commentsPrepopulatedTextForTestDrive = parameters.commentsPrepopulatedTextForTestDrive;
    self.commentsPrepopulatedTextForMakeOffer = parameters.commentsPrepopulatedTextForMakeOffer;
    self.hfSelectedTab = parameters.hfSelectedTab;
    self.txtTraderInDesc = parameters.txtTraderInDesc;
    self.rbTradeInYes = parameters.rbTradeInYes;
    self.tabs = parameters.tabs;
    self.isShowMobials = parameters.isShowMobials;
    

    self.contactSeller_RegisterAjaxRequestMethods = function() {
        if (typeof (Sys.WebForms) !== 'undefined') {
            try {
                // Get a reference to the PageRequestManager and hook _initializeRequest and _endRequest, to run our code at the begin and end of any async postbacks that occur
                var prm = Sys.WebForms.PageRequestManager.getInstance();
                if (prm != null) {
                    prm.add_initializeRequest(self.contactSeller_AjaxInitializeRequest);
                    prm.add_endRequest(self.contactSeller_AjaxEndRequest);
                }
            } catch (err) {
            }
        }
    }

// Executed anytime an async postback occurs
    self.contactSeller_AjaxInitializeRequest = function(sender, args) {
        // Reset the comment textbox click count
        commentClickCount = 0;
    }

// Executed when the async postback completes
    self.contactSeller_AjaxEndRequest = function(sender, args) {
        try {
            if (args.get_error() != undefined) {
                args.set_errorHandled(true);
            }
            // Get a reference to the element that raised the postback
            if (sender._postBackSettings.sourceElement != null) {
                var id = sender._postBackSettings.sourceElement.id;
                if (id == self.btnSendMessage) {
                    $("#"+self.pnlContactForm).unblock();
                }
            }

            if (typeof tpDealerTrust !== "undefined" && typeof tpDealerTrust.adjustLayout === "function") {
                tpDealerTrust.adjustLayout();
            }
        } catch (err) {
        }
    }

    self.contactSeller_SendMessage_OnClientClick = function() {
        if (Page_ClientValidate("ContactInfo")) {
            $("#"+self.pnlContactForm).block({
                message: self.spinnerMessage,
                css: {},
                overlayCSS: { opacity: 0.3 }
            });
        } else {
            var i;
            for (i = 0; i < Page_Validators.length; i++) {
                var validator = Page_Validators[i];
                if (validator.validationGroup == "ContactInfo" && validator.id == self.txtContactComments && validator.isvalid == false)
                {
                    wa_trackEventNoInteraction("Email Leads", "No Message Entered", "Message Required", null);
                    break;
                }
            }
        }
    }

    self.contactSeller_SaveToGarage_OnClientClick = function() {
        dl_trackSaveToMyGarage();
    }


    self.ContactComments_OnClick = function(ctrl) {
        commentClickCount++;
        if (commentClickCount == 1)
            $("#" + ctrl.id).height(90);
    }

    self.redirectToLoginPage = function(url) {
        window.location.href = url;
        return false;
    }

    var contactComments = new Object();
    var prevTabIndex = "1";

    self.initContactComments = function() {
        contactComments = new Object();
        contactComments["1"] = self.commentsPrepopulatedTextForGeneralInquiry;
        contactComments["2"] = self.commentsPrepopulatedTextForTestDrive;
        contactComments["3"] = self.commentsPrepopulatedTextForMakeOffer;
        prevTabIndex = "1";
    }


// Change the prepopulated text in the contact comments  
    self.setCommentsPrepopulatedText = function() {
        // Save the comment text in the previous tab
        contactComments[prevTabIndex] = $("#"+self.txtContactComments).val();
        var tabIndex = $("#"+self.hfSelectedTab).val();
        // Show the comment in the selected tab
        $("#"+self.txtContactComments).val(contactComments[tabIndex]);
        prevTabIndex = tabIndex;
    }

    self.setSelectedTabIndex = function(tabIndex) {
        $("#"+self.hfSelectedTab).val(tabIndex);
        self.setCommentsPrepopulatedText();
    }

// Show / hide the trade in desc textbox based on the selection of the radio button
    self.setTradeInDesc = function() {
        // Initially, hide the Trade In description textbox
        $("#"+self.txtTraderInDesc).hide();
        $(".tradeInText input").click(function() {
            // Show the textbox if Yes is seleted. Otherwise, hide it
            if ($("#"+self.rbTradeInYes).is(":checked")) {
                $("#"+self.txtTraderInDesc).show();
            } else {
                $("#"+self.txtTraderInDesc).hide();
            }
        });
    }
    self.loadMobials = function() {
        jQuery.ajax({
            url: "http://api.mobials.com/api/v1?language=en&key=de78c1f0a24c272e078c7e3400689df7",
            dataType: 'script',
            async: true
        });
    }
    $(document).ready(function() {
        self.initContactComments();

        $("#"+self.tabs).tabs({ "selected": 0 });

        // Prevent Contact seller tab flash of unstyled content (FOUC) pt 2/2
        $("#"+self.tabs).css("display", "block");

        self.setTradeInDesc();
        self.showMobials(self.isShowMobials);
    });

    var mobialsAttempts = 0;

    self.showMobials = function(isShowMobials) {
        if (isShowMobials && mobialsAttempts <= 3) {
            mobialsAttempts++;
            var mobials = $('div.mobials-root')[0];
            try {
                MOBIALS.showDetailedRatingsIFrame(jQuery.Event("ready", { target: mobials }));
            } catch (e) {
                setTimeout(function() {
                    self.showMobials(isShowMobials);
                }, 1000);
            }
        }
    }
};
